{"ast":null,"code":"import axios from 'axios';\nexport default async function getResources() {\n  //axios\n  await axios.get('api url').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\nexport async function postData() {\n  //axios\n  await axios.post('api url').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 캘린더 API 통신 시작 */\n//캘린더 데이터 가져오기\n\nexport async function getTodoDataForCalendar() {\n  //axios\n  await axios.get('api url').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 캘린더 API 통신 시작 */\n\n/* 목표 API 통신 시작 */\n//POST 메서드로 전송할 데이터\n// let formData = new FormData(); \n// formData.append('key', value); // key-value (키-값)의 형태로 데이터 추가함\n\nexport const postGoalsData = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: \"Test\",\n      body: \"I am testing!\",\n      userId: 1\n    })\n  }).then(response => console.log(response)).catch(err => console.log(err));\n};\n/* 목표 API 통신 끝 */\n\n/* 투두 API 통신 시작 */\n//objTodosDataResult 캘린더 날짜로 받아오기\n\nexport async function getTodosData() {\n  //axios\n  await axios.get('https://jsonplaceholder.typicode.com/todos/1').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 투두 API 통신 시작 */","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/api/apiCommunicate.js"],"names":["axios","getResources","get","then","Response","console","log","data","catch","Error","postData","post","getTodoDataForCalendar","postGoalsData","response","fetch","method","headers","body","JSON","stringify","title","userId","err","getTodosData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,YAAf,GAA+B;AAE5C;AACA,QAAMD,KAAK,CAACE,GAAN,CAAU,SAAV,EACLC,IADK,CACCC,QAAD,IAAY;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAA2B,GADxC,EAELC,KAFK,CAEEC,KAAD,IAAS;AAACJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAAmB,GAF9B,CAAN;AAGD;AAGD,OAAO,eAAeC,QAAf,GAA2B;AAEhC;AACA,QAAMV,KAAK,CAACW,IAAN,CAAW,SAAX,EACLR,IADK,CACCC,QAAD,IAAY;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAA2B,GADxC,EAELC,KAFK,CAEEC,KAAD,IAAS;AAACJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAAmB,GAF9B,CAAN;AAGD;AAED;AAEA;;AACA,OAAO,eAAeG,sBAAf,GAAyC;AAE9C;AACA,QAAMZ,KAAK,CAACE,GAAN,CAAU,SAAV,EACLC,IADK,CACCC,QAAD,IAAY;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAA2B,GADxC,EAELC,KAFK,CAEEC,KAAD,IAAS;AAACJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAAmB,GAF9B,CAAN;AAGD;AAKD;;AAIA;AAEA;AACA;AACA;;AAGA,OAAO,MAAMI,aAAa,GAAG,YAAY;AAEvC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+C;AACzEC,IAAAA,MAAM,EAAE,MADiE;AAEzEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFgE;AAKzEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAE,MADY;AAEnBH,MAAAA,IAAI,EAAE,eAFa;AAGnBI,MAAAA,MAAM,EAAE;AAHW,KAAf;AALmE,GAA/C,CAAL,CAWtBnB,IAXsB,CAWhBW,QAAD,IAAcT,OAAO,CAACC,GAAR,CAAYQ,QAAZ,CAXG,EAYtBN,KAZsB,CAYhBe,GAAG,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,GAAZ,CAZS,CAAvB;AAaD,CAfM;AAmBP;;AAGA;AAGA;;AAEA,OAAO,eAAeC,YAAf,GAA+B;AAEpC;AACA,QAAMxB,KAAK,CAACE,GAAN,CAAU,8CAAV,EACLC,IADK,CACCC,QAAD,IAAY;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAA2B,GADxC,EAELC,KAFK,CAEEC,KAAD,IAAS;AAACJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAAmB,GAF9B,CAAN;AAGD;AAMD","sourcesContent":["import axios from 'axios';\r\n\r\nexport default async function getResources () {\r\n\r\n  //axios\r\n  await axios.get('api url')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\nexport async function postData () {\r\n\r\n  //axios\r\n  await axios.post('api url')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n/* 캘린더 API 통신 시작 */\r\n\r\n//캘린더 데이터 가져오기\r\nexport async function getTodoDataForCalendar () {\r\n\r\n  //axios\r\n  await axios.get('api url')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n\r\n\r\n/* 캘린더 API 통신 시작 */\r\n\r\n\r\n\r\n/* 목표 API 통신 시작 */\r\n\r\n//POST 메서드로 전송할 데이터\r\n// let formData = new FormData(); \r\n// formData.append('key', value); // key-value (키-값)의 형태로 데이터 추가함\r\n\r\n\r\nexport const postGoalsData = async () => {\r\n\r\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title: \"Test\",\r\n      body: \"I am testing!\",\r\n      userId: 1,\r\n    }),\r\n  })\r\n  .then((response) => console.log(response))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\n\r\n\r\n/* 목표 API 통신 끝 */\r\n\r\n\r\n/* 투두 API 통신 시작 */\r\n\r\n\r\n//objTodosDataResult 캘린더 날짜로 받아오기\r\n\r\nexport async function getTodosData () {\r\n\r\n  //axios\r\n  await axios.get('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n\r\n\r\n\r\n/* 투두 API 통신 시작 */\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}