{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\exploresearch\\\\Follower.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport List from '@mui/material/List';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport API from '../../api/API';\nimport axios from 'axios';\nimport '../../stylesheets/Follow.css'; //  ** 할일 **\n// 팔로워 의 설정 버튼 팝업 확인하기 \n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \n// style : 화면의 넓이, font, fontsize 조정 \n//https://jsonplaceholder.typicode.com/todos/1\n//https://clonetodo.herokuapp.com/users?page=2\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst login = () => {\n  const data = {\n    account: \"test\",\n    \"password\": \"1234\"\n  };\n  axios.post(\"https://clonetodo.herokuapp.com/login\", data).then(response => {\n    console.log(response);\n  });\n};\n\nconst getAPI = () => {\n  axios.get(\"https://clonetodo.herokuapp.com/api/v1/goals/1\").then(response => {\n    console.log(response);\n  });\n};\n\nconst FollowerData = [{\n  \"strUserName\": \"🍈메로나\",\n  \"strUserId\": \"merona\",\n  \"strUserEmail\": \"useremail@email.com\",\n  \"strUserInfo\": \"🍈메로나의 투두리스트입니다\",\n  \"dtTodo\": [{\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 1,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일2\",\n    \"ynComplete\": \"N\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }],\n  \"isFollower\": true,\n  \"isFollowing\": true\n}, {\n  \"strUserName\": \"두두\",\n  \"strUserId\": \"dodo\",\n  \"strUserEmail\": \"useremail@email.com\",\n  \"strUserInfo\": \"dodo의 투두리스트입니다\",\n  \"dtTodo\": [{\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 1,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일2\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }],\n  \"isFollower\": true,\n  \"isFollowing\": true\n}, {\n  \"strUserName\": \"주영\",\n  \"strUserId\": \"주영\",\n  \"strUserEmail\": \"useremail@email.com\",\n  \"strUserInfo\": \"주영의 투두리스트입니다\",\n  \"dtTodo\": [{\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"🥛우유마시기\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 1,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"스터디카페가기\",\n    \"ynComplete\": \"N\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"햄버거 냠냠🍔\",\n    \"ynComplete\": \"Y\"\n  }],\n  \"isFollower\": false,\n  \"isFollowing\": true\n}];\nexport default function Follower() {\n  _s();\n\n  /* atom 시작 */\n  //let [following, setFollowing] = useRecoilState(followData);// 팔로우data\n  let [follower, setFollower] = useState(FollowerData);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFollowingChange = e => {\n    let userId = e.target.dataset.index;\n    console.log('current user', userId);\n    const thisData = [...follower];\n    let newFollower = thisData.filter(item => item.strUserId !== userId);\n    setFollower(newFollower);\n    console.log('newFollwer', newFollower);\n    setOpen(false); //window.location.replace(`/exploreSearch/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"follow-follow-list-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAPI,\n        children: \"getAPI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), follower.map(data => data.strUserId.length > 0 ? /*#__PURE__*/_jsxDEV(List // 넓이 조정 \n    , {\n      sx: {\n        width: '100%'\n      },\n      style: {\n        position: 'relative'\n      },\n      disablePadding: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"follow-list-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-settings-list-wrap\",\n          id: data.strUserName,\n          name: data.strUserName,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-list-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-list-text\",\n              sx: {\n                color: \"black\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.strUserName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 103\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"follow-list-name-icon-wrap\",\n              onClick: handleClickOpen,\n              sx: {\n                color: \"black\"\n              },\n              children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n                color: \"disabled\",\n                className: \"follow-list-name-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 45\n          }, this), data.dtTodo.map(e => {\n            return e.ynComplete === \"Y\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"follows-list-box\",\n              id: e.goal_id,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"follow-list-button\",\n                id: e.goal_id,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"follow-list-text\",\n                  children: e.todo_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 53\n            }, this) : null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          sx: {\n            '& .MuiDialog-paper': {\n              width: '80%',\n              maxHeight: 432\n            }\n          },\n          maxWidth: \"sm\",\n          open: open,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              autoFocus: true,\n              \"data-index\": data.strUserId,\n              onClick: handleFollowingChange,\n              color: \"error\",\n              children: \"\\uD314\\uB85C\\uC6CC \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 37\n        }, this)]\n      }, data.strUserId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }, this)\n    }, data.strUserName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"\\uBAA9\\uB85D \\uC5C6\\uC74C\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Follower, \"Ax/6FEp+gQE/jPom6ZAoHLYqcgs=\");\n\n_c = Follower;\n\nvar _c;\n\n$RefreshReg$(_c, \"Follower\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/exploresearch/Follower.js"],"names":["React","useEffect","useState","useParams","useRecoilState","List","MoreHorizIcon","Button","Dialog","Stack","CheckBoxIcon","API","axios","login","data","account","post","then","response","console","log","getAPI","get","FollowerData","Follower","follower","setFollower","open","setOpen","handleClickOpen","handleClose","handleFollowingChange","e","userId","target","dataset","index","thisData","newFollower","filter","item","strUserId","map","length","width","position","strUserName","color","dtTodo","ynComplete","goal_id","todo_title","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n\r\nimport List from '@mui/material/List';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Stack from '@mui/material/Stack';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport API from '../../api/API';\r\nimport axios from 'axios';\r\n\r\nimport '../../stylesheets/Follow.css';\r\n\r\n//  ** 할일 **\r\n// 팔로워 의 설정 버튼 팝업 확인하기 \r\n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \r\n\r\n// style : 화면의 넓이, font, fontsize 조정 \r\n\r\n//https://jsonplaceholder.typicode.com/todos/1\r\n//https://clonetodo.herokuapp.com/users?page=2\r\n\r\nconst login = () => {\r\n  \r\n    const data = {\r\n        account: \"test\",\r\n        \"password\":\"1234\"\r\n    }\r\n    axios.post(\"https://clonetodo.herokuapp.com/login\", data).then(\r\n        (response) => {\r\n            console.log(response);\r\n        }\r\n    );\r\n};\r\n\r\nconst getAPI = () => {\r\n  \r\n    axios.get(\"https://clonetodo.herokuapp.com/api/v1/goals/1\").then(\r\n        (response) => {\r\n            console.log(response);\r\n        }\r\n    );\r\n};\r\n\r\n\r\nconst FollowerData = [\r\n    {\r\n    \"strUserName\": \"🍈메로나\",\r\n    \"strUserId\" : \"merona\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"🍈메로나의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  \r\n  {\r\n    \"strUserName\": \"두두\",\r\n    \"strUserId\" : \"dodo\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"dodo의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  {\r\n    \"strUserName\": \"주영\",\r\n    \"strUserId\" : \"주영\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"주영의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"🥛우유마시기\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"스터디카페가기\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"햄버거 냠냠🍔\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": false,\r\n    \"isFollowing\": true,\r\n  }  \r\n            \r\n]\r\n\r\n\r\n\r\n\r\nexport default function Follower() {\r\n\r\n\r\n /* atom 시작 */\r\n//let [following, setFollowing] = useRecoilState(followData);// 팔로우data\r\nlet [follower, setFollower] = useState(FollowerData);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n\r\n\r\nconst handleFollowingChange = (e) => {\r\n    \r\n    let userId = e.target.dataset.index;\r\n    console.log('current user', userId);\r\n\r\n    const thisData = [...follower];\r\n    let newFollower = thisData.filter(item => item.strUserId !== userId)\r\n\r\n    setFollower(newFollower);\r\n    console.log('newFollwer', newFollower);\r\n\r\n    setOpen(false);\r\n    //window.location.replace(`/exploreSearch/`);\r\n    \r\n};\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"follow-follow-list-wrap\" >\r\n            <div><button onClick={login}>login</button></div>\r\n            <div><button onClick={getAPI}>getAPI</button></div>\r\n       \r\n            {/* useRecoilState 로는 작동하는 false의 목록없음이 dummy data 로는 작동 X 왜?? */}\r\n            {follower.map((data =>\r\n             data.strUserId.length > 0 ? (\r\n                 \r\n                    <List // 넓이 조정 \r\n                        sx={{ width: '100%'}}\r\n                        style={{position:'relative'}} \r\n                        key={data.strUserName}  disablePadding>\r\n                            \r\n                                {/* isfollowing 값을 true/false ? -> 문법 오류 해결 */}\r\n                        \r\n                         \r\n            \r\n                                    <div className=\"follow-list-box\" key={data.strUserId}> \r\n                                    \r\n                                        <div className='setting-settings-list-wrap' id={data.strUserName} name={data.strUserName}>\r\n                                            <div className=\"setting-list-box\" >\r\n                \r\n                                        \r\n                                            <div className=\"settings-list-text\" sx={{ color:\"black\"}}><p>{data.strUserName}</p></div>\r\n                                            <div className=\"follow-list-name-icon-wrap\"  onClick={handleClickOpen} sx={{ color:\"black\"}}>\r\n                                                <MoreHorizIcon color=\"disabled\" className=\"follow-list-name-icon\"/></div>\r\n            \r\n                                            </div>\r\n                                            {data.dtTodo.map(e => {\r\n                                                return e.ynComplete === \"Y\" ? \r\n                                                    <div className=\"follows-list-box\" id={e.goal_id}>\r\n                                                        <div  className=\"follow-list-button\" id={e.goal_id}>\r\n                                                            \r\n                                                            <p className=\"follow-list-text\" >{e.todo_title}</p>\r\n                                                                \r\n                                                        </div> \r\n                                                    </div>: null}\r\n                                      \r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n                                        \r\n                                    \r\n\r\n                                    {/* 마우스 호버 변경, Dialog 위치 조정, height 등 style 변경 */}\r\n                                    <Dialog\r\n                                        sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                                        maxWidth=\"sm\"\r\n                                        open={open}\r\n                                        >\r\n                                        <Stack spacing={1} >\r\n                                            <Button autoFocus data-index={data.strUserId} onClick={handleFollowingChange}  color=\"error\">팔로워 삭제</Button>\r\n                                            <Button onClick={handleClose}>취소</Button>\r\n                                        </Stack>\r\n                                       \r\n                                    </Dialog>\r\n                                    </div> \r\n                              \r\n                                \r\n                            \r\n                         \r\n                            \r\n                    </List> ) : <p>\"목록 없음\"</p> )\r\n            )}\r\n     \r\n        </div>\r\n  )\r\n }"]},"metadata":{},"sourceType":"module"}