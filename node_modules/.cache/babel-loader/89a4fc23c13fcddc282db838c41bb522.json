{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\main\\\\FeedTodoData.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { objTodosDataResult, objDatesData } from \"../../atoms/todoData\";\nimport { TodoModal } from \"./TodoModal\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedTodoData(props) {\n  _s();\n\n  /* hook 선언 시작 */\n  // let todo_input = useRef([]);\n  // useEffect(() => {\n  // const inputElement = todo_input.current;\n  //   },[]);\n\n  /* hook 선언 종료 */\n\n  /* atom 선언 시작 */\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\n  /* atom 선언 종료 */\n\n  /* state 선언 시작 */\n\n  const todos = props.todos;\n  const index = props.todos.todoId;\n  const [readOnly, setReadOnly] = useState(true);\n  const [modalActiveIndex, setModalActiveIndex] = useState(0);\n  /* state 선언 종료 */\n\n  /* 함수 선언 시작 */\n\n  const activeHandler = index => {\n    if (index === modalActiveIndex) {\n      setModalActiveIndex(null);\n    } else {\n      setModalActiveIndex(index);\n    }\n  };\n\n  const readOnlyHandler = index => {\n    if (index === modalActiveIndex) {\n      setModalActiveIndex(null);\n    } else {\n      setModalActiveIndex(index);\n    }\n  }; //Todo checkbox 핸들러\n\n\n  const onClickTodoCheckYn = e => {\n    e.stopPropagation();\n    const goal_id = parseInt(e.currentTarget.dataset.goalid);\n    const todo_id = parseInt(e.currentTarget.dataset.todoid);\n    todoDataArray.map(data => data.todos.map(todo => {\n      if (todo.goalId === goal_id && todo.id === todo_id) {\n        todo.checkYn === 'Y' ? todo.checkYn = 'N' : todo.checkYn = 'Y';\n        console.log(\"todo.checkYn \", todo.checkYn);\n      }\n    }));\n    setDtTodos(todoDataArray); //setDtTodos 이용해 state 변경\n  }; //모달 수정 클릭 핸들러들\n  //엔터키 인식 readonly 변경\n\n\n  const enterKeyEventHandler = e => {\n    if (e.key === 'Enter' || e.code === 'NumpadEnter') {\n      setReadOnly(true);\n    }\n  }; //외부 클릭 readonly 변경\n\n\n  const inputLostFocusEventHandler = e => {\n    setReadOnly(true);\n  }; //투두 수정 버튼 클릭 이벤트 핸들러\n\n\n  const todoModalEditHandler = e => {\n    readOnly === false ? setReadOnly(true) : setReadOnly(false);\n    setModalActiveIndex(null);\n  }; //모달 수정 클릭 핸들러\n\n\n  const todoInputChangeHandler = e => {\n    // console.log(\"입력 정보 \", e.currentTarget.value)\n    const goal_id = parseInt(e.currentTarget.dataset.goalid);\n    const todo_id = parseInt(e.currentTarget.dataset.todoid);\n    let current_value = e.currentTarget.value;\n    todoDataArray.map(data => data.todos.map(todo => {\n      if (todo.goalId === goal_id && todo.id === todo_id) {\n        todo.title = current_value;\n        console.log(\"todo, \", todo.title);\n      }\n    }));\n    setDtTodos(todoDataArray); //setDtTodos 이용해 state 변경\n  };\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos-list-box\",\n    \"data-todos\": todos,\n    children: [/*#__PURE__*/_jsxDEV(TodoModal, {\n      index: index,\n      modalActive: index === modalActiveIndex ? true : false,\n      todos: todos,\n      setModalActiveIndex: setModalActiveIndex,\n      readOnlyHandler: readOnlyHandler,\n      todoModalEditHandler: todoModalEditHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-listItem-text-wrap\",\n      id: todos.todoId,\n      \"data-index\": todos.orderNo,\n      children: [todos.checkYn === 'Y' ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n        \"data-goalid\": todos.goalId,\n        \"data-todoid\": todos.todoId,\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn,\n        onClick: onClickTodoCheckYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n        \"data-goalid\": todos.goalId,\n        \"data-todoid\": todos.todoId,\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn,\n        onClick: onClickTodoCheckYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        readOnly: readOnly // ref={inputElement}\n        ,\n        activeHandler: activeHandler,\n        todoInputChangeHandler: todoInputChangeHandler,\n        inputLostFocusEventHandler: inputLostFocusEventHandler,\n        enterKeyEventHandler: enterKeyEventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FeedTodoData, \"cuRmuMzCrIkZFlYUL/lVBOk2oVE=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = FeedTodoData;\nconst TodoList = /*#__PURE__*/React.forwardRef(_c2 = _s2((props, ref) => {\n  var _inputRef$current;\n\n  _s2();\n\n  const inputRef = useRef(null);\n  const todos = props.todos;\n  const readOnly = props.readOnly;\n  const activeHandler = props.activeHandler;\n  const todoInputChangeHandler = props.todoInputChangeHandler;\n  const inputLostFocusEventHandler = props.inputLostFocusEventHandler;\n  const enterKeyEventHandler = props.enterKeyEventHandler;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos-list-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"todos-list-input\",\n      id: \"todo-input\",\n      type: \"text\",\n      maxLength: \"50\",\n      size: (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value.length,\n      ref: inputRef,\n      name: todos.title,\n      \"data-orderno\": todos.orderNo,\n      \"data-goalid\": todos.goalId,\n      \"data-todoid\": todos.todoId,\n      value: todos.title,\n      readOnly: readOnly,\n      onClick: () => activeHandler(todos.todoId),\n      onChange: todoInputChangeHandler,\n      onBlur: inputLostFocusEventHandler,\n      onKeyDown: enterKeyEventHandler\n    }, todos.todoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"todos-list-like-btn\",\n      onClick: e => {\n        console.log(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(ThumbUpAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 85\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todos-list-like-num\",\n        children: todos.likes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 104\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\"));\n_c3 = TodoList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FeedTodoData\");\n$RefreshReg$(_c2, \"TodoList$React.forwardRef\");\n$RefreshReg$(_c3, \"TodoList\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/main/FeedTodoData.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","CheckBoxIcon","CheckBoxOutlineBlankIcon","ThumbUpAltIcon","objTodosDataResult","objDatesData","TodoModal","Button","FeedTodoData","props","dtTodos","setDtTodos","todoDataArray","JSON","parse","stringify","todos","index","todoId","readOnly","setReadOnly","modalActiveIndex","setModalActiveIndex","activeHandler","readOnlyHandler","onClickTodoCheckYn","e","stopPropagation","goal_id","parseInt","currentTarget","dataset","goalid","todo_id","todoid","map","data","todo","goalId","id","checkYn","console","log","enterKeyEventHandler","key","code","inputLostFocusEventHandler","todoModalEditHandler","todoInputChangeHandler","current_value","value","title","orderNo","TodoList","forwardRef","ref","inputRef","current","length","likes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\n\r\nimport { objTodosDataResult, objDatesData  } from \"../../atoms/todoData\";\r\n\r\nimport { TodoModal } from \"./TodoModal\";\r\nimport { Button } from \"@mui/material\";\r\n\r\n export default function FeedTodoData(props) {\r\n\r\n\r\n    /* hook 선언 시작 */\r\n    // let todo_input = useRef([]);\r\n\r\n    // useEffect(() => {\r\n    // const inputElement = todo_input.current;\r\n    //   },[]);\r\n    /* hook 선언 종료 */\r\n    \r\n\r\n    /* atom 선언 시작 */\r\n\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n\r\n    /* atom 선언 종료 */\r\n\r\n    /* state 선언 시작 */\r\n  \r\n    const todos = props.todos; \r\n    const index = props.todos.todoId;\r\n\r\n    const [readOnly, setReadOnly] = useState(true);\r\n    const [modalActiveIndex, setModalActiveIndex] = useState(0);\r\n\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    const activeHandler = (index) => {\r\n      if (index === modalActiveIndex) {\r\n        setModalActiveIndex(null);\r\n      } else {\r\n        setModalActiveIndex(index);\r\n      }\r\n    }\r\n\r\n    const readOnlyHandler = (index) => {\r\n        if (index === modalActiveIndex) {\r\n          setModalActiveIndex(null);\r\n        } else {\r\n          setModalActiveIndex(index);\r\n        }\r\n      }\r\n\r\n      //Todo checkbox 핸들러\r\n    const onClickTodoCheckYn = (e) => {\r\n      e.stopPropagation(); \r\n      const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n      const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n\r\n      todoDataArray.map(data=>\r\n          data.todos.map(todo=>{\r\n              if(todo.goalId === goal_id && todo.id === todo_id){\r\n                  todo.checkYn === 'Y' ? todo.checkYn = 'N' : todo.checkYn = 'Y'\r\n                  console.log(\"todo.checkYn \" , todo.checkYn)\r\n              }\r\n          })\r\n      )\r\n      setDtTodos(todoDataArray) ;//setDtTodos 이용해 state 변경\r\n    }\r\n\r\n    //모달 수정 클릭 핸들러들\r\n\r\n\r\n    //엔터키 인식 readonly 변경\r\n    const enterKeyEventHandler = (e) => {\r\n        if(e.key === 'Enter' || e.code === 'NumpadEnter'){ \r\n            setReadOnly(true)\r\n        }\r\n    }\r\n\r\n    //외부 클릭 readonly 변경\r\n    const inputLostFocusEventHandler = (e) => {\r\n        setReadOnly(true)\r\n    }\r\n\r\n    //투두 수정 버튼 클릭 이벤트 핸들러\r\n    const todoModalEditHandler = (e) => {\r\n        readOnly === false ? setReadOnly(true) : setReadOnly(false);\r\n        setModalActiveIndex(null);\r\n    }\r\n\r\n    //모달 수정 클릭 핸들러\r\n    const todoInputChangeHandler = (e) => {\r\n        // console.log(\"입력 정보 \", e.currentTarget.value)\r\n    \r\n        const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n        const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n    \r\n    \r\n        let current_value = e.currentTarget.value;\r\n    \r\n        todoDataArray.map(data=>\r\n            data.todos.map(todo=>{\r\n                if(todo.goalId === goal_id && todo.id === todo_id){\r\n                    todo.title = current_value;\r\n                    console.log(\"todo, \" , todo.title)\r\n                }\r\n            })\r\n        )\r\n        setDtTodos(todoDataArray) ;//setDtTodos 이용해 state 변경\r\n    }\r\n\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"todos-list-box\" data-todos={todos}>\r\n            <TodoModal index={index} modalActive={index === modalActiveIndex? true : false} todos={todos} setModalActiveIndex={setModalActiveIndex} \r\n            readOnlyHandler={readOnlyHandler} todoModalEditHandler={todoModalEditHandler}\r\n            /> \r\n            <div className=\"goals-listItem-text-wrap\" \r\n            id={todos.todoId}\r\n            data-index={todos.orderNo}>\r\n                    {todos.checkYn === 'Y' ?  \r\n                    <CheckBoxIcon data-goalid={todos.goalId} data-todoid={todos.todoId} className=\"todos-list-check-icon\" data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                    /> : \r\n                    <CheckBoxOutlineBlankIcon data-goalid={todos.goalId} data-todoid={todos.todoId} className=\"todos-list-check-icon\"\r\n                    data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                    /> }\r\n            <TodoList todos={todos} \r\n            readOnly={readOnly}\r\n            // ref={inputElement}\r\n            activeHandler={activeHandler}\r\n            todoInputChangeHandler={todoInputChangeHandler} inputLostFocusEventHandler={inputLostFocusEventHandler} enterKeyEventHandler={enterKeyEventHandler} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n} \r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n  \r\n    const inputRef = useRef(null);\r\n\r\n    const todos = props.todos;\r\n    const readOnly = props.readOnly;\r\n    const activeHandler = props.activeHandler;\r\n    const todoInputChangeHandler = props.todoInputChangeHandler;\r\n    const inputLostFocusEventHandler = props.inputLostFocusEventHandler;\r\n    const enterKeyEventHandler = props.enterKeyEventHandler;\r\n\r\n    return (\r\n        <div className=\"todos-list-wrap\">\r\n            <input\r\n            className=\"todos-list-input\" key={todos.todoId} id=\"todo-input\" type=\"text\" \r\n            maxLength=\"50\"\r\n            size={inputRef.current?.value.length}\r\n            ref={inputRef}\r\n            name={todos.title} \r\n            data-orderno={todos.orderNo}\r\n            data-goalid={todos.goalId} \r\n            data-todoid={todos.todoId} \r\n            value={todos.title} \r\n            readOnly={readOnly}\r\n            onClick={()=>activeHandler(todos.todoId)}\r\n            onChange={todoInputChangeHandler}\r\n            onBlur={inputLostFocusEventHandler}\r\n            onKeyDown={enterKeyEventHandler}\r\n            />\r\n                {/* 만약 계정 주인이면 좋아요 누른 사람 보여주고, 다른 계정 유저면 좋아요 클릭되기 */}\r\n            <Button className=\"todos-list-like-btn\" onClick={(e)=>{console.log(e)}}><ThumbUpAltIcon  /><span className=\"todos-list-like-num\">{todos.likes.length}</span></Button>\r\n        </div>\r\n        )\r\n})"]},"metadata":{},"sourceType":"module"}