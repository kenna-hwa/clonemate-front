{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterFn = [{\n  id: 'fullName',\n  label: 'Employee Name'\n}, {\n  id: 'email',\n  label: 'Email Address (Personal)'\n}, {\n  id: 'mobile',\n  label: 'Mobile Number'\n}, {\n  id: 'department',\n  label: 'Department',\n  disableSorting: true\n}];\nconsole.log(filterFn);\nexport default function Search() {\n  _s();\n\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value === \"\") return items;else return items.filter(x => x.label.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"filled\",\n      size: \"small\",\n      id: \"filled-basic\",\n      placeholder: \"email ,ID \\uB610\\uB294 \\uD560 \\uC77C \\uAC80\\uC0C9\",\n      sx: {\n        boxShadow: 'none'\n      },\n      onChange: handleSearch,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: setFilterFn.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"list\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"cPXK4vTH9aQWB0kzLEh00m6dYY8=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Search.js"],"names":["React","useState","Box","TextField","SearchIcon","Input","InputAdornment","TableBody","TableRow","TableCell","filterFn","id","label","disableSorting","console","log","Search","setFilterFn","fn","items","handleSearch","e","target","value","filter","x","toLowerCase","includes","width","bgcolor","position","boxShadow","startAdornment","map","item"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport { TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Input from '@mui/material/Input';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { TableBody, TableRow, TableCell } from '@material-ui/core';\r\n\r\nconst filterFn = [\r\n  { id: 'fullName', label: 'Employee Name' },\r\n  { id: 'email', label: 'Email Address (Personal)' },\r\n  { id: 'mobile', label: 'Mobile Number' },\r\n  { id: 'department', label: 'Department', disableSorting: true },\r\n]\r\nconsole.log(filterFn);\r\n\r\nexport default function Search() {\r\n\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    \r\n    const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.label.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n\r\n    return (\r\n        <Box \r\n        sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n        textAlign='center' \r\n        style={{ position:'relative'}}>\r\n        \r\n        {/* - 입력받는 string에 매치되는 아이디,할일,email 리스트로 불러와 보여주기\r\n                받아와야 하는 값 \r\n                -user nickname\r\n                -매치된 할일 의 단어\r\n                -참고) 설정한 색  \r\n            - style 수정사항\r\n                -search 검색 input 높이 조절\r\n                -항목 선택시 default 색 변경 */}\r\n            <TextField \r\n                fullWidth  \r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                id=\"filled-basic\"\r\n                placeholder=\"email ,ID 또는 할 일 검색\"\r\n                sx={{ boxShadow: 'none'}}    \r\n                onChange={handleSearch}\r\n                InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            >\r\n            </TextField>\r\n            \r\n                   \r\n                        <div>\r\n                        {setFilterFn.map(item => \r\n                        ((<div key={item.id}>\r\n                          <list>{item.id}</list>\r\n                          <list>{item.label}</list>\r\n                          </div>)\r\n                          ))\r\n                        } \r\n                        </div>\r\n                   \r\n             \r\n        </Box>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}