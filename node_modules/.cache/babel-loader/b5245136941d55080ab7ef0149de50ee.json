{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\main\\\\FeedTodoData.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Button, List, ListItem, ListItemText, Modal } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { objTodosDataResult, datesData } from \"../../atoms/todoData\";\nimport { TodoModal } from \"./TodoModal\";\nimport hoursToSeconds from \"date-fns/hoursToSeconds/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedTodoData(props) {\n  _s();\n\n  /* hook 선언 시작 */\n  // let todo_input = useRef([]);\n  // useEffect(() => {\n  // const inputElement = todo_input.current;\n  //   },[]);\n\n  /* hook 선언 종료 */\n\n  /* state 선언 시작 */\n\n  /* atom 선언 시작 */\n\n  /* atom 선언 종료 */\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\n  const todos = props.todos;\n  const index = props.todos.todoId;\n  const onClickTodoCheckYn = props.onClickTodoCheckYn;\n  const [readOnly, setReadOnly] = useState(true);\n  const [modalActiveIndex, setModalActiveIndex] = useState(0);\n  /* state 선언 종료 */\n\n  /* 함수 선언 시작 */\n\n  const activeHandler = index => {\n    if (index === modalActiveIndex) {\n      setModalActiveIndex(null);\n    } else {\n      setModalActiveIndex(index);\n    }\n  };\n\n  const readOnlyHandler = index => {\n    if (index === modalActiveIndex) {\n      setModalActiveIndex(null);\n    } else {\n      setModalActiveIndex(index);\n    }\n  }; //모달 수정 클릭 핸들러들\n  //엔터키 인식 readonly 변경\n\n\n  const enterKeyEventHandler = e => {\n    if (e.key === 'Enter' || e.code === 'NumpadEnter') {\n      setReadOnly(true);\n    }\n  }; //외부 클릭 readonly 변경\n\n\n  const inputLostFocusEventHandler = e => {\n    setReadOnly(true);\n  }; //투두 수정 버튼 클릭 이벤트 핸들러\n\n\n  const todoModalEditHandler = e => {\n    readOnly === false ? setReadOnly(true) : setReadOnly(false);\n    setModalActiveIndex(null);\n  }; //모달 수정 클릭 핸들러\n\n\n  const todoInputChangeHandler = e => {\n    // console.log(\"입력 정보 \", e.currentTarget.value)\n    const goal_id = parseInt(e.currentTarget.dataset.goalid);\n    const todo_id = parseInt(e.currentTarget.dataset.todoid);\n    let current_value = e.currentTarget.value;\n    todoDataArray.map(data => data.todos.map(todo => {\n      if (todo.goalId === goal_id && todo.todoId === todo_id) {\n        todo.title = current_value;\n        console.log(\"todo, \", todo.title);\n      }\n    }));\n    setDtTodos(todoDataArray); //setDtTodos 이용해 state 변경\n  };\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos-list-box\",\n    \"data-todos\": todos,\n    children: [/*#__PURE__*/_jsxDEV(TodoModal, {\n      index: index,\n      modalActive: index === modalActiveIndex ? true : false,\n      todos: todos,\n      setModalActiveIndex: setModalActiveIndex,\n      readOnlyHandler: readOnlyHandler,\n      todoModalEditHandler: todoModalEditHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-listItem-text-wrap\",\n      id: todos.todoId,\n      \"data-index\": todos.orderNo,\n      children: [todos.checkYn === 'Y' ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn,\n        onClick: onClickTodoCheckYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn,\n        onClick: onClickTodoCheckYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        readOnly: readOnly // ref={inputElement}\n        ,\n        activeHandler: activeHandler,\n        todoInputChangeHandler: todoInputChangeHandler,\n        inputLostFocusEventHandler: inputLostFocusEventHandler,\n        enterKeyEventHandler: enterKeyEventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FeedTodoData, \"cuRmuMzCrIkZFlYUL/lVBOk2oVE=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = FeedTodoData;\nconst TodoList = /*#__PURE__*/React.forwardRef(_c2 = _s2((props, ref) => {\n  var _inputRef$current, _inputRef$current2;\n\n  _s2();\n\n  const inputRef = useRef(null);\n  console.log(\"ref\", inputRef);\n  console.log(\"length\", (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value.length); // const ref = props.ref;\n\n  const todos = props.todos;\n  const readOnly = props.readOnly;\n  const activeHandler = props.activeHandler;\n  const todoInputChangeHandler = props.todoInputChangeHandler;\n  const inputLostFocusEventHandler = props.inputLostFocusEventHandler;\n  const enterKeyEventHandler = props.enterKeyEventHandler;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"todos-list-input\",\n    id: \"todo-input\",\n    type: \"text\",\n    maxLength: \"50\",\n    size: (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.value.length,\n    ref: inputRef,\n    name: todos.title,\n    \"data-orderno\": todos.orderNo,\n    \"data-goalid\": todos.goalId,\n    \"data-todoid\": todos.todoId,\n    value: todos.title,\n    readOnly: readOnly,\n    onClick: () => activeHandler(todos.todoId),\n    onChange: todoInputChangeHandler,\n    onBlur: inputLostFocusEventHandler,\n    onKeyDown: enterKeyEventHandler\n  }, todos.todoId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 13\n  }, this);\n}, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\"));\n_c3 = TodoList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FeedTodoData\");\n$RefreshReg$(_c2, \"TodoList$React.forwardRef\");\n$RefreshReg$(_c3, \"TodoList\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/main/FeedTodoData.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","Button","List","ListItem","ListItemText","Modal","Box","CheckBoxIcon","CheckBoxOutlineBlankIcon","objTodosDataResult","datesData","TodoModal","hoursToSeconds","FeedTodoData","props","dtTodos","setDtTodos","todoDataArray","JSON","parse","stringify","todos","index","todoId","onClickTodoCheckYn","readOnly","setReadOnly","modalActiveIndex","setModalActiveIndex","activeHandler","readOnlyHandler","enterKeyEventHandler","e","key","code","inputLostFocusEventHandler","todoModalEditHandler","todoInputChangeHandler","goal_id","parseInt","currentTarget","dataset","goalid","todo_id","todoid","current_value","value","map","data","todo","goalId","title","console","log","orderNo","checkYn","TodoList","forwardRef","ref","inputRef","current","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\nimport {  Button, List, ListItem, ListItemText, Modal, } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport { objTodosDataResult, datesData  } from \"../../atoms/todoData\";\r\n\r\nimport { TodoModal } from \"./TodoModal\";\r\nimport hoursToSeconds from \"date-fns/hoursToSeconds/index.js\";\r\n\r\n export default function FeedTodoData(props) {\r\n\r\n\r\n    /* hook 선언 시작 */\r\n    // let todo_input = useRef([]);\r\n\r\n    // useEffect(() => {\r\n    // const inputElement = todo_input.current;\r\n    //   },[]);\r\n    /* hook 선언 종료 */\r\n    \r\n    /* state 선언 시작 */\r\n\r\n    /* atom 선언 시작 */\r\n\r\n\r\n    /* atom 선언 종료 */\r\n\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n    const todos = props.todos; \r\n    const index = props.todos.todoId;\r\n    const onClickTodoCheckYn = props.onClickTodoCheckYn;\r\n    \r\n\r\n    const [readOnly, setReadOnly] = useState(true);\r\n    const [modalActiveIndex, setModalActiveIndex] = useState(0);\r\n\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    const activeHandler = (index) => {\r\n      if (index === modalActiveIndex) {\r\n        setModalActiveIndex(null);\r\n      } else {\r\n        setModalActiveIndex(index);\r\n      }\r\n    }\r\n\r\n    const readOnlyHandler = (index) => {\r\n        if (index === modalActiveIndex) {\r\n          setModalActiveIndex(null);\r\n        } else {\r\n          setModalActiveIndex(index);\r\n        }\r\n      }\r\n\r\n    //모달 수정 클릭 핸들러들\r\n\r\n\r\n    //엔터키 인식 readonly 변경\r\n    const enterKeyEventHandler = (e) => {\r\n        if(e.key === 'Enter' || e.code === 'NumpadEnter'){ \r\n            setReadOnly(true)\r\n        }\r\n    }\r\n\r\n    //외부 클릭 readonly 변경\r\n    const inputLostFocusEventHandler = (e) => {\r\n        setReadOnly(true)\r\n    }\r\n\r\n    //투두 수정 버튼 클릭 이벤트 핸들러\r\n    const todoModalEditHandler = (e) => {\r\n        readOnly === false ? setReadOnly(true) : setReadOnly(false);\r\n        setModalActiveIndex(null);\r\n    }\r\n\r\n    //모달 수정 클릭 핸들러\r\n    const todoInputChangeHandler = (e) => {\r\n        // console.log(\"입력 정보 \", e.currentTarget.value)\r\n    \r\n        const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n        const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n    \r\n    \r\n        let current_value = e.currentTarget.value;\r\n    \r\n        todoDataArray.map(data=>\r\n            data.todos.map(todo=>{\r\n                if(todo.goalId === goal_id && todo.todoId === todo_id){\r\n                    todo.title = current_value;\r\n                    console.log(\"todo, \" , todo.title)\r\n                }\r\n            })\r\n        )\r\n        setDtTodos(todoDataArray) ;//setDtTodos 이용해 state 변경\r\n    }\r\n\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"todos-list-box\" data-todos={todos}>\r\n            <TodoModal index={index} modalActive={index === modalActiveIndex? true : false} todos={todos} setModalActiveIndex={setModalActiveIndex} \r\n            readOnlyHandler={readOnlyHandler} todoModalEditHandler={todoModalEditHandler}\r\n            /> \r\n            <div className=\"goals-listItem-text-wrap\" \r\n            id={todos.todoId}\r\n            data-index={todos.orderNo}>\r\n                    {todos.checkYn === 'Y' ?  \r\n                    <CheckBoxIcon className=\"todos-list-check-icon\" data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                    /> : \r\n                    <CheckBoxOutlineBlankIcon className=\"todos-list-check-icon\"\r\n                    data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                    /> }\r\n            <TodoList todos={todos} \r\n            readOnly={readOnly}\r\n            // ref={inputElement}\r\n            activeHandler={activeHandler}\r\n            todoInputChangeHandler={todoInputChangeHandler} inputLostFocusEventHandler={inputLostFocusEventHandler} enterKeyEventHandler={enterKeyEventHandler} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n} \r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n    const inputRef = useRef(null);\r\n\r\n    console.log(\"ref\", inputRef)\r\n    console.log(\"length\", inputRef.current?.value.length)\r\n\r\n\r\n    // const ref = props.ref;\r\n    const todos = props.todos;\r\n    const readOnly = props.readOnly;\r\n    const activeHandler = props.activeHandler;\r\n    const todoInputChangeHandler = props.todoInputChangeHandler;\r\n    const inputLostFocusEventHandler = props.inputLostFocusEventHandler;\r\n    const enterKeyEventHandler = props.enterKeyEventHandler;\r\n\r\n    return (<input\r\n        className=\"todos-list-input\" key={todos.todoId} id=\"todo-input\" type=\"text\" \r\n        maxLength=\"50\"\r\n        size={inputRef.current?.value.length}\r\n        ref={inputRef}\r\n        name={todos.title} \r\n        data-orderno={todos.orderNo}\r\n        data-goalid={todos.goalId} \r\n        data-todoid={todos.todoId} \r\n        value={todos.title} \r\n        readOnly={readOnly}\r\n        onClick={()=>activeHandler(todos.todoId)}\r\n        onChange={todoInputChangeHandler}\r\n        onBlur={inputLostFocusEventHandler}\r\n        onKeyDown={enterKeyEventHandler}\r\n        />)\r\n})"]},"metadata":{},"sourceType":"module"}