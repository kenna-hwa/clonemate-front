{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\main\\\\CreateTodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useForm } from \"react-hook-form\";\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { objTodosDataResult } from \"../../atoms/todoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTodoForm(props) {\n  _s();\n\n  /* hook 선언 시작 */\n  let createInput = useRef();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm({\n    mode: \"onChange\"\n  });\n  useEffect(() => {\n    const inputElement = createInput.current;\n    inputElement.focus();\n  }, []);\n  /* hook 선언 종료 */\n\n  /* atom 시작 */\n\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  /* atom 종료 */\n\n  /* state 선언 시작 */\n\n  const dtDate = props.dtDate;\n  const new_goal_id = props.goalId;\n  const new_todo_id = props.todoLength + 1;\n  const new_order_no = props.todoLength + 1;\n  const copy_dtTodos = [...dtTodos];\n  let id = props.id;\n  let createTodoState = {\n    goalId: new_goal_id,\n    todoId: new_todo_id,\n    orderNo: new_order_no,\n    title: \"\",\n    date: dtDate.dtToday,\n    endRepeatDate: dtDate.dtToday,\n    repeatDays: {\n      THU: \"N\",\n      WEN: \"N\",\n      TUE: \"N\",\n      SAT: \"N\",\n      FRI: \"N\",\n      MON: \"N\",\n      SUN: \"N\"\n    },\n    checkYn: \"N\"\n  };\n  /* state 선언 종료 */\n\n  /* 함수 선언 시작 */\n  //dtTodo에 반영\n\n  const createTodo = e => {\n    console.log(\"copy_dtTodos\", copy_dtTodos);\n  }; //엔터 클릭 시 createTodo 실행\n\n\n  const onKeyPressHandler = e => {\n    if (e.key === 'Enter' || e.code === 'NumpadEnter') createTodo(e);\n  };\n\n  const onChangeCreateTodofield = e => {\n    createTodoState.title = e.currentTarget.value;\n  };\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n      className: \"create-todo-check-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: createInput,\n      id: \"todo-input\",\n      className: \"create-todo-field\",\n      placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n      type: \"text\",\n      maxLength: \"50\",\n      size: createInput.value.length,\n      onChange: onChangeCreateTodofield,\n      onBlur: createTodo,\n      onKeyPress: onKeyPressHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"create-todo-id\",\n      className: \"create-todo-id\",\n      type: \"hidden\",\n      value: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"create-todo-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateTodoForm, \"6BiPmQ5qrNOLlKxcL6ia7Jf1AZQ=\", false, function () {\n  return [useForm, useRecoilState];\n});\n\n_c = CreateTodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTodoForm\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/main/CreateTodoForm.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","useForm","CheckBoxIcon","CheckBoxOutlineBlankIcon","MoreHorizIcon","objTodosDataResult","CreateTodoForm","props","createInput","register","handleSubmit","errors","watch","mode","inputElement","current","focus","dtTodos","setDtTodos","dtDate","new_goal_id","goalId","new_todo_id","todoLength","new_order_no","copy_dtTodos","id","createTodoState","todoId","orderNo","title","date","dtToday","endRepeatDate","repeatDays","THU","WEN","TUE","SAT","FRI","MON","SUN","checkYn","createTodo","e","console","log","onKeyPressHandler","key","code","onChangeCreateTodofield","currentTarget","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nimport { objTodosDataResult } from \"../../atoms/todoData\";\r\n\r\n\r\nexport default function CreateTodoForm (props) {\r\n\r\n    /* hook 선언 시작 */\r\n\r\n    let createInput = useRef();\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm({ mode: \"onChange\" });\r\n    useEffect(() => {\r\n        const inputElement = createInput.current;\r\n        inputElement.focus();\r\n      }, []);\r\n\r\n    /* hook 선언 종료 */\r\n\r\n    /* atom 시작 */\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n\r\n    /* atom 종료 */\r\n\r\n    /* state 선언 시작 */\r\n\r\n    const dtDate = props.dtDate;\r\n    const new_goal_id = props.goalId;\r\n    const new_todo_id = props.todoLength+1;\r\n    const new_order_no = props.todoLength+1;\r\n    const copy_dtTodos = [...dtTodos];\r\n\r\n\r\n    let id = props.id;\r\n\r\n    let createTodoState = {\r\n        goalId: new_goal_id,\r\n        todoId: new_todo_id,\r\n        orderNo: new_order_no,\r\n        title: \"\",\r\n        date: dtDate.dtToday,\r\n        endRepeatDate: dtDate.dtToday,\r\n        repeatDays: {\r\n          THU: \"N\",\r\n          WEN: \"N\",\r\n          TUE: \"N\",\r\n          SAT: \"N\",\r\n          FRI: \"N\",\r\n          MON: \"N\",\r\n          SUN: \"N\"\r\n        },\r\n        checkYn: \"N\"\r\n    };\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //dtTodo에 반영\r\n    const createTodo =  (e) => { \r\n        console.log(\"copy_dtTodos\", copy_dtTodos)\r\n   \r\n\r\n    }\r\n    //엔터 클릭 시 createTodo 실행\r\n    const onKeyPressHandler = (e) => {\r\n        if(e.key === 'Enter' || e.code === 'NumpadEnter') createTodo(e)\r\n    }\r\n\r\n    const onChangeCreateTodofield = (e) => {\r\n        createTodoState.title = e.currentTarget.value;\r\n    }\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"create-todo-form\">\r\n                <CheckBoxOutlineBlankIcon className=\"create-todo-check-icon\"/>\r\n                <input  ref={createInput} id=\"todo-input\" className=\"create-todo-field\"  placeholder=\"할 일을 입력해주세요.\" type=\"text\" maxLength=\"50\" \r\n                size={createInput.value.length}\r\n                onChange={onChangeCreateTodofield}\r\n                onBlur={createTodo}\r\n                onKeyPress={onKeyPressHandler} \r\n                /> \r\n\r\n                <input id=\"create-todo-id\" className=\"create-todo-id\" type=\"hidden\" value={id} /> \r\n                <button type=\"submit\" className=\"create-todo-btn\"></button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}