{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Following.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport { followData } from \"../atoms/todoData\";\nimport \"../stylesheets/Follow.css\"; //  ** 할일 **\n// 유저 버튼 -> 언팔로우 시 => isfollowing:false 로 변경 이 아니고 !\n// 유저 버튼 -> 해당 유저를 불러온 데이터에서 제외하고, update된 usestate의 데이터 갱신 \n// 각 유저 클릭 -> 해당 유저 feed로 이동 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Following() {\n  _s();\n\n  /* atom 시작 */\n  let [following, setFollowing] = useRecoilState(followData); // 팔로우data\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFollowingChange = e => {\n    let userId = e.target.dataset.index;\n    console.log('current user', userId);\n    const thisData = [...following];\n    let newFollowing = thisData.filter(item => item.strUserId !== userId);\n    setFollowing(newFollowing);\n    console.log(newFollowing);\n    setOpen(false); //window.location.replace(`/exploreSearch/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: following.map(data => {\n      return /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%'\n        },\n        style: {\n          position: 'relative'\n        },\n        component: \"div\",\n        disablePadding: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"button\",\n                children: data.strUserName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this), data.dtTodo.map(e => {\n                return e.ynComplete === \"Y\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    secondary: e.todo_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 38\n                }, this) : null;\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button1\",\n            onClick: handleClickOpen,\n            children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n              color: \"disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 22\n          }, this)]\n        }, data.strUserId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          sx: {\n            '& .MuiDialog-paper': {\n              width: '80%',\n              maxHeight: 432\n            }\n          },\n          maxWidth: \"sm\",\n          open: open,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              autoFocus: true,\n              \"data-index\": data.strUserId,\n              onClick: handleFollowingChange,\n              color: \"error\",\n              children: \"\\uC5B8\\uD314\\uB85C\\uC6B0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Following, \"6MEb3XFJh+z2Gb6l8yVkvuqJlgI=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Following.js"],"names":["React","useEffect","useState","useRecoilState","List","ListItemButton","ListItemText","MoreHorizIcon","Button","Dialog","Stack","Box","followData","Following","following","setFollowing","open","setOpen","handleClickOpen","handleClose","handleFollowingChange","e","userId","target","dataset","index","console","log","thisData","newFollowing","filter","item","strUserId","width","bgcolor","position","map","data","strUserName","dtTodo","ynComplete","todo_title","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\nimport { followData } from \"../atoms/todoData\";\r\n\r\nimport \"../stylesheets/Follow.css\";\r\n\r\n//  ** 할일 **\r\n// 유저 버튼 -> 언팔로우 시 => isfollowing:false 로 변경 이 아니고 !\r\n// 유저 버튼 -> 해당 유저를 불러온 데이터에서 제외하고, update된 usestate의 데이터 갱신 \r\n// 각 유저 클릭 -> 해당 유저 feed로 이동 \r\n\r\n\r\nexport default function Following() {\r\n\r\n\r\n/* atom 시작 */\r\nlet [following, setFollowing] = useRecoilState(followData); // 팔로우data\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n \r\n\r\nconst handleFollowingChange = (e) => {\r\n    \r\n      let userId = e.target.dataset.index;\r\n      console.log('current user', userId);\r\n\r\n      const thisData = [...following];\r\n      let newFollowing = thisData.filter(item => item.strUserId !== userId)\r\n\r\n      setFollowing(newFollowing);\r\n      console.log(newFollowing)\r\n\r\n      setOpen(false);\r\n      //window.location.replace(`/exploreSearch/`);\r\n      \r\n  };\r\n\r\n\r\n    return (\r\n        <Box \r\n            sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n            textAlign='center' \r\n            style={{ position:'relative'}}>\r\n\r\n        {following.map(data => {\r\n             return (\r\n                <List\r\n        \r\n                sx={{ width: '100%'}}\r\n                style={{position:'relative'}} \r\n        \r\n                component=\"div\" disablePadding>\r\n        \r\n\r\n                {/* Button click 효과 및 css 수정 */}\r\n                 <div className=\"container\" key={data.strUserId} > \r\n                    {/* 왜 div 하나 차이로 레이아웃이 달라지는지 모르겠음 */}\r\n                    <ListItemButton>\r\n                        <Stack>\r\n                            <ListItemText\r\n                                className=\"button\">   \r\n                                {data.strUserName}\r\n                            </ListItemText> \r\n                \r\n                             {data.dtTodo.map(e => {\r\n                                    return e.ynComplete === \"Y\" ? \r\n                                     <React.Fragment>\r\n                                            <ListItemText\r\n                                              secondary={e.todo_title}>  \r\n                                         </ListItemText> \r\n                                        </React.Fragment> : null}\r\n                             )}\r\n\r\n                        </Stack>\r\n                    </ListItemButton> \r\n\r\n                     <Button  className=\"button1\" onClick={handleClickOpen}>\r\n                         <MoreHorizIcon color=\"disabled\"/> \r\n                     </Button>\r\n                    </div>\r\n\r\n                    {/* Dialog 위치 조정, height 등 style 변경 */}\r\n                    <Dialog\r\n                     sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                     maxWidth=\"sm\"\r\n                        open={open}\r\n                        >\r\n                     <Stack spacing={1} >\r\n                         <Button autoFocus data-index={data.strUserId} onClick={handleFollowingChange} color=\"error\">언팔로우</Button>\r\n                         <Button onClick={handleClose}>취소</Button>\r\n                     </Stack>\r\n               \r\n                    </Dialog>\r\n\r\n                 \r\n                </List>\r\n             ); \r\n           })}\r\n     \r\n        </Box>\r\n    \r\n    )} "]},"metadata":{},"sourceType":"module"}