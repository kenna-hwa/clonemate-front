{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\routines\\\\Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"@mui/material\";\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { objTodosDataResult, objDatesData } from \"../../atoms/todoData\";\nimport '../../stylesheets/Routines.css';\nimport RoutinesTodos from \"./RoutinesTodos\";\nimport CreateRoutinesForm from \"./CreateRoutinesForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Routines() {\n  _s();\n\n  /* Hook 선언 시작 */\n  let history = useHistory();\n  /* Hook 선언 종료 */\n\n  /* atom 시작 */\n\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\n  let dtDate = useRecoilValue(objDatesData);\n  /* atom 종료 */\n\n  /* state 선언 시작 */\n\n  let [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false));\n  let [isTodoSelected, setIsTodoSelected] = useState(Array(todoDataArray.length).fill(false));\n  /* state 선언 종료 */\n\n  /* 함수 선언 시작 */\n\n  const goalSelectedHandler = e => {\n    const idx = e.currentTarget.dataset.id;\n    const newArr = Array(todoDataArray.length).fill(false);\n    newArr[idx] = true;\n    setIsGoalSelected(newArr);\n  };\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-wrap\",\n      children: todoDataArray.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goals-list-box\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"goals-list-button\",\n            id: data.goalOrderNo,\n            \"data-id\": index,\n            onClick: goalSelectedHandler,\n            children: [/*#__PURE__*/_jsxDEV(ReceiptIcon, {\n              className: \"goals-list-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"goals-list-text\",\n              id: data.goalOrderNo,\n              name: data.goalOrderNo,\n              style: {\n                color: data.goalTitleColor\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.goalTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 152\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"goals-list-plus-icon-wrap\",\n              children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n                className: \"goals-list-plus-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todos-list-wrap\",\n            children: [data.todos.map((data, index) => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(RoutinesTodos, {\n                  todos: data,\n                  isTodoSelected: isTodoSelected\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)\n              }, data.todoId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this);\n            }), isGoalSelected[index] ? /*#__PURE__*/_jsxDEV(CreateRoutinesForm, {\n              goalId: data.goalId,\n              todoId: data.todos.length + 1,\n              orderNo: data.todos.length + 1,\n              setIsGoalSelected: setIsGoalSelected,\n              todoDataArray: todoDataArray\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 45\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, data.goalOrderNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Routines, \"0IHHvihFRsEdFyeV2sUDMWtQQ/I=\", false, function () {\n  return [useHistory, useRecoilState, useRecoilValue];\n});\n\n_c = Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/routines/Routines.js"],"names":["React","useState","useRecoilState","useRecoilValue","useHistory","Button","ReceiptIcon","AddCircleIcon","objTodosDataResult","objDatesData","RoutinesTodos","CreateRoutinesForm","Routines","history","dtTodos","setDtTodos","todoDataArray","JSON","parse","stringify","dtDate","isGoalSelected","setIsGoalSelected","Array","length","fill","isTodoSelected","setIsTodoSelected","goalSelectedHandler","e","idx","currentTarget","dataset","id","newArr","map","data","index","goalOrderNo","color","goalTitleColor","goalTitle","todos","todoId","goalId"],"mappings":"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","sourcesContent":["import React, {  useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Button } from \"@mui/material\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { objTodosDataResult, objDatesData, } from \"../../atoms/todoData\";\r\nimport '../../stylesheets/Routines.css';\r\n\r\nimport RoutinesTodos from \"./RoutinesTodos\";\r\nimport CreateRoutinesForm from \"./CreateRoutinesForm\";\r\n\r\n\r\nexport default function Routines () {\r\n\r\n/* Hook 선언 시작 */\r\n\r\nlet history = useHistory();\r\n\r\n/* Hook 선언 종료 */\r\n\r\n/* atom 시작 */\r\n\r\nlet [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\nlet todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\nlet dtDate = useRecoilValue(objDatesData);\r\n\r\n/* atom 종료 */\r\n\r\n/* state 선언 시작 */\r\n\r\nlet [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false) );\r\nlet [isTodoSelected, setIsTodoSelected] = useState(Array(todoDataArray.length).fill(false) );\r\n\r\n\r\n\r\n/* state 선언 종료 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\nconst goalSelectedHandler = (e) => {\r\n    const idx = e.currentTarget.dataset.id;\r\n    const newArr = Array(todoDataArray.length).fill(false);\r\n    newArr[idx] = true;\r\n    setIsGoalSelected(newArr);\r\n}\r\n\r\n/* 함수 선언 끝 */\r\n\r\nreturn (\r\n<>\r\n    <div className=\"routines-wrap\">\r\n        {\r\n            todoDataArray.map((data, index) => {\r\n                return ( \r\n                    <div className=\"goals-list-box\" key={data.goalOrderNo}> \r\n                        <Button className=\"goals-list-button\" id={data.goalOrderNo} data-id={index} \r\n                        onClick={goalSelectedHandler}\r\n                        >\r\n                            <ReceiptIcon className=\"goals-list-icon\" />\r\n                                <div className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color:data.goalTitleColor }}  ><p>{data.goalTitle}</p>\r\n                                </div>\r\n                                <p className=\"goals-list-plus-icon-wrap\">\r\n                                <AddCircleIcon className=\"goals-list-plus-icon\"/>\r\n                                </p>\r\n                        </Button>\r\n                        \r\n                    <div className=\"todos-list-wrap\">\r\n                    {data.todos.map((data,index)=>{\r\n                        return(\r\n                            <React.Fragment key={data.todoId}>\r\n                                <RoutinesTodos todos={data} \r\n                                isTodoSelected={isTodoSelected}\r\n                                />\r\n                            </React.Fragment>\r\n                            \r\n                        )\r\n                    })}\r\n                    {isGoalSelected[index]? <CreateRoutinesForm \r\n                    goalId={data.goalId} \r\n                    todoId={data.todos.length+1} \r\n                    orderNo={data.todos.length+1} \r\n                    setIsGoalSelected={setIsGoalSelected} \r\n                    todoDataArray={todoDataArray} />: null}\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        \r\n    </div>\r\n\r\n</>\r\n);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}