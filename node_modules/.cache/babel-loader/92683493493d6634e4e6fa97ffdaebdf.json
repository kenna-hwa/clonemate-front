{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Follower.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport { followData } from \"../atoms/todoData\";\nimport \"../stylesheets/Follow.css\"; //  ** 할일 **\n// 팔로워 의 설정 버튼 팝업 확인하기 \n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \n// style : 화면의 넓이, font, fontsize 조정 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Follower() {\n  _s();\n\n  /* atom 시작 */\n  let [following, setFollowing] = useRecoilState(followData); // 팔로우data\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFollowingChange = e => {\n    let userId = e.target.dataset.index;\n    console.log('current user', userId);\n    const thisData = [...following];\n    let newFollowing = thisData.filter(item => item.strUserId !== userId);\n    setFollowing(newFollowing);\n    console.log(newFollowing);\n    setOpen(false); //window.location.replace(`/exploreSearch/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: following.map(data => {\n      return /*#__PURE__*/_jsxDEV(List // 넓이 조정 \n      , {\n        sx: {\n          width: '100%'\n        },\n        style: {\n          position: 'relative'\n        },\n        component: \"div\",\n        disablePadding: true,\n        children: data.isFollower === true ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  className: \"button\",\n                  primary: data.strUserName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), data.dtTodo.map(e => {\n                  return e.ynComplete === \"Y\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      secondary: e.todo_title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 61\n                    }, this)\n                  }, e.goal_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 57\n                  }, this) : null;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"button1\",\n              onClick: handleClickOpen,\n              children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n                color: \"disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 38\n            }, this)]\n          }, data.strUserId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            sx: {\n              '& .MuiDialog-paper': {\n                width: '80%',\n                maxHeight: 432\n              }\n            },\n            maxWidth: \"sm\",\n            open: open,\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                autoFocus: true,\n                \"data-index\": data.strUserId,\n                onClick: handleFollowingChange,\n                color: \"error\",\n                children: \"\\uD314\\uB85C\\uC6CC \\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClose,\n                children: \"\\uCDE8\\uC18C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\\"\\uBAA9\\uB85D \\uC5C6\\uC74C\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }, this)\n      }, data.strUserName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Follower, \"6MEb3XFJh+z2Gb6l8yVkvuqJlgI=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Follower;\n\nvar _c;\n\n$RefreshReg$(_c, \"Follower\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Follower.js"],"names":["React","useEffect","useState","useParams","useRecoilState","Box","List","ListItemButton","ListItemText","MoreHorizIcon","Button","Dialog","Stack","followData","Follower","following","setFollowing","open","setOpen","handleClickOpen","handleClose","handleFollowingChange","e","userId","target","dataset","index","console","log","thisData","newFollowing","filter","item","strUserId","width","bgcolor","position","map","data","isFollower","strUserName","dtTodo","ynComplete","todo_title","goal_id","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { followData } from \"../atoms/todoData\";\r\n\r\nimport \"../stylesheets/Follow.css\";\r\n\r\n//  ** 할일 **\r\n// 팔로워 의 설정 버튼 팝업 확인하기 \r\n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \r\n\r\n// style : 화면의 넓이, font, fontsize 조정 \r\n\r\nexport default function Follower() {\r\n\r\n\r\n /* atom 시작 */\r\nlet [following, setFollowing] = useRecoilState(followData);// 팔로우data\r\n   \r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n\r\n\r\nconst handleFollowingChange = (e) => {\r\n    \r\n    let userId = e.target.dataset.index;\r\n    console.log('current user', userId);\r\n\r\n    const thisData = [...following];\r\n    let newFollowing = thisData.filter(item => item.strUserId !== userId)\r\n\r\n    setFollowing(newFollowing);\r\n    console.log(newFollowing)\r\n\r\n    setOpen(false);\r\n    //window.location.replace(`/exploreSearch/`);\r\n    \r\n};\r\n\r\n\r\n    return (\r\n        <Box \r\n            sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n            textAlign='center' \r\n            style={{ position:'relative'}}>\r\n\r\n            {following.map(data => {\r\n                return (\r\n                    <List // 넓이 조정 \r\n                        sx={{ width: '100%'}}\r\n                        style={{position:'relative'}} \r\n                        key={data.strUserName} component=\"div\" disablePadding>\r\n                            \r\n                                {/* isfollowing 값을 true/false ? -> 문법 오류 해결 */}\r\n                            {data.isFollower === true ? (\r\n                                 <React.Fragment>\r\n                                {/* Button click 효과 및 css 수정 */}\r\n                                    \r\n                                    <div className=\"container\" key={data.strUserId}> \r\n                                    {/* 왜 div 하나 차이로 레이아웃이 달라지는지 모르겠음 */}\r\n                                     <ListItemButton>\r\n                                        <Stack>\r\n                                            <ListItemText\r\n                                                className=\"button\"\r\n                                                primary={data.strUserName}>   \r\n                                            </ListItemText> \r\n\r\n                                                {data.dtTodo.map(e => {\r\n                                                    return e.ynComplete === \"Y\" ? \r\n                                                        <React.Fragment key={e.goal_id}>\r\n                                                            <ListItemText\r\n                                                                secondary={e.todo_title}>  \r\n                                                            </ListItemText> \r\n                                                        </React.Fragment> : null}\r\n                                                )}\r\n\r\n                                        </Stack>\r\n                                     </ListItemButton> \r\n\r\n                                     <Button  className=\"button1\" onClick={handleClickOpen}>\r\n                                        <MoreHorizIcon color=\"disabled\"/> \r\n                                     </Button>\r\n                                     \r\n                                    </div> \r\n\r\n                                    {/* Dialog 위치 조정, height 등 style 변경 */}\r\n                                    <Dialog\r\n                                        sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                                        maxWidth=\"sm\"\r\n                                        open={open}\r\n                                        >\r\n                                        <Stack spacing={1} >\r\n                                            <Button autoFocus data-index={data.strUserId} onClick={handleFollowingChange}  color=\"error\">팔로워 삭제</Button>\r\n                                            <Button onClick={handleClose}>취소</Button>\r\n                                        </Stack>\r\n                                       \r\n                                    </Dialog>\r\n                                 </React.Fragment>\r\n                                ) : <p>\"목록 없음\"</p>}\r\n                            \r\n                         \r\n                            \r\n                    </List>\r\n                );\r\n            })}\r\n     \r\n        </Box>\r\n    \r\n    )} \r\n"]},"metadata":{},"sourceType":"module"}