{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Following.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { followData } from \"../atoms/todoData\"; //함수선언\n// isfollowing? Y인 사람만 리스트에 불러와져 있으면 됨. \n//  -> 더미 데이터에서 isfollowing 이 y인 사람만 파싱? 으로 처리 하여 \n//     나타나는 것은 닉네임으로 표현하기 \n// 팔로잉 추가 함수\n// 팔로잉 삭제 함수 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Following() {\n  _s();\n\n  /* atom 시작 */\n  let [following, setFollowing] = useRecoilState(followData); // 목표goals 아이템\n\n  let {\n    originID\n  } = useParams(); //url Params 따오기\n\n  let [editFollowingState, setEditFollowingState] = useState('');\n  useEffect(() => {\n    let originFollowingState = [...following]; //원본 follow 가지고 옴\n\n    let originFollowing;\n    originFollowing = originFollowingState[originID];\n    setFollowingState(originFollowing);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: follwing.map(data => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          position: 'relative'\n        },\n        component: \"div\",\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: data.strUserName,\n            secondary: data.todo_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, data.todo_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Following, \"Y2776N+PYEVrNMKwQj7ojB2uCD4=\", false, function () {\n  return [useRecoilState, useParams];\n});\n\n_c = Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Following.js"],"names":["React","useEffect","useState","useParams","useRecoilState","Box","ListItem","ListItemButton","ListItemText","followData","Following","following","setFollowing","originID","editFollowingState","setEditFollowingState","originFollowingState","originFollowing","setFollowingState","width","bgcolor","position","follwing","map","data","strUserName","todo_title","todo_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAGpC;AACA,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,cAAc,CAACK,UAAD,CAA9C,CAJoC,CAIuB;;AAE3D,MAAI;AAAEI,IAAAA;AAAF,MAAeV,SAAS,EAA5B,CANoC,CAML;;AAE/B,MAAI,CAACW,kBAAD,EAAqBC,qBAArB,IAA8Cb,QAAQ,CAAC,EAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIe,oBAAoB,GAAG,CAAC,GAAGL,SAAJ,CAA3B,CADU,CACiC;;AAC3C,QAAIM,eAAJ;AACAA,IAAAA,eAAe,GAAGD,oBAAoB,CAACH,QAAD,CAAtC;AACAK,IAAAA,iBAAiB,CAACD,eAAD,CAAjB;AACH,GALQ,EAKP,EALO,CAAT;AAOI,sBACI,QAAC,GAAD;AACA,IAAA,EAAE,EAAE;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KADJ;AAEA,IAAA,SAAS,EAAC,QAFV;AAGA,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAC;AAAX,KAHP;AAAA,cAKKC,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAE;AAChB,0BACI,QAAC,QAAD;AACA,QAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAC;AAAV,SADP;AAEmB,QAAA,SAAS,EAAC,KAF7B;AAEmC,QAAA,cAAc,MAFjD;AAAA,+BAGI,QAAC,cAAD;AAAA,iCACI,QAAC,YAAD;AACA,YAAA,OAAO,EAAEG,IAAI,CAACC,WADd;AAEA,YAAA,SAAS,EAAED,IAAI,CAACE;AAFhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ,SAEKF,IAAI,CAACG,OAFV;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAZA;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBE;;GAvCkBjB,S;UAIQN,c,EAEbD,S;;;KANKO,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport { followData } from \"../atoms/todoData\";\r\n\r\n//함수선언\r\n// isfollowing? Y인 사람만 리스트에 불러와져 있으면 됨. \r\n//  -> 더미 데이터에서 isfollowing 이 y인 사람만 파싱? 으로 처리 하여 \r\n//     나타나는 것은 닉네임으로 표현하기 \r\n// 팔로잉 추가 함수\r\n// 팔로잉 삭제 함수 \r\n\r\n\r\nexport default function Following() {\r\n\r\n\r\n/* atom 시작 */\r\nlet [following, setFollowing] = useRecoilState(followData);// 목표goals 아이템\r\n\r\nlet { originID } = useParams();//url Params 따오기\r\n\r\nlet [editFollowingState, setEditFollowingState] = useState('');\r\n\r\nuseEffect(()=>{\r\n    let originFollowingState = [...following]; //원본 follow 가지고 옴\r\n    let originFollowing;\r\n    originFollowing = originFollowingState[originID]\r\n    setFollowingState(originFollowing)\r\n},[])\r\n\r\n    return (\r\n        <Box \r\n        sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n        textAlign='center' \r\n        style={{ position:'relative'}}>\r\n\r\n            {follwing.map(data=>{\r\n                return (\r\n                    <ListItem \r\n                    style={{position:'relative'}} \r\n                    key={data.todo_id} component=\"div\" disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemText \r\n                            primary={data.strUserName}\r\n                            secondary={data.todo_title} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                );\r\n            })}\r\n     \r\n        </Box>\r\n    \r\n    )}"]},"metadata":{},"sourceType":"module"}