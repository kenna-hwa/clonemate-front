{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\routines\\\\CreateRoutinesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Button } from \"@mui/material\";\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RoutineDayModal from './RoutineDayModal';\nimport RoutineDateModal from './RoutineDateModal';\nimport { objDatesData, objTodosDataResult } from \"../../atoms/todoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRoutinesForm(props) {\n  _s();\n\n  /* atom 선언 시작 */\n  const [dtDate, setDtDate] = useRecoilState(objDatesData);\n  const [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  /* atom 선언 끝 */\n\n  /* state 선언 시작 */\n\n  const goal_Id = props.goalId;\n  const todo_Id = props.todoId;\n  const orderNo = props.orderNo;\n  const setIsGoalSelected = props.setIsGoalSelected;\n  const todoDataArray = props.todoDataArray;\n  let [dayActiveBoolean, setDayActiveBoolean] = useState(false);\n  let [dateActiveBoolean, setDateActiveBoolean] = useState(false);\n  let [location, setLocation] = useState(null);\n  let [createRoutinesState, setCreactRoutinesState] = useState({\n    \"goalId\": goal_Id,\n    //묶여있는 goal id\n    \"todoId\": todo_Id,\n    \"orderNo\": orderNo,\n    \"title\": \"\",\n    \"date\": dtDate.dtToday,\n    \"endRepeatDate\": dtDate.dtToday,\n    //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\n    \"repeatDays\": {\n      THU: \"N\",\n      WEN: \"N\",\n      TUE: \"N\",\n      SAT: \"N\",\n      FRI: \"N\",\n      MON: \"N\",\n      SUN: \"N\"\n    },\n    \"checkYn\": \"N\" //달성여부\n\n  });\n  const dayArr = [{\n    dayEng: 'SUN',\n    dayKor: '일',\n    checkYn: createRoutinesState.repeatDays['SUN']\n  }, {\n    dayEng: 'MON',\n    dayKor: '월',\n    checkYn: createRoutinesState.repeatDays['MON']\n  }, {\n    dayEng: 'TUE',\n    dayKor: '화',\n    checkYn: createRoutinesState.repeatDays['TUE']\n  }, {\n    dayEng: 'WEN',\n    dayKor: '수',\n    checkYn: createRoutinesState.repeatDays['WEN']\n  }, {\n    dayEng: 'THU',\n    dayKor: '목',\n    checkYn: createRoutinesState.repeatDays['THU']\n  }, {\n    dayEng: 'FRI',\n    dayKor: '금',\n    checkYn: createRoutinesState.repeatDays['FRI']\n  }, {\n    dayEng: 'SAT',\n    dayKor: '토',\n    checkYn: createRoutinesState.repeatDays['SAT']\n  }];\n  /* state 선언 종료 */\n\n  /* 함수 선언 시작 */\n\n  const checkDate = dayArr.filter(data => {\n    if (data['checkYn'] === \"Y\") return data;\n  });\n\n  const calendarRoutinesSubmit = e => {\n    const copy_todo_state = JSON.parse(JSON.stringify(dtTodos)); // dtTodos State 원본 카피        \n\n    copy_todo_state.map(data => {\n      if (data.goalId === goal_Id) {\n        console.log(data.todos);\n        data.todos.push(createRoutinesState);\n      }\n    });\n    setDtTodos(copy_todo_state);\n    const newArr = Array(todoDataArray.length).fill(false);\n    setIsGoalSelected(newArr);\n  };\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-routines-input-Box\",\n    children: [/*#__PURE__*/_jsxDEV(RoutineDayModal, {\n      dayActiveBoolean: dayActiveBoolean,\n      setDayActiveBoolean: setDayActiveBoolean,\n      dayArr: dayArr,\n      createRoutinesState: createRoutinesState,\n      setCreactRoutinesState: setCreactRoutinesState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RoutineDateModal, {\n      dateActiveBoolean: dateActiveBoolean,\n      setDateActiveBoolean: setDateActiveBoolean,\n      createRoutinesState: createRoutinesState,\n      setCreactRoutinesState: setCreactRoutinesState,\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-title-field\",\n      children: [/*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n        className: \"routines-input-check-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"todo-input\",\n        className: \"routines-input-field\",\n        placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        type: \"text\",\n        maxLength: \"50\",\n        onChange: e => {\n          setCreactRoutinesState({ ...createRoutinesState,\n            title: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-startdate-field\",\n      onClick: () => {\n        setDateActiveBoolean(true);\n        setLocation(`date`);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC2DC\\uC791 \\uB0A0\\uC9DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"start-date-input\",\n        className: \"routines-startdate-input\",\n        type: \"text\",\n        value: createRoutinesState.date,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-enddate-field\",\n      onClick: () => {\n        setDateActiveBoolean(true);\n        setLocation(`endRepeatDate`);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC885\\uB8CC \\uB0A0\\uC9DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"end-date-input\",\n        className: \"routines-enddate-input\",\n        type: \"text\",\n        value: createRoutinesState.endRepeatDate,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-day-field\",\n      onClick: () => {\n        setDayActiveBoolean(true);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"routines-input-day-field-title\",\n        children: \"\\uBC18\\uBCF5 \\uC694\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routines-day-text-wrap\",\n        children: checkDate.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"routines-day-text\",\n            children: data['dayKor']\n          }, data.dayEng, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"routines-input-btn\",\n      onClick: calendarRoutinesSubmit,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateRoutinesForm, \"mjlpXKguyhqj6shvam+cv36NeMk=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = CreateRoutinesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoutinesForm\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/routines/CreateRoutinesForm.js"],"names":["React","useEffect","useState","useRecoilState","useRecoilValue","Button","CheckBoxOutlineBlankIcon","RoutineDayModal","RoutineDateModal","objDatesData","objTodosDataResult","CreateRoutinesForm","props","dtDate","setDtDate","dtTodos","setDtTodos","goal_Id","goalId","todo_Id","todoId","orderNo","setIsGoalSelected","todoDataArray","dayActiveBoolean","setDayActiveBoolean","dateActiveBoolean","setDateActiveBoolean","location","setLocation","createRoutinesState","setCreactRoutinesState","dtToday","THU","WEN","TUE","SAT","FRI","MON","SUN","dayArr","dayEng","dayKor","checkYn","repeatDays","checkDate","filter","data","calendarRoutinesSubmit","e","copy_todo_state","JSON","parse","stringify","map","console","log","todos","push","newArr","Array","length","fill","title","target","value","date","endRepeatDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Button } from \"@mui/material\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport RoutineDayModal from './RoutineDayModal';\r\nimport RoutineDateModal from './RoutineDateModal';\r\n\r\nimport { objDatesData, objTodosDataResult } from \"../../atoms/todoData\";\r\n\r\nexport default function CreateRoutinesForm (props) {\r\n\r\n    /* atom 선언 시작 */\r\n    const [dtDate, setDtDate] = useRecoilState(objDatesData);\r\n    const [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n\r\n    /* atom 선언 끝 */\r\n\r\n    /* state 선언 시작 */\r\n\r\n    const goal_Id = props.goalId;\r\n    const todo_Id = props.todoId;\r\n    const orderNo = props.orderNo;\r\n    const setIsGoalSelected = props.setIsGoalSelected;\r\n    const todoDataArray = props.todoDataArray;\r\n\r\n    let [dayActiveBoolean, setDayActiveBoolean] = useState(false);\r\n    let [dateActiveBoolean, setDateActiveBoolean] = useState(false);\r\n    let [location, setLocation] = useState(null)\r\n\r\n\r\n    let [createRoutinesState, setCreactRoutinesState] = useState({\r\n        \"goalId\": goal_Id, //묶여있는 goal id\r\n        \"todoId\": todo_Id,\r\n        \"orderNo\": orderNo,\r\n        \"title\": \"\",\r\n        \"date\": dtDate.dtToday,\r\n        \"endRepeatDate\": dtDate.dtToday, //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n        \"repeatDays\":{\r\n            THU: \"N\",\r\n            WEN: \"N\",\r\n            TUE: \"N\",\r\n            SAT: \"N\",\r\n            FRI: \"N\",\r\n            MON: \"N\",\r\n            SUN: \"N\"\r\n          },\r\n        \"checkYn\" : \"N\" //달성여부\r\n      });\r\n      const dayArr = [\r\n        { dayEng : 'SUN', dayKor : '일', checkYn: createRoutinesState.repeatDays['SUN']},\r\n        { dayEng : 'MON', dayKor : '월', checkYn: createRoutinesState.repeatDays['MON']},\r\n        { dayEng : 'TUE', dayKor : '화', checkYn: createRoutinesState.repeatDays['TUE']},\r\n        { dayEng : 'WEN', dayKor : '수', checkYn: createRoutinesState.repeatDays['WEN']},\r\n        { dayEng : 'THU', dayKor : '목', checkYn: createRoutinesState.repeatDays['THU']},\r\n        { dayEng : 'FRI', dayKor : '금', checkYn: createRoutinesState.repeatDays['FRI']},\r\n        { dayEng : 'SAT', dayKor : '토', checkYn: createRoutinesState.repeatDays['SAT']},\r\n      ];\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    const checkDate = dayArr.filter(data=>{\r\n        if(data['checkYn'] === \"Y\") return data\r\n    })\r\n    \r\n\r\n\r\n    const calendarRoutinesSubmit = (e) => {\r\n        const copy_todo_state = JSON.parse(JSON.stringify(dtTodos)); // dtTodos State 원본 카피        \r\n        copy_todo_state.map((data)=>{\r\n            if(data.goalId === goal_Id){\r\n                console.log(data.todos)\r\n                data.todos.push(createRoutinesState)\r\n            }\r\n        })\r\n        setDtTodos(copy_todo_state)\r\n        const newArr = Array(todoDataArray.length).fill(false);\r\n        setIsGoalSelected(newArr)\r\n    }\r\n    \r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"create-routines-input-Box\">\r\n        <RoutineDayModal \r\n        dayActiveBoolean={dayActiveBoolean} \r\n        setDayActiveBoolean={setDayActiveBoolean} \r\n        dayArr={dayArr}\r\n        createRoutinesState={createRoutinesState}\r\n        setCreactRoutinesState={setCreactRoutinesState}\r\n        />\r\n        <RoutineDateModal \r\n        dateActiveBoolean={dateActiveBoolean}\r\n        setDateActiveBoolean={setDateActiveBoolean}\r\n        createRoutinesState={createRoutinesState}\r\n        setCreactRoutinesState={setCreactRoutinesState}\r\n        location={location}\r\n        />\r\n        <div className=\"routines-input-title-field\">\r\n                    <CheckBoxOutlineBlankIcon className=\"routines-input-check-icon\"/>\r\n                    <input id=\"todo-input\" className=\"routines-input-field\"  placeholder=\"할 일을 입력해주세요.\" type=\"text\" maxLength={\"50\"} \r\n                    onChange={(e)=>{\r\n                        setCreactRoutinesState({\r\n                            ...createRoutinesState, title: e.target.value\r\n                        })\r\n                    }}\r\n                    /> \r\n                </div>\r\n                <div className=\"routines-input-startdate-field\" onClick={()=>{\r\n                    setDateActiveBoolean(true)\r\n                    setLocation(`date`)\r\n                    }}>\r\n                    <span>시작 날짜</span>\r\n                    <input id=\"start-date-input\" className=\"routines-startdate-input\"  type=\"text\" value={createRoutinesState.date} readOnly /> \r\n                </div>\r\n                <div className=\"routines-input-enddate-field\"\r\n                onClick={()=>{\r\n                    setDateActiveBoolean(true)\r\n                    setLocation(`endRepeatDate`)\r\n                    }} >\r\n                    <span>종료 날짜</span>\r\n                    <input id=\"end-date-input\" className=\"routines-enddate-input\" type=\"text\" value={createRoutinesState.endRepeatDate} readOnly /> \r\n                </div>\r\n                <div className=\"routines-input-day-field\" onClick={()=>{setDayActiveBoolean(true)}} >\r\n                    <span className=\"routines-input-day-field-title\">반복 요일</span>\r\n                    <div className=\"routines-day-text-wrap\">\r\n                        {checkDate.map((data)=>{\r\n                            return <span className=\"routines-day-text\" key={data.dayEng}>{data['dayKor']}</span>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" className=\"routines-input-btn\" onClick={calendarRoutinesSubmit}>등록</Button>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}