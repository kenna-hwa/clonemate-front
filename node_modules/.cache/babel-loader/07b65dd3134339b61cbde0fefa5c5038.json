{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button, List, ListItem, ListItemText, InputBase } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport '../stylesheets/Feed.css';\nimport { goalsData } from \"../atoms/todoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n  let goal = useRecoilValue(goalsData);\n  let [isClicked, setIsClicked] = useState(false);\n  const inputRef = useRef();\n  const buttonRef = useRef();\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  //목표 클릭 시 이벤트 핸들러\n\n  function clickTodoHandler(e) {\n    e.stopPropagation();\n    e.preventDefault();\n    const id = e.currentTarget.id;\n    console.log(buttonRef.current.id);\n    createTodo(id);\n  }\n\n  function createTodo(id) {\n    console.log('id', id);\n    isClicked ? setIsClicked(isClicked = false) : setIsClicked(isClicked = true);\n    console.log('isClicked', isClicked);\n    return /*#__PURE__*/_jsxDEV(InputBase, {\n      className: \"goals-listItem-input\",\n      placeholder: \"Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"feed-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"feed-title\",\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"feed-goals-list-box\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        className: \"goals-list-wrap\",\n        children: goal.map(item => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"goals-listItem\",\n            id: item.goal_id,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"goals-listItem-text-wrap\",\n              id: item.goal_id,\n              onClick: clickTodoHandler,\n              ref: buttonRef,\n              children: [/*#__PURE__*/_jsxDEV(LibraryBooksIcon, {\n                className: \"goals-listItem-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"goals-listItem-text\",\n                id: item.goal_id,\n                name: item.goal_id,\n                sx: {\n                  color: item.title_color\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"goals-listItem-add-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), isClicked && buttonRef.current.id === 1 ? /*#__PURE__*/_jsxDEV(InputBase, {\n              className: \"goals-listItem-input\",\n              placeholder: \"Placeholder\",\n              ref: inputRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 63\n            }, this) : null]\n          }, item.goal_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"Z51u/lbG5aXP+glaKM9yETnBPSY=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Feed.js"],"names":["React","useEffect","useState","useRef","Button","List","ListItem","ListItemText","InputBase","Box","useRecoilState","useRecoilValue","LibraryBooksIcon","goalsData","Feed","goal","isClicked","setIsClicked","inputRef","buttonRef","clickTodoHandler","e","stopPropagation","preventDefault","id","currentTarget","console","log","current","createTodo","map","item","goal_id","color","title_color","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport {  Button, List, ListItem, ListItemText, InputBase } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nimport '../stylesheets/Feed.css'\r\n\r\nimport { goalsData } from \"../atoms/todoData\";\r\n\r\n\r\nexport default function Feed() {\r\n\r\n\r\n/* Hook 선언 시작 */\r\n\r\n/* atom 시작 */\r\n\r\n    let goal = useRecoilValue(goalsData);\r\n\r\n    let [isClicked, setIsClicked] = useState(false);\r\n    const inputRef = useRef();\r\n    const buttonRef = useRef();\r\n\r\n\r\n/* Hook 선언 끝 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n\r\n//목표 클릭 시 이벤트 핸들러\r\nfunction clickTodoHandler(e){\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    const id = e.currentTarget.id;\r\n    console.log(buttonRef.current.id)\r\n    createTodo(id)\r\n}\r\n\r\nfunction createTodo(id) {\r\n    console.log('id', id)\r\n    \r\n    isClicked? setIsClicked(isClicked=false) : setIsClicked(isClicked=true)\r\n    console.log('isClicked', isClicked)\r\n\r\n    return <InputBase className=\"goals-listItem-input\" placeholder=\"Placeholder\"  />\r\n\r\n}\r\n\r\n/* 함수 선언 끝 */\r\n\r\n\r\n\r\n    return (\r\n        <Box className='feed-box'>\r\n        <h2 className=\"feed-title\">Feed</h2>\r\n        <Box className=\"feed-goals-list-box\">\r\n            <List className=\"goals-list-wrap\" >\r\n                {\r\n                goal.map((item) => {\r\n\r\n                return ( <ListItem className=\"goals-listItem\" id={item.goal_id} key={item.goal_id} > \r\n                    <Button className=\"goals-listItem-text-wrap\" id={item.goal_id} onClick={clickTodoHandler} ref={buttonRef}>\r\n                    <LibraryBooksIcon className=\"goals-listItem-icon\" />\r\n                            <ListItemText className=\"goals-listItem-text\" id={item.goal_id} name={item.goal_id} sx={{ color:item.title_color }}  >{item.title}</ListItemText>\r\n                        <ListItemText className=\"goals-listItem-add-icon\" ><span>+</span></ListItemText>\r\n                    </Button>\r\n                    {isClicked && buttonRef.current.id === 1? <InputBase className=\"goals-listItem-input\" placeholder=\"Placeholder\" ref={inputRef} /> : null}\r\n                </ListItem>\r\n                        );\r\n                    })\r\n                }\r\n                \r\n\r\n            </List>\r\n        </Box>\r\n\r\n        </Box>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}