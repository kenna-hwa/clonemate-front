{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Follower.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Stack from '@mui/material/Stack';\nimport { followData } from \"../atoms/todoData\";\nimport \"../stylesheets/Follow.css\"; //  ** 할일 **\n// 팔로워 의 설정 버튼 팝업 확인하기 \n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \n// style : 화면의 넓이, font, fontsize 조정 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FollowerData = [{\n  \"strUserName\": \"🍈메로나\",\n  \"strUserId\": \"merona\",\n  \"strUserEmail\": \"useremail@email.com\",\n  \"strUserInfo\": \"🍈메로나의 투두리스트입니다\",\n  \"dtTodo\": [{\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 1,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일2\",\n    \"ynComplete\": \"N\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }],\n  \"isFollower\": true,\n  \"isFollowing\": true\n}, {\n  \"strUserName\": \"두두\",\n  \"strUserId\": \"dodo\",\n  \"strUserEmail\": \"useremail@email.com\",\n  \"strUserInfo\": \"dodo의 투두리스트입니다\",\n  \"dtTodo\": [{\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 1,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일2\",\n    \"ynComplete\": \"N\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"sample의 할 일\",\n    \"ynComplete\": \"Y\"\n  }],\n  \"isFollower\": true,\n  \"isFollowing\": true\n}, {\n  \"strUserName\": \"주영\",\n  \"strUserId\": \"주영\",\n  \"strUserEmail\": \"useremail@email.com\",\n  \"strUserInfo\": \"주영의 투두리스트입니다\",\n  \"dtTodo\": [{\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"🥛우유마시기\",\n    \"ynComplete\": \"Y\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 1,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"스터디카페가기\",\n    \"ynComplete\": \"N\"\n  }, {\n    \"goal_id\": 1,\n    \"todo_id\": 0,\n    \"bg_color\": \"#2121fe\",\n    \"todo_title\": \"햄버거 냠냠🍔\",\n    \"ynComplete\": \"Y\"\n  }],\n  \"isFollower\": false,\n  \"isFollowing\": true\n}];\nexport default function Follower() {\n  _s();\n\n  /* atom 시작 */\n  //let [following, setFollowing] = useRecoilState(followData);// 팔로우data\n  let [follower, setFollower] = useState(FollowerData);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFollowingChange = e => {\n    let userId = e.target.dataset.index;\n    console.log('current user', userId);\n    const thisData = [...follower];\n    let newFollowing = thisData.filter(item => item.strUserId !== userId);\n    setFollower(newFollowing);\n    console.log(newFollowing);\n    setOpen(false); //window.location.replace(`/exploreSearch/`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: follower.map(data => data.length > 0 ? /*#__PURE__*/_jsxDEV(List // 넓이 조정 \n    , {\n      sx: {\n        width: '100%'\n      },\n      style: {\n        position: 'relative'\n      },\n      component: \"div\",\n      disablePadding: true,\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"button\",\n                primary: data.strUserName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this), data.dtTodo.map(e => {\n                return e.ynComplete === \"Y\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    secondary: e.todo_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 61\n                  }, this)\n                }, e.goal_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 57\n                }, this) : null;\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button1\",\n            onClick: handleClickOpen,\n            children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n              color: \"disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 38\n          }, this)]\n        }, data.strUserId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          sx: {\n            '& .MuiDialog-paper': {\n              width: '80%',\n              maxHeight: 432\n            }\n          },\n          maxWidth: \"sm\",\n          open: open,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              autoFocus: true,\n              \"data-index\": data.strUserId,\n              onClick: handleFollowingChange,\n              color: \"error\",\n              children: \"\\uD314\\uB85C\\uC6CC \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 34\n      }, this)\n    }, data.strUserName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"\\uBAA9\\uB85D \\uC5C6\\uC74C\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Follower, \"Ax/6FEp+gQE/jPom6ZAoHLYqcgs=\");\n\n_c = Follower;\n\nvar _c;\n\n$RefreshReg$(_c, \"Follower\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Follower.js"],"names":["React","useEffect","useState","useParams","useRecoilState","Box","List","ListItemButton","ListItemText","MoreHorizIcon","Button","Dialog","Stack","followData","FollowerData","Follower","follower","setFollower","open","setOpen","handleClickOpen","handleClose","handleFollowingChange","e","userId","target","dataset","index","console","log","thisData","newFollowing","filter","item","strUserId","width","bgcolor","position","map","data","length","strUserName","dtTodo","ynComplete","todo_title","goal_id","maxHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAO,2BAAP,C,CAEA;AACA;AACA;AAEA;;;AAGA,MAAMC,YAAY,GAAG,CACjB;AACA,iBAAe,OADf;AAEA,eAAc,QAFd;AAGA,kBAAgB,qBAHhB;AAIA,iBAAe,iBAJf;AAKA,YAAU,CAAC;AACL,eAAW,CADN;AAEL,eAAW,CAFN;AAGL,gBAAY,SAHP;AAIL,kBAAc,aAJT;AAKL,kBAAc;AALT,GAAD,EAOV;AACM,eAAW,CADjB;AAEM,eAAW,CAFjB;AAGM,gBAAY,SAHlB;AAIM,kBAAc,cAJpB;AAKM,kBAAc;AALpB,GAPU,EAcR;AACI,eAAW,CADf;AAEI,eAAW,CAFf;AAGI,gBAAY,SAHhB;AAII,kBAAc,aAJlB;AAKI,kBAAc;AALlB,GAdQ,CALV;AA0BA,gBAAc,IA1Bd;AA2BA,iBAAe;AA3Bf,CADiB,EA+BnB;AACE,iBAAe,IADjB;AAEE,eAAc,MAFhB;AAGE,kBAAgB,qBAHlB;AAIE,iBAAe,gBAJjB;AAKE,YAAU,CAAC;AACL,eAAW,CADN;AAEL,eAAW,CAFN;AAGL,gBAAY,SAHP;AAIL,kBAAc,aAJT;AAKL,kBAAc;AALT,GAAD,EAOV;AACM,eAAW,CADjB;AAEM,eAAW,CAFjB;AAGM,gBAAY,SAHlB;AAIM,kBAAc,cAJpB;AAKM,kBAAc;AALpB,GAPU,EAcR;AACI,eAAW,CADf;AAEI,eAAW,CAFf;AAGI,gBAAY,SAHhB;AAII,kBAAc,aAJlB;AAKI,kBAAc;AALlB,GAdQ,CALZ;AA0BE,gBAAc,IA1BhB;AA2BE,iBAAe;AA3BjB,CA/BmB,EA4DnB;AACE,iBAAe,IADjB;AAEE,eAAc,IAFhB;AAGE,kBAAgB,qBAHlB;AAIE,iBAAe,cAJjB;AAKE,YAAU,CAAC;AACL,eAAW,CADN;AAEL,eAAW,CAFN;AAGL,gBAAY,SAHP;AAIL,kBAAc,SAJT;AAKL,kBAAc;AALT,GAAD,EAOV;AACM,eAAW,CADjB;AAEM,eAAW,CAFjB;AAGM,gBAAY,SAHlB;AAIM,kBAAc,SAJpB;AAKM,kBAAc;AALpB,GAPU,EAcR;AACI,eAAW,CADf;AAEI,eAAW,CAFf;AAGI,gBAAY,SAHhB;AAII,kBAAc,UAJlB;AAKI,kBAAc;AALlB,GAdQ,CALZ;AA0BE,gBAAc,KA1BhB;AA2BE,iBAAe;AA3BjB,CA5DmB,CAArB;AA+FA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAGlC;AACD;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACY,YAAD,CAAtC;AAGI,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACE,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMkB,eAAe,GAAG,MAAM;AAC5BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAMJ,QAAMG,qBAAqB,GAAIC,CAAD,IAAO;AAEjC,QAAIC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,KAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,MAA5B;AAEA,UAAMM,QAAQ,GAAG,CAAC,GAAGd,QAAJ,CAAjB;AACA,QAAIe,YAAY,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmBV,MAA3C,CAAnB;AAEAP,IAAAA,WAAW,CAACc,YAAD,CAAX;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AAEAZ,IAAAA,OAAO,CAAC,KAAD,CAAP,CAXiC,CAYjC;AAEH,GAdD;;AAiBI,sBACI,QAAC,GAAD;AACI,IAAA,EAAE,EAAE;AAAEgB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KADR;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAC;AAAX,KAHX;AAAA,cAKKrB,QAAQ,CAACsB,GAAT,CAAcC,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAd,gBAEf,QAAC,IAAD,CAAM;AAAN;AACI,MAAA,EAAE,EAAE;AAAEL,QAAAA,KAAK,EAAE;AAAT,OADR;AAEI,MAAA,KAAK,EAAE;AAACE,QAAAA,QAAQ,EAAC;AAAV,OAFX;AAG2B,MAAA,SAAS,EAAC,KAHrC;AAG2C,MAAA,cAAc,MAHzD;AAAA,6BAOa,QAAC,KAAD,CAAO,QAAP;AAAA,gCAGG;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCAEC,QAAC,cAAD;AAAA,mCACG,QAAC,KAAD;AAAA,sCACI,QAAC,YAAD;AACI,gBAAA,SAAS,EAAC,QADd;AAEI,gBAAA,OAAO,EAAEE,IAAI,CAACE;AAFlB;AAAA;AAAA;AAAA;AAAA,sBADJ,EAMSF,IAAI,CAACG,MAAL,CAAYJ,GAAZ,CAAgBf,CAAC,IAAI;AAClB,uBAAOA,CAAC,CAACoB,UAAF,KAAiB,GAAjB,gBACH,QAAC,KAAD,CAAO,QAAP;AAAA,yCACI,QAAC,YAAD;AACI,oBAAA,SAAS,EAAEpB,CAAC,CAACqB;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ,mBAAqBrB,CAAC,CAACsB,OAAvB;AAAA;AAAA;AAAA;AAAA,wBADG,GAKiB,IALxB;AAK6B,eANhC,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBAFD,eAqBC,QAAC,MAAD;AAAS,YAAA,SAAS,EAAC,SAAnB;AAA6B,YAAA,OAAO,EAAEzB,eAAtC;AAAA,mCACG,QAAC,aAAD;AAAe,cAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBArBD;AAAA,WAAgCmB,IAAI,CAACL,SAArC;AAAA;AAAA;AAAA;AAAA,gBAHH,eA+BG,QAAC,MAAD;AACI,UAAA,EAAE,EAAE;AAAE,kCAAsB;AAAEC,cAAAA,KAAK,EAAE,KAAT;AAAgBW,cAAAA,SAAS,EAAE;AAA3B;AAAxB,WADR;AAEI,UAAA,QAAQ,EAAC,IAFb;AAGI,UAAA,IAAI,EAAE5B,IAHV;AAAA,iCAKI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAE,CAAhB;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,MAAjB;AAAkB,4BAAYqB,IAAI,CAACL,SAAnC;AAA8C,cAAA,OAAO,EAAEZ,qBAAvD;AAA+E,cAAA,KAAK,EAAC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBA/BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAPb,OAGSkB,IAAI,CAACE,WAHd;AAAA;AAAA;AAAA;AAAA,YAFe,gBAwDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxDnB;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoEF;;GAxGsB1B,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { followData } from \"../atoms/todoData\";\r\n\r\nimport \"../stylesheets/Follow.css\";\r\n\r\n//  ** 할일 **\r\n// 팔로워 의 설정 버튼 팝업 확인하기 \r\n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \r\n\r\n// style : 화면의 넓이, font, fontsize 조정 \r\n\r\n\r\nconst FollowerData = [\r\n    {\r\n    \"strUserName\": \"🍈메로나\",\r\n    \"strUserId\" : \"merona\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"🍈메로나의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  \r\n  {\r\n    \"strUserName\": \"두두\",\r\n    \"strUserId\" : \"dodo\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"dodo의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  {\r\n    \"strUserName\": \"주영\",\r\n    \"strUserId\" : \"주영\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"주영의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"🥛우유마시기\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"스터디카페가기\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"햄버거 냠냠🍔\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": false,\r\n    \"isFollowing\": true,\r\n  }  \r\n            \r\n]\r\n\r\n\r\n\r\n\r\nexport default function Follower() {\r\n\r\n\r\n /* atom 시작 */\r\n//let [following, setFollowing] = useRecoilState(followData);// 팔로우data\r\nlet [follower, setFollower] = useState(FollowerData);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n\r\n\r\nconst handleFollowingChange = (e) => {\r\n    \r\n    let userId = e.target.dataset.index;\r\n    console.log('current user', userId);\r\n\r\n    const thisData = [...follower];\r\n    let newFollowing = thisData.filter(item => item.strUserId !== userId)\r\n\r\n    setFollower(newFollowing);\r\n    console.log(newFollowing)\r\n\r\n    setOpen(false);\r\n    //window.location.replace(`/exploreSearch/`);\r\n    \r\n};\r\n\r\n\r\n    return (\r\n        <Box \r\n            sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n            textAlign='center' \r\n            style={{ position:'relative'}}>\r\n\r\n            {follower.map((data => data.length > 0 ? (\r\n                 \r\n                    <List // 넓이 조정 \r\n                        sx={{ width: '100%'}}\r\n                        style={{position:'relative'}} \r\n                        key={data.strUserName} component=\"div\" disablePadding>\r\n                            \r\n                                {/* isfollowing 값을 true/false ? -> 문법 오류 해결 */}\r\n                           \r\n                                 <React.Fragment>\r\n                                {/* Button click 효과 및 css 수정 */}\r\n                                    \r\n                                    <div className=\"container\" key={data.strUserId}> \r\n                                    {/* 왜 div 하나 차이로 레이아웃이 달라지는지 모르겠음 */}\r\n                                     <ListItemButton>\r\n                                        <Stack>\r\n                                            <ListItemText\r\n                                                className=\"button\"\r\n                                                primary={data.strUserName}>   \r\n                                            </ListItemText> \r\n\r\n                                                {data.dtTodo.map(e => {\r\n                                                    return e.ynComplete === \"Y\" ? \r\n                                                        <React.Fragment key={e.goal_id}>\r\n                                                            <ListItemText\r\n                                                                secondary={e.todo_title}>  \r\n                                                            </ListItemText> \r\n                                                        </React.Fragment> : null}\r\n                                                )}\r\n\r\n                                        </Stack>\r\n                                     </ListItemButton> \r\n\r\n                                     <Button  className=\"button1\" onClick={handleClickOpen}>\r\n                                        <MoreHorizIcon color=\"disabled\"/> \r\n                                     </Button>\r\n                                     \r\n                                    </div> \r\n\r\n                                    {/* Dialog 위치 조정, height 등 style 변경 */}\r\n                                    <Dialog\r\n                                        sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                                        maxWidth=\"sm\"\r\n                                        open={open}\r\n                                        >\r\n                                        <Stack spacing={1} >\r\n                                            <Button autoFocus data-index={data.strUserId} onClick={handleFollowingChange}  color=\"error\">팔로워 삭제</Button>\r\n                                            <Button onClick={handleClose}>취소</Button>\r\n                                        </Stack>\r\n                                       \r\n                                    </Dialog>\r\n                                 </React.Fragment>\r\n                                \r\n                            \r\n                         \r\n                            \r\n                    </List> ) : <p>\"목록 없음\"</p> )\r\n            )}\r\n                \r\n     \r\n        </Box>\r\n  )\r\n }\r\n"]},"metadata":{},"sourceType":"module"}