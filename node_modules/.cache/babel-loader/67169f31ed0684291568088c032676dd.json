{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Following.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport Stack from '@mui/material/Stack';\nimport { followData } from \"../atoms/todoData\";\nimport \"../stylesheets/Follow.css\"; //함수선언\n// isfollowing? Y인 사람만 리스트에 불러와져 있으면 됨. \n//  -> 더미 데이터에서 isfollowing 이 y인 사람만 파싱? 으로 처리 하여 \n//     나타나는 것은 닉네임으로 표현하기 \n// 팔로잉 추가 함수\n// 팔로잉 삭제 함수 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Following() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /* atom 시작 */\n\n\n  let [following, setFollowing] = useRecoilState(followData); // 팔로우data\n\n  let {\n    originID\n  } = useParams(); //url Params 따오기 ???\n\n  let [editFollowingState, setEditFollowingState] = useState('');\n  /*useEffect(()=>{\r\n      let originFollowingState = [...following]; //원본 follow 가지고 옴\r\n      let originFollowing;\r\n      originFollowing = originFollowingState[originID]\r\n      setFollowingState(originFollowing)\r\n  },[])*/\n\n  const followDataKeyValues = data => {\n    const entries = Object.entries(data);\n    const listItems = entries.map(_ref => {\n      let [key, value] = _ref;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    });\n    return {\n      listItems\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: following.map(data => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          position: 'relative'\n        },\n        component: \"div\",\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: data.isFollowing === \"Y\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                children: followDataKeyValues(data)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button1\",\n                onClick: handleClickOpen,\n                children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n                  color: \"disabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              sx: {\n                '& .MuiDialog-paper': {\n                  width: '80%',\n                  maxHeight: 432\n                }\n              },\n              maxWidth: \"sm\",\n              open: open,\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  autoFocus: true,\n                  onClick: handleClose,\n                  color: \"error\",\n                  children: \"\\uC5B8\\uD314\\uB85C\\uC6B0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClose,\n                  children: \"\\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 34\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)\n      }, data.strUserId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Following, \"aoCg70ehCwom078SQhiSYip88KY=\", false, function () {\n  return [useRecoilState, useParams];\n});\n\n_c = Following;\n\nvar _c;\n\n$RefreshReg$(_c, \"Following\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Following.js"],"names":["React","useEffect","useState","useParams","useRecoilState","Box","ListItem","ListItemButton","ListItemText","MoreHorizIcon","Button","Dialog","DialogActions","Stack","followData","Following","open","setOpen","handleClickOpen","handleClose","following","setFollowing","originID","editFollowingState","setEditFollowingState","followDataKeyValues","data","entries","Object","listItems","map","key","value","width","bgcolor","position","isFollowing","maxHeight","strUserId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { followData } from \"../atoms/todoData\";\r\n\r\nimport \"../stylesheets/Follow.css\";\r\n\r\n//함수선언\r\n// isfollowing? Y인 사람만 리스트에 불러와져 있으면 됨. \r\n//  -> 더미 데이터에서 isfollowing 이 y인 사람만 파싱? 으로 처리 하여 \r\n//     나타나는 것은 닉네임으로 표현하기 \r\n// 팔로잉 추가 함수\r\n// 팔로잉 삭제 함수 \r\n\r\n\r\nexport default function Following() {\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n\r\n\r\n\r\n/* atom 시작 */\r\nlet [following, setFollowing] = useRecoilState(followData);// 팔로우data\r\n\r\nlet { originID } = useParams();//url Params 따오기 ???\r\n\r\nlet [editFollowingState, setEditFollowingState] = useState('');\r\n\r\n/*useEffect(()=>{\r\n    let originFollowingState = [...following]; //원본 follow 가지고 옴\r\n    let originFollowing;\r\n    originFollowing = originFollowingState[originID]\r\n    setFollowingState(originFollowing)\r\n},[])*/\r\n\r\nconst followDataKeyValues = (data) => {\r\n    const entries = Object.entries(data);\r\n    const listItems = entries.map(([key, value]) => (\r\n        <ListItem>\r\n            {value}\r\n        </ListItem>\r\n    ));\r\n    return {listItems};\r\n};\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box \r\n            sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n            textAlign='center' \r\n            style={{ position:'relative'}}>\r\n\r\n            {following.map(data=>{\r\n                return (\r\n                    <ListItem \r\n                        style={{position:'relative'}} \r\n                        key={data.strUserId} component=\"div\" disablePadding>\r\n                            <ListItemButton>\r\n                                {/* isfollowing 값을 true/false ? Y N ? */}\r\n                                {data.isFollowing === \"Y\" ? (\r\n                                 <span>\r\n                                    {/* list button, horizontal css 수정 */}\r\n                                    <div className=\"container\"> \r\n                                        <ListItemText>\r\n                                            {followDataKeyValues(data)}\r\n                                        </ListItemText>\r\n                                        {/* <ListItemText \r\n                                            className=\"button0\"\r\n                                            primary={data.strUserName}\r\n                                        secondary={Object.values(data)[3]} /> */}\r\n    \r\n                                        <Button  className=\"button1\" onClick={handleClickOpen}>\r\n                                            <MoreHorizIcon color=\"disabled\"/> \r\n                                        </Button>\r\n                                    </div>\r\n                                    {/* Dialog 위치 조정, height... style 변경 */}\r\n                                    <Dialog\r\n                                        sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                                        maxWidth=\"sm\"\r\n                                        open={open}\r\n                                        >\r\n                                        <Stack spacing={1} >\r\n                                            <Button autoFocus onClick={handleClose} color=\"error\">언팔로우</Button>\r\n                                            <Button onClick={handleClose}>취소</Button>\r\n                                        </Stack>\r\n                                       \r\n                                    </Dialog>\r\n                                 </span>\r\n                                ) : null}\r\n                            </ListItemButton>\r\n                         \r\n                            \r\n                    </ListItem>\r\n                );\r\n            })}\r\n     \r\n        </Box>\r\n    \r\n    )} "]},"metadata":{},"sourceType":"module"}