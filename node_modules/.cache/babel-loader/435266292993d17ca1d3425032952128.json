{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Feed.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, List, ListItem, ListItemText, InputBase, getBottomNavigationUtilityClass } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { constSelector, useRecoilState, useRecoilValue } from \"recoil\";\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport '../stylesheets/Feed.css';\nimport { goalsData } from \"../atoms/todoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n  let goal = useRecoilValue(goalsData);\n  let [isGoalSelected, setIsGoalSelected] = useState(Array(goal.length).fill(false));\n  const inputRef = useRef();\n  const buttonRef = useRef();\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  //목표 클릭 시 이벤트 핸들러\n\n  function clickTodoHandler(e) {\n    const id = e.currentTarget.id;\n    const index = e.currentTarget.dataset.index;\n    const newArr = Array(goal.length).fill(false);\n    newArr[index] = true;\n    setIsGoalSelected(newArr); // createTodo(id)\n  }\n\n  function createTodo(id) {\n    return /*#__PURE__*/_jsxDEV(InputBase, {\n      className: \"goals-listItem-input\",\n      placeholder: \"Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"feed-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"feed-title\",\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"feed-goals-list-box\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        className: \"goals-list-wrap\",\n        children: goal.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"goals-listItem\",\n            id: item.goal_id,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"goals-listItem-text-wrap\",\n              isselected: isGoalSelected[index].toString(),\n              id: item.goal_id,\n              onClick: e => {\n                clickTodoHandler(e);\n              },\n              ref: buttonRef,\n              \"data-index\": index,\n              children: [/*#__PURE__*/_jsxDEV(LibraryBooksIcon, {\n                className: \"goals-listItem-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"goals-listItem-text\",\n                id: item.goal_id,\n                name: item.goal_id,\n                sx: {\n                  color: item.title_color\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                className: \"goals-listItem-add-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), isGoalSelected[index] ? /*#__PURE__*/_jsxDEV(CreateInput, {\n              id: item.goal_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 46\n            }, this) : null]\n          }, item.goal_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"5gyvFsprpF7yvwFBvqrPO1+XqNA=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Feed;\nexport function CreateInput(props) {\n  _s2();\n\n  let id = props.id;\n  let defaultDate = new Date().toJSON().substring(0, 10);\n  console.log('date', defaultDate);\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm({\n    mode: \"onChange\"\n  });\n  let [createTodoState, setCreactTodoState] = useState({\n    \"todo_id\": \"\",\n    \"goal_id\": \"\",\n    //묶여있는 goal id\n    \"next_todo_id\": \"\",\n    //다음 todo id (순서지정용)\n    \"title\": \"\",\n    \"date\": `${defaultDate}`,\n    \"end_repeat_date\": \"\",\n    //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\n    \"repeat_days\": {\n      \"sun\": \"\",\n      //y 면 일요일 반복, n 이면 반복 x\n      \"mon\": \"\",\n      \"tue\": \"\",\n      \"wed\": \"\",\n      \"thu\": \"\",\n      \"fri\": \"\",\n      \"sat\": \"\"\n    },\n    \"check_yn\": \"N\" //달성여부\n\n  });\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  // console.log(goal)//react-form-hook submit 함수\n\n  const onSubmit = data => {\n    setCreactTodoState(JSON.stringify(createTodoState));\n    console.log(createTodoState); // setCreactGoalState(JSON.stringify(createGoalState));\n    // addGoal(createGoalState);\n    // window.location.replace(\"/goals\")\n  };\n\n  const onError = error => {\n    console.log(error);\n  };\n\n  function onInputChange(e) {\n    const new_todo_item = createTodoState;\n    new_todo_item.title = e.target.value;\n    setCreactTodoState(new_todo_item);\n  }\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit, onError),\n      className: \"todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(InputBase, { ...register(\"title\"),\n        id: \"todo-input\",\n        className: \"todo-title-input\",\n        placeholder: \"Placeholder\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, { ...register(\"goal_id\"),\n        id: \"todo-goal-id-input\",\n        className: \"todo-goal-id-input\",\n        type: \"hidden\",\n        value: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo_btn\",\n        type: \"submit\",\n        value: \"확인\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(CreateInput, \"s9fdRn4rqnRJ+MuoKHU1sFrSECI=\", false, function () {\n  return [useForm];\n});\n\n_c2 = CreateInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Feed\");\n$RefreshReg$(_c2, \"CreateInput\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Feed.js"],"names":["React","useEffect","useState","useRef","useForm","Button","List","ListItem","ListItemText","InputBase","getBottomNavigationUtilityClass","Box","constSelector","useRecoilState","useRecoilValue","LibraryBooksIcon","goalsData","Feed","goal","isGoalSelected","setIsGoalSelected","Array","length","fill","inputRef","buttonRef","clickTodoHandler","e","id","currentTarget","index","dataset","newArr","createTodo","map","item","goal_id","toString","color","title_color","title","CreateInput","props","defaultDate","Date","toJSON","substring","console","log","register","handleSubmit","errors","watch","mode","createTodoState","setCreactTodoState","onSubmit","data","JSON","stringify","onError","error","onInputChange","new_todo_item","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  Button, List, ListItem, ListItemText, InputBase, getBottomNavigationUtilityClass } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { constSelector, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\n\r\nimport '../stylesheets/Feed.css'\r\n\r\nimport { goalsData } from \"../atoms/todoData\";\r\n\r\n\r\nexport default function Feed() {\r\n\r\n\r\n/* Hook 선언 시작 */\r\n\r\n/* atom 시작 */\r\n    let goal = useRecoilValue(goalsData);\r\n\r\n    let [isGoalSelected, setIsGoalSelected] = useState( Array(goal.length).fill(false) );\r\n    const inputRef = useRef();\r\n    const buttonRef = useRef();\r\n\r\n\r\n/* Hook 선언 끝 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n\r\n//목표 클릭 시 이벤트 핸들러\r\nfunction clickTodoHandler(e){\r\n    const id= e.currentTarget.id;\r\n    const index = e.currentTarget.dataset.index;\r\n    const newArr = Array(goal.length).fill(false) ;\r\n    newArr[index] = true;\r\n    setIsGoalSelected(newArr)\r\n    // createTodo(id)\r\n}\r\n\r\nfunction createTodo(id) {\r\n\r\n    return <InputBase className=\"goals-listItem-input\" placeholder=\"Placeholder\"  />\r\n\r\n}\r\n\r\n/* 함수 선언 끝 */\r\n\r\n\r\n\r\n    return (\r\n        <Box className='feed-box'>\r\n        <h2 className=\"feed-title\">Feed</h2>\r\n        <Box className=\"feed-goals-list-box\">\r\n            <List className=\"goals-list-wrap\" >\r\n                {\r\n                goal.map((item, index) => {\r\n\r\n                return ( <ListItem className=\"goals-listItem\" id={item.goal_id} key={item.goal_id} > \r\n                    <Button className=\"goals-listItem-text-wrap\" isselected={isGoalSelected[index].toString()} id={item.goal_id} onClick={(e)=>{(clickTodoHandler(e))}} ref={buttonRef} data-index={index} >\r\n                    <LibraryBooksIcon className=\"goals-listItem-icon\" />\r\n                            <ListItemText className=\"goals-listItem-text\" id={item.goal_id} name={item.goal_id} sx={{ color:item.title_color }}  >{item.title}</ListItemText>\r\n                        <ListItemText className=\"goals-listItem-add-icon\" ><span>+</span></ListItemText>\r\n                    </Button>\r\n                    {isGoalSelected[index] ? <CreateInput id={item.goal_id} />: null}\r\n                </ListItem>\r\n                        );\r\n                    })\r\n                }\r\n                \r\n\r\n            </List>\r\n        </Box>\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport function CreateInput(props) {\r\n\r\n\r\n    let id = props.id;\r\n    let defaultDate = new Date().toJSON().substring(0,10);\r\n\r\n    console.log('date', defaultDate)\r\n    /* Hook 선언 시작 */\r\n\r\n    /* atom 시작 */\r\n    const { register, handleSubmit, errors, watch } = useForm({ mode: \"onChange\" });\r\n    let [createTodoState, setCreactTodoState] = useState({\r\n        \"todo_id\": \"\",\r\n        \"goal_id\": \"\", //묶여있는 goal id\r\n        \"next_todo_id\": \"\", //다음 todo id (순서지정용)\r\n        \"title\": \"\",\r\n        \"date\": `${defaultDate}`,\r\n        \"end_repeat_date\": \"\", //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n        \"repeat_days\": {\r\n            \"sun\": \"\", //y 면 일요일 반복, n 이면 반복 x\r\n            \"mon\": \"\",\r\n            \"tue\": \"\",\r\n            \"wed\": \"\",\r\n            \"thu\": \"\",\r\n            \"fri\": \"\",\r\n            \"sat\": \"\",\r\n        },\r\n        \"check_yn\" : \"N\" //달성여부\r\n }\r\n    );\r\n\r\n    /* Hook 선언 끝 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    // console.log(goal)//react-form-hook submit 함수\r\n    const onSubmit = (data) => { \r\n\r\n        setCreactTodoState(JSON.stringify(createTodoState));\r\n        console.log(createTodoState)\r\n        // setCreactGoalState(JSON.stringify(createGoalState));\r\n        // addGoal(createGoalState);\r\n        // window.location.replace(\"/goals\")\r\n    }\r\n\r\n    const onError = (error) => {\r\n    console.log(error);\r\n    };\r\n\r\n    function onInputChange(e) {\r\n        const new_todo_item = createTodoState;\r\n        new_todo_item.title = e.target.value;\r\n        setCreactTodoState(new_todo_item)\r\n    }\r\n\r\n    /* 함수 선언 끝 */\r\n\r\n    return  (\r\n            <Box>\r\n                <form onSubmit={handleSubmit(onSubmit,onError)} className=\"todo-form\">\r\n                    <InputBase {...register(\"title\")} id=\"todo-input\" className=\"todo-title-input\"  placeholder=\"Placeholder\" onChange={onInputChange} /> \r\n                    <InputBase {...register(\"goal_id\")} id=\"todo-goal-id-input\" className=\"todo-goal-id-input\" type=\"hidden\" value={id} /> \r\n                    <input className=\"todo_btn\" type=\"submit\" value={\"확인\"} />\r\n                </form>\r\n            </Box>\r\n            )\r\n}"]},"metadata":{},"sourceType":"module"}