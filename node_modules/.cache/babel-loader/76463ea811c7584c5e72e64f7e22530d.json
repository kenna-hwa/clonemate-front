{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\main\\\\FeedTodoGoal.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"@mui/material\";\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport FeedTodoData from \"./FeedTodoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedTodoGoal(props) {\n  const data = props.data;\n  const idx = props.idx;\n  const modalOpen = props.modalOpen;\n  const onClickGoalHandler = props.onClickGoalHandler;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goals-list-box\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"goals-list-button\",\n      id: idx,\n      \"data-index\": idx,\n      data: data,\n      onClick: onClickGoalHandler,\n      children: [/*#__PURE__*/_jsxDEV(ReceiptIcon, {\n        className: \"goals-list-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"goals-list-text\",\n        id: data.goalOrderNo,\n        name: data.goalOrderNo,\n        style: {\n          color: data.goalTitleColor\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.goalTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 134\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"goals-list-plus-icon-wrap\",\n        children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          className: \"goals-list-plus-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-list-wrap\",\n      children: data.todos.map((data, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FeedTodoData, {\n            todos: data,\n            modalOpen: modalOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)\n        }, data.todoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, data.goalOrderNo, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_c = FeedTodoGoal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedTodoGoal\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/main/FeedTodoGoal.js"],"names":["React","useEffect","useState","useRef","Button","ReceiptIcon","AddCircleIcon","FeedTodoData","FeedTodoGoal","props","data","idx","modalOpen","onClickGoalHandler","goalOrderNo","color","goalTitleColor","goalTitle","todos","map","todoId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,OAAOC,YAAP,MAA0B,gBAA1B;;AAGC,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzC,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,GAAG,GAAGF,KAAK,CAACE,GAAlB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACG,SAAxB;AACA,QAAMC,kBAAkB,GAAGJ,KAAK,CAACI,kBAAjC;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,EAAE,EAAEF,GAA1C;AAA+C,oBAAYA,GAA3D;AAAgE,MAAA,IAAI,EAAED,IAAtE;AAA4E,MAAA,OAAO,EAAEG,kBAArF;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAA+B,QAAA,EAAE,EAAEH,IAAI,CAACI,WAAxC;AAAqD,QAAA,IAAI,EAAEJ,IAAI,CAACI,WAAhE;AAA6E,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAACL,IAAI,CAACM;AAAb,SAApF;AAAA,+BAAqH;AAAA,oBAAIN,IAAI,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA;AAArH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA,+BACA,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKP,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAe,CAACT,IAAD,EAAOC,GAAP,KAAa;AACzB,4BACA,QAAC,KAAD,CAAO,QAAP;AAAA,iCACA,QAAC,YAAD;AAAc,YAAA,KAAK,EAAED,IAArB;AAA2B,YAAA,SAAS,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA;AADA,WAAqBF,IAAI,CAACU,MAA1B;AAAA;AAAA;AAAA;AAAA,gBADA;AAMH,OAPA;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,KAAqCV,IAAI,CAACI,WAA1C;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;KAhCwBN,Y","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport FeedTodoData  from \"./FeedTodoData\";\r\n\r\n\r\n export default function FeedTodoGoal(props) {\r\n\r\n    const data = props.data; \r\n    const idx = props.idx;\r\n    const modalOpen = props.modalOpen;\r\n    const onClickGoalHandler = props.onClickGoalHandler;\r\n\r\n\r\n    return (\r\n        <div className=\"goals-list-box\" key={data.goalOrderNo}>\r\n            <Button className=\"goals-list-button\" id={idx} data-index={idx} data={data} onClick={onClickGoalHandler}>\r\n                <ReceiptIcon className=\"goals-list-icon\" />\r\n                <p className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color:data.goalTitleColor }}  ><p>{data.goalTitle}</p>\r\n                </p>\r\n                <p className=\"goals-list-plus-icon-wrap\">\r\n                <AddCircleIcon className=\"goals-list-plus-icon\"/>\r\n                </p>\r\n            </Button>\r\n            <div className=\"todos-list-wrap\">\r\n                {data.todos.map((data, idx)=>{\r\n                    return (\r\n                    <React.Fragment key={data.todoId}>\r\n                    <FeedTodoData todos={data} modalOpen={modalOpen}\r\n                    />\r\n                    </React.Fragment>\r\n                    )\r\n                }) \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n} "]},"metadata":{},"sourceType":"module"}