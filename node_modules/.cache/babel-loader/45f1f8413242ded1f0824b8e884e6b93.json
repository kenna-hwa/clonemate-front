{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\order\\\\OrderItem.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Box, Button, List, ListItem, ListItemText } from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from \"react-beautiful-dnd\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { objTodosDataResult, goalsData, todoData, objDatesData } from \"../../atoms/todoData\";\nimport \"../../stylesheets/OrderItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderItem() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* Hook 선언 종료 */\n\n  /* state 선언 시작 */\n\n  /* state 선언 종료 */\n\n  /* atom 시작 */\n  let dateData = useRecoilValue(objDatesData); // atom에서 goal+todo 데이터 가져오기\n\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  const todoDataArray = JSON.parse(JSON.stringify(dtTodos));\n  console.log(\"dtTodos\", dtTodos);\n  /* atom 종료 */\n\n  /* 함수 선언 시작 */\n\n  const onDragEnd = res => {\n    if (!res.destination) return; //드래그 하는 sourced의 index\n\n    const sourceGoalOrderNo = res.source.index; //드래그 해서 내려놓은 destination의 index\n\n    const destinationGoalOrderNo = res.destination.index;\n    console.log(\"sourceGoalOrderNo\", sourceGoalOrderNo);\n    todoDataArray.map(goal => {\n      if (goal.goalOrderNo === sourceGoalOrderNo) {\n        goal.goalOrderNo = destinationGoalOrderNo;\n      }\n    });\n    setDtTodos(todoDataArray);\n  };\n\n  const onDragEndGoal = result => {\n    if (!result.destination) return;\n    const draggingItemIndex = result.source.index - 1;\n    const afterDragItemIndex = result.destination.index - 1;\n    const removeTag = todoDataArray.splice(draggingItemIndex, 1);\n    todoDataArray.splice(afterDragItemIndex, 0, removeTag[0]);\n    setDtTodos(todoDataArray);\n  };\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEndGoal,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"Goal\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-list-wrap\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [todoDataArray.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: String(data.goalOrderNo),\n            index: data.goalOrderNo,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(OrderTodoGoal, {\n                data: data,\n                index: index,\n                id: data.goalId,\n                todoDataArray: todoDataArray,\n                setDtTodos: setDtTodos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        }), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this); // return (\n  //   <div className=\"feed-wrap\">\n  //     <div className=\"goals-list-wrap\">\n  //       {todoDataArray.map((data, idx) => {\n  //           return <OrderTodoGoal data={data} idx={idx} key={data.goalId} />\n  //         })}\n  //     </div>\n  //   </div>\n  // )\n}\n\n_s(OrderItem, \"52by6CE41JQMDRTG9dyCGmBVyvQ=\", false, function () {\n  return [useRecoilValue, useRecoilState];\n});\n\n_c = OrderItem;\nexport const OrderTodoGoal = props => {\n  const data = props.data;\n  const index = props.index;\n  const goal_id = props.id;\n  const todoDataArray = props.todoDataArray;\n  const setDtTodos = props.setDtTodos;\n  /* 함수 선언 시작 */\n\n  const onDragEnd = res => {\n    if (!res.destination) return; //드래그 하는 sourced의 index\n\n    const sourceTodoOrderNo = res.source.index;\n    console.log(\"sourceTodoOrderNo\", sourceTodoOrderNo); //드래그 해서 내려놓은 destination의 index\n\n    const destinationTodoOrderNo = res.destination.index;\n    todoDataArray.map(goal => {\n      if (goal.goalId === goal_id) {\n        goal.todos.map(todo => {\n          console.log(\"todo.orderNo\", todo.orderNo);\n          console.log(\"sourceTodoOrderNo\", sourceTodoOrderNo);\n\n          if (todo.orderNo === sourceTodoOrderNo) {\n            todo.orderNo = destinationTodoOrderNo;\n          } // !!! 변경은 되나 ... 여러개일때 순서가 바뀌지 않는다...?\n          // !!! 1->3 으로 가면 1번이 3번이 되면서 나머지 2번이 1번이 되고 3번이 2번이 되어야 하는데\n          // !!! 이 방식은 ...큐..?\n\n        });\n      }\n    });\n    setDtTodos(todoDataArray);\n  }; // const onDragEndTodo = (result) => {\n  //   if (!result.destination) return;\n  //   const draggingItemIndex = result.source.index-1;\n  //   const afterDragItemIndex = result.destination.index-1;\n  //   const removeTag = todoDataArray.splice(draggingItemIndex, 1);\n  //   todoDataArray.todos.splice(afterDragItemIndex, 0, removeTag[0]);\n  //   setDtTodos(todoDataArray);\n  // }\n\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"Todo\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-list-box\",\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"goals-list-button\",\n          \"data-index\": index,\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(ReceiptIcon, {\n            className: \"goals-list-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goals-list-text\",\n            id: data.goalOrderNo,\n            name: data.goalOrderNo,\n            style: {\n              color: data.goalTitleColor\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.goalTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"goals-list-plus-icon-wrap\",\n            children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n              className: \"goals-list-plus-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todos-list-wrap\",\n          children: data.todos.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: \"todo\" + index,\n              index: data.orderNo,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(FeedTodoData, {\n                  todos: data,\n                  index: index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, data.todoId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), provided.placeholder]\n      }, data.goalOrderNo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_c2 = OrderTodoGoal;\nexport const FeedTodoData = props => {\n  const todos = props.todos;\n  const index = props.todos.todoId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos-list-box\",\n    \"data-todos\": todos,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-listItem-text-wrap\",\n      id: todos.todoId,\n      \"data-index\": todos.orderNo,\n      children: [todos.checkYn === \"Y\" ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n        \"data-goalid\": todos.goalId,\n        \"data-todoid\": todos.todoId,\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n        \"data-goalid\": todos.goalId,\n        \"data-todoid\": todos.todoId,\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_c3 = FeedTodoData;\nconst TodoList = /*#__PURE__*/React.forwardRef(_c4 = _s2((props, ref) => {\n  var _inputRef$current;\n\n  _s2();\n\n  const inputRef = useRef(null);\n  const todos = props.todos;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"todos-list-input\",\n    id: \"todo-input\",\n    type: \"text\",\n    maxLength: \"50\",\n    size: (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value.length,\n    ref: inputRef,\n    name: todos.title,\n    \"data-orderno\": todos.orderNo,\n    \"data-goalid\": todos.goalId,\n    \"data-todoid\": todos.todoId,\n    value: todos.title,\n    readOnly: true\n  }, todos.todoId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\"));\n_c5 = TodoList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"OrderItem\");\n$RefreshReg$(_c2, \"OrderTodoGoal\");\n$RefreshReg$(_c3, \"FeedTodoData\");\n$RefreshReg$(_c4, \"TodoList$React.forwardRef\");\n$RefreshReg$(_c5, \"TodoList\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/order/OrderItem.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","Box","Button","List","ListItem","ListItemText","DragDropContext","Droppable","Draggable","resetServerContext","ReceiptIcon","AddCircleIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","objTodosDataResult","goalsData","todoData","objDatesData","OrderItem","dateData","dtTodos","setDtTodos","todoDataArray","JSON","parse","stringify","console","log","onDragEnd","res","destination","sourceGoalOrderNo","source","index","destinationGoalOrderNo","map","goal","goalOrderNo","onDragEndGoal","result","draggingItemIndex","afterDragItemIndex","removeTag","splice","provided","droppableProps","innerRef","data","String","draggableProps","dragHandleProps","goalId","placeholder","OrderTodoGoal","props","goal_id","id","sourceTodoOrderNo","destinationTodoOrderNo","todos","todo","orderNo","color","goalTitleColor","goalTitle","todoId","FeedTodoData","checkYn","TodoList","forwardRef","ref","inputRef","current","value","length","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Box, Button, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  resetServerContext,\r\n} from \"react-beautiful-dnd\";\r\n\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n\r\nimport {\r\n  objTodosDataResult,\r\n  goalsData,\r\n  todoData,\r\n  objDatesData,\r\n} from \"../../atoms/todoData\";\r\n\r\nimport \"../../stylesheets/OrderItem.css\";\r\n\r\nexport default function OrderItem() {\r\n  /* Hook 선언 시작 */\r\n\r\n  /* Hook 선언 종료 */\r\n\r\n  /* state 선언 시작 */\r\n\r\n  /* state 선언 종료 */\r\n\r\n  /* atom 시작 */\r\n  let dateData = useRecoilValue(objDatesData);\r\n  // atom에서 goal+todo 데이터 가져오기\r\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n  const todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n  console.log(\"dtTodos\", dtTodos)\r\n\r\n  /* atom 종료 */\r\n\r\n  /* 함수 선언 시작 */\r\n\r\n  const onDragEnd = (res) => {\r\n    if (!res.destination) return;\r\n    //드래그 하는 sourced의 index\r\n    const sourceGoalOrderNo = res.source.index;\r\n    //드래그 해서 내려놓은 destination의 index\r\n    const destinationGoalOrderNo = res.destination.index;\r\n  console.log(\"sourceGoalOrderNo\", sourceGoalOrderNo)\r\n  todoDataArray.map((goal)=>{\r\n      if(goal.goalOrderNo === sourceGoalOrderNo){\r\n        goal.goalOrderNo = destinationGoalOrderNo;\r\n      }\r\n    })\r\n    setDtTodos(todoDataArray)\r\n}\r\n\r\n  const onDragEndGoal = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    \r\n    const draggingItemIndex = result.source.index-1;\r\n    const afterDragItemIndex = result.destination.index-1;\r\n    const removeTag = todoDataArray.splice(draggingItemIndex, 1);\r\n\r\n    todoDataArray.splice(afterDragItemIndex, 0, removeTag[0]);\r\n\r\n    setDtTodos(todoDataArray);\r\n  }\r\n\r\n  /* 함수 선언 종료 */\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndGoal}>\r\n      <Droppable droppableId=\"Goal\">\r\n      {provided =>  (\r\n        <div className=\"goals-list-wrap\" {...provided.droppableProps} ref={provided.innerRef}>\r\n          {todoDataArray.map((data, index) => {\r\n            return (\r\n              <Draggable draggableId={String(data.goalOrderNo)} index={data.goalOrderNo} key={index}>\r\n               {provided => (\r\n                  <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                    <OrderTodoGoal data={data} index={index}  id={data.goalId} todoDataArray={todoDataArray} setDtTodos={setDtTodos} />\r\n                  </div>\r\n                )}  \r\n              </Draggable>\r\n            )\r\n          })}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n\r\n  // return (\r\n  //   <div className=\"feed-wrap\">\r\n  //     <div className=\"goals-list-wrap\">\r\n  //       {todoDataArray.map((data, idx) => {\r\n  //           return <OrderTodoGoal data={data} idx={idx} key={data.goalId} />\r\n  //         })}\r\n          \r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n}\r\n\r\nexport const OrderTodoGoal = (props) => {\r\n\r\n  const data = props.data;\r\n  const index = props.index;\r\n  const goal_id = props.id;\r\n  const todoDataArray = props.todoDataArray;\r\n  const setDtTodos = props.setDtTodos;\r\n  /* 함수 선언 시작 */\r\n\r\n  const onDragEnd = (res) => {\r\n    if (!res.destination) return;\r\n     //드래그 하는 sourced의 index\r\n     const sourceTodoOrderNo = res.source.index;\r\n  console.log(\"sourceTodoOrderNo\", sourceTodoOrderNo)\r\n  //드래그 해서 내려놓은 destination의 index\r\n     const destinationTodoOrderNo = res.destination.index;\r\n\r\n     todoDataArray.map((goal)=>{\r\n        if(goal.goalId === goal_id){\r\n          goal.todos.map((todo)=>{\r\n            console.log(\"todo.orderNo\", todo.orderNo)\r\n            console.log(\"sourceTodoOrderNo\", sourceTodoOrderNo)\r\n\r\n            if(todo.orderNo === sourceTodoOrderNo){todo.orderNo = destinationTodoOrderNo}\r\n            // !!! 변경은 되나 ... 여러개일때 순서가 바뀌지 않는다...?\r\n            // !!! 1->3 으로 가면 1번이 3번이 되면서 나머지 2번이 1번이 되고 3번이 2번이 되어야 하는데\r\n            // !!! 이 방식은 ...큐..?\r\n          })\r\n        }\r\n     })\r\n     setDtTodos(todoDataArray);\r\n  }\r\n\r\n\r\n  // const onDragEndTodo = (result) => {\r\n  //   if (!result.destination) return;\r\n\r\n    \r\n  //   const draggingItemIndex = result.source.index-1;\r\n  //   const afterDragItemIndex = result.destination.index-1;\r\n  //   const removeTag = todoDataArray.splice(draggingItemIndex, 1);\r\n\r\n  //   todoDataArray.todos.splice(afterDragItemIndex, 0, removeTag[0]);\r\n\r\n  //   setDtTodos(todoDataArray);\r\n  // }\r\n\r\n  /* 함수 선언 종료 */\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"Todo\">\r\n      {provided =>  (\r\n        <div className=\"goals-list-box\" key={data.goalOrderNo} ref={provided.innerRef} {...provided.droppableProps}>\r\n          {/* Goal 컴포넌트 시작 */}\r\n          <Button className=\"goals-list-button\" data-index={index} data={data}>\r\n            <ReceiptIcon className=\"goals-list-icon\" />\r\n            <div className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color: data.goalTitleColor }}>\r\n              <p>{data.goalTitle}</p>\r\n            </div>\r\n            <p className=\"goals-list-plus-icon-wrap\">\r\n              <AddCircleIcon className=\"goals-list-plus-icon\" />\r\n            </p>\r\n          </Button>\r\n          {/* Goal 컴포넌트 종료 */}\r\n          {/* Todo 컴포넌트 map 시작 */}\r\n          <div className=\"todos-list-wrap\">\r\n            {data.todos.map((data, index) => {\r\n              return (\r\n                <Draggable draggableId={\"todo\" + index} index={data.orderNo} key={data.todoId}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                      <FeedTodoData todos={data} index={index}/> \r\n                    </div>\r\n                 )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Todo 컴포넌트 map 종료 */}\r\n          {provided.placeholder} \r\n        </div>\r\n      )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const FeedTodoData = (props) => {\r\n  const todos = props.todos;\r\n  const index = props.todos.todoId;\r\n\r\n  return (\r\n    <div className=\"todos-list-box\" data-todos={todos}>\r\n      <div\r\n        className=\"goals-listItem-text-wrap\"\r\n        id={todos.todoId}\r\n        data-index={todos.orderNo}\r\n      >\r\n        {todos.checkYn === \"Y\" ? (\r\n          <CheckBoxIcon\r\n            data-goalid={todos.goalId}\r\n            data-todoid={todos.todoId}\r\n            className=\"todos-list-check-icon\"\r\n            data-check={todos.checkYn}\r\n          />\r\n        ) : (\r\n          <CheckBoxOutlineBlankIcon\r\n            data-goalid={todos.goalId}\r\n            data-todoid={todos.todoId}\r\n            className=\"todos-list-check-icon\"\r\n            data-check={todos.checkYn}\r\n          />\r\n        )}\r\n        <TodoList todos={todos} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n  const inputRef = useRef(null);\r\n\r\n  const todos = props.todos;\r\n\r\n  return (\r\n    <input\r\n      className=\"todos-list-input\"\r\n      key={todos.todoId}\r\n      id=\"todo-input\"\r\n      type=\"text\"\r\n      maxLength=\"50\"\r\n      size={inputRef.current?.value.length}\r\n      ref={inputRef}\r\n      name={todos.title}\r\n      data-orderno={todos.orderNo}\r\n      data-goalid={todos.goalId}\r\n      data-todoid={todos.todoId}\r\n      value={todos.title}\r\n      readOnly\r\n    />\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}