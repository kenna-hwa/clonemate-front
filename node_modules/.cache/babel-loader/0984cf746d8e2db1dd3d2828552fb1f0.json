{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\routines\\\\Routines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useForm } from \"react-hook-form\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport CalendarPicker from '@mui/lab/CalendarPicker';\nimport { ko } from \"date-fns/locale\";\nimport { Button, List, ListItem, ListItemText, Modal } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport '../../stylesheets/Routines.css';\nimport { goalsData, todoData, datesData, dateCalendarOpen } from \"../../atoms/todoData\";\nimport EditRoutinesForm from './EditRoutinesForm';\nimport CreateRoutinesForm from \"./CreateRoutinesForm\";\nimport CreateRoutinesDate from \"./CreateRoutinesDate\";\nimport EditRoutinesDate from \"./EditRoutinesDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Routines() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n  let dateData = useRecoilValue(datesData);\n  let goal = useRecoilValue(goalsData);\n  let [originTodo, setOriginTodo] = useRecoilState(todoData);\n  let [routinesCalendarOpen, setRoutinesCalendarOpen] = useRecoilState(dateCalendarOpen); // console.log(\"selectedNewDate 현재 선택된 날짜\", dateData.selectedNewDate)\n\n  let todo = [...originTodo];\n  let [isGoalSelected, setIsGoalSelected] = useState(Array(goal.length).fill(false));\n  let [isTodoSelected, setIsTodoSelected] = useState(Array(todo.length).fill(true));\n  console.log(\"isTodoSelected\", isTodoSelected);\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  //목표 클릭 시 이벤트 핸들러\n\n  const clickCreateRoutinesHandler = e => {\n    console.log(\"목표 클릭 연결\");\n    const index = e.currentTarget.dataset.index;\n    const newArr = Array(goal.length).fill(false);\n    newArr[index] = true;\n    setIsGoalSelected(newArr);\n  }; //투두 클릭 시 모달 등장 이벤트 핸들러\n\n\n  const clickEditRoutinesHandler = e => {\n    console.log(\"todo 클릭 연결\");\n    const index = e.currentTarget.dataset.index;\n    const newArr = Array(todo.length).fill(true);\n    newArr[index] = false;\n    setIsTodoSelected(newArr);\n    console.log(\"isTodoSelected\", isTodoSelected);\n  };\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"routines-box\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"routines-goals-list-box\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: \"routines-goals-list-wrap\",\n          children: goal.map((goal, index) => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"goals-listItem\",\n              id: goal.goal_id,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"goals-listItem-text-wrap\",\n                id: goal.goal_id,\n                \"data-index\": index,\n                onClick: clickCreateRoutinesHandler,\n                children: [/*#__PURE__*/_jsxDEV(LibraryBooksIcon, {\n                  className: \"goals-listItem-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  className: \"goals-listItem-text\",\n                  id: goal.goal_id,\n                  name: goal.goal_id,\n                  sx: {\n                    color: goal.title_color\n                  },\n                  children: goal.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  className: \"goals-listItem-add-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), todo.map((todo, index) => {\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"goals-todo-input-list-Box\",\n                  \"data-index\": index,\n                  onClick: clickEditRoutinesHandler,\n                  children: goal.goal_id === parseInt(todo.goal_id) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"goals-todo-input-list-check-wrap\",\n                      children: [todo.check_yn === 'Y' ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n                        className: \"goals-todo-list-input-check-icon\",\n                        \"data-index\": index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 55\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n                        className: \"goals-todo-list-input-check-icon\",\n                        \"data-index\": index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 138\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"todo-input\",\n                        className: \"goals-todo-list-input\",\n                        type: \"text\",\n                        maxLength: \"80\",\n                        name: todo.title,\n                        \"data-index\": index,\n                        value: todo.title,\n                        readOnly: isTodoSelected[index]\n                      }, `todo${index}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false) : null\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 29\n                }, this);\n              }), isGoalSelected[index] ? /*#__PURE__*/_jsxDEV(CreateRoutinesForm, {\n                goal_id: index,\n                setIsGoalSelected: setIsGoalSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 46\n              }, this) : null]\n            }, goal.goal_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n} //할 일 클릭 - 메뉴 모달 \n// export function EditRoutinesTodoModal (props) {\n//     const modalOpen = props.modalOpen;\n//     const handleTodoModalClose = props.handleTodoModalClose;\n//     const selectedTodo = props.selectedTodo;\n//     const clickTodoEditHandler = props.clickTodoEditHandler;\n//     const selectedInputIndex = props.selectedInputIndex;\n//     const clickTodoDeleteHandler = props.clickTodoDeleteHandler;\n//     const todoDelayNextDayEventHandler = props.todoDelayNextDayEventHandler;\n//     return(\n//         <>\n//         <Modal open={modalOpen}\n//         onClose={handleTodoModalClose}\n//         aria-labelledby=\"modal-modal-title\"\n//         aria-describedby=\"modal-modal-description\"\n//         className=\"routines-todo-modal-box\"\n//          >\n//             <Box className=\"routines-todo-modal-wrap\" >\n//                 <p className=\"routines-todo-modal-head\">{selectedTodo.title}</p>\n//                 <Box className=\"routines-todo-modal-icon-wrap\">\n//                     <button className=\"routines-todo-edit-icon\" data-index={selectedInputIndex} onClick={clickTodoEditHandler} ><EditIcon className=\"routines-modal-icon\" /><span>수정</span></button>\n//                     <button className=\"routines-todo-delete-icon\" data-index={selectedInputIndex} onClick={clickTodoDeleteHandler}  ><DeleteOutlineIcon className=\"routines-modal-icon\" /><span>삭제</span></button>\n//                 </Box>\n//             </Box>\n//         </Modal>  \n//         </>\n//     )\n// } \n\n_s(Routines, \"HkwUefY+s3boiLUnqRRAHPegfdo=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useRecoilState, useRecoilState];\n});\n\n_c = Routines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routines\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/routines/Routines.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","useForm","AdapterDateFns","LocalizationProvider","CalendarPicker","ko","Button","List","ListItem","ListItemText","Modal","Box","LibraryBooksIcon","MoreHorizIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","EditIcon","DeleteOutlineIcon","goalsData","todoData","datesData","dateCalendarOpen","EditRoutinesForm","CreateRoutinesForm","CreateRoutinesDate","EditRoutinesDate","Routines","dateData","goal","originTodo","setOriginTodo","routinesCalendarOpen","setRoutinesCalendarOpen","todo","isGoalSelected","setIsGoalSelected","Array","length","fill","isTodoSelected","setIsTodoSelected","console","log","clickCreateRoutinesHandler","e","index","currentTarget","dataset","newArr","clickEditRoutinesHandler","map","goal_id","color","title_color","title","parseInt","check_yn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport { ko } from \"date-fns/locale\";\r\n\r\n\r\nimport {  Button, List, ListItem, ListItemText, Modal, } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nimport '../../stylesheets/Routines.css';\r\nimport { goalsData, todoData, datesData, dateCalendarOpen } from \"../../atoms/todoData\";\r\n\r\nimport EditRoutinesForm from './EditRoutinesForm';\r\nimport CreateRoutinesForm from \"./CreateRoutinesForm\";\r\nimport CreateRoutinesDate from \"./CreateRoutinesDate\";\r\nimport EditRoutinesDate from \"./EditRoutinesDate\";\r\n\r\nexport default function Routines () {\r\n\r\n\r\n/* Hook 선언 시작 */\r\n\r\n/* atom 시작 */\r\n\r\nlet dateData = useRecoilValue(datesData);\r\nlet goal = useRecoilValue(goalsData);\r\nlet [originTodo, setOriginTodo] = useRecoilState(todoData);\r\nlet [routinesCalendarOpen, setRoutinesCalendarOpen] = useRecoilState(dateCalendarOpen);\r\n\r\n// console.log(\"selectedNewDate 현재 선택된 날짜\", dateData.selectedNewDate)\r\nlet todo = [...originTodo];\r\nlet [isGoalSelected, setIsGoalSelected] = useState(Array(goal.length).fill(false) );\r\nlet [isTodoSelected, setIsTodoSelected] = useState(Array(todo.length).fill(true) );\r\nconsole.log(\"isTodoSelected\", isTodoSelected)\r\n\r\n/* Hook 선언 끝 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n//목표 클릭 시 이벤트 핸들러\r\nconst clickCreateRoutinesHandler = (e) => {\r\n    console.log(\"목표 클릭 연결\")\r\n    const index = e.currentTarget.dataset.index;\r\n    const newArr = Array(goal.length).fill(false) ;\r\n    newArr[index] = true;\r\n    setIsGoalSelected(newArr)\r\n}\r\n\r\n//투두 클릭 시 모달 등장 이벤트 핸들러\r\nconst clickEditRoutinesHandler = (e) => {\r\n    console.log(\"todo 클릭 연결\");\r\n    const index = e.currentTarget.dataset.index;\r\n    const newArr = Array(todo.length).fill(true) ;\r\n    newArr[index] = false;\r\n    setIsTodoSelected(newArr)\r\n    console.log(\"isTodoSelected\", isTodoSelected)\r\n}\r\n\r\n\r\n/* 함수 선언 끝 */\r\n\r\nreturn (<>\r\n    <Box className=\"routines-box\">\r\n        <Box className=\"routines-goals-list-box\">\r\n            <List className=\"routines-goals-list-wrap\">\r\n                {\r\n                goal.map((goal, index) => {\r\n                return ( <ListItem className=\"goals-listItem\" id={goal.goal_id} key={goal.goal_id} > \r\n                    <Button className=\"goals-listItem-text-wrap\" id={goal.goal_id} data-index={index} onClick={clickCreateRoutinesHandler} >\r\n                    <LibraryBooksIcon className=\"goals-listItem-icon\" />\r\n                            <ListItemText className=\"goals-listItem-text\" id={goal.goal_id} name={goal.goal_id} sx={{ color:goal.title_color }}>{goal.title}</ListItemText>\r\n                        <ListItemText className=\"goals-listItem-add-icon\" ><span>+</span></ListItemText>\r\n                    </Button>\r\n                    {todo.map((todo,index)=>{\r\n                        return (\r\n                            <Box className=\"goals-todo-input-list-Box\" key={index} data-index={index} onClick={clickEditRoutinesHandler}>\r\n                            {goal.goal_id === parseInt(todo.goal_id) ? (<>\r\n                            <div className=\"goals-todo-input-list-check-wrap\">\r\n                            {todo.check_yn === 'Y' ?  <CheckBoxIcon className=\"goals-todo-list-input-check-icon\" data-index={index} /> : <CheckBoxOutlineBlankIcon className=\"goals-todo-list-input-check-icon\"  data-index={index} /> }\r\n                                <input key={`todo${index}`} id=\"todo-input\" className=\"goals-todo-list-input\" type=\"text\" maxLength={\"80\"} \r\n                                name={todo.title} data-index={index} value={todo.title} readOnly={isTodoSelected[index]} />\r\n                            </div>\r\n                            {/* {!isTodoSelected[index] ? (<>\r\n                                <EditRoutinesForm goal_id={goal.goal_id} todo_id={index}  /> \r\n                                </>) :\r\n                            null}  */}\r\n                            </>\r\n                            ) : null} \r\n                            </Box>\r\n                        )\r\n                    })}\r\n                    {isGoalSelected[index] ? <CreateRoutinesForm goal_id={index} setIsGoalSelected={setIsGoalSelected}  />: null}\r\n                </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n\r\n            </List>\r\n        </Box>\r\n    </Box>\r\n\r\n    {/* 모달 생성 */}\r\n    {/* <EditRoutinesTodoModal /> */}\r\n    </>\r\n);\r\n}\r\n\r\n//할 일 클릭 - 메뉴 모달 \r\n// export function EditRoutinesTodoModal (props) {\r\n\r\n//     const modalOpen = props.modalOpen;\r\n//     const handleTodoModalClose = props.handleTodoModalClose;\r\n//     const selectedTodo = props.selectedTodo;\r\n//     const clickTodoEditHandler = props.clickTodoEditHandler;\r\n//     const selectedInputIndex = props.selectedInputIndex;\r\n//     const clickTodoDeleteHandler = props.clickTodoDeleteHandler;\r\n//     const todoDelayNextDayEventHandler = props.todoDelayNextDayEventHandler;\r\n\r\n\r\n//     return(\r\n//         <>\r\n\r\n                \r\n//         <Modal open={modalOpen}\r\n//         onClose={handleTodoModalClose}\r\n//         aria-labelledby=\"modal-modal-title\"\r\n//         aria-describedby=\"modal-modal-description\"\r\n//         className=\"routines-todo-modal-box\"\r\n//          >\r\n//             <Box className=\"routines-todo-modal-wrap\" >\r\n//                 <p className=\"routines-todo-modal-head\">{selectedTodo.title}</p>\r\n//                 <Box className=\"routines-todo-modal-icon-wrap\">\r\n//                     <button className=\"routines-todo-edit-icon\" data-index={selectedInputIndex} onClick={clickTodoEditHandler} ><EditIcon className=\"routines-modal-icon\" /><span>수정</span></button>\r\n//                     <button className=\"routines-todo-delete-icon\" data-index={selectedInputIndex} onClick={clickTodoDeleteHandler}  ><DeleteOutlineIcon className=\"routines-modal-icon\" /><span>삭제</span></button>\r\n//                 </Box>\r\n//             </Box>\r\n\r\n//         </Modal>  \r\n//         </>\r\n//     )\r\n// } \r\n"]},"metadata":{},"sourceType":"module"}