{"ast":null,"code":"import axios from 'axios';\nexport async function getTodosData() {\n  //axios\n  await axios.get('https://jsonplaceholder.typicode.com/todos/1').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //[axios] 데이터 get 통신 예시 \n\nexport default async function axiosGetDataWithoutParam() {\n  await axios.get('api url').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //[axios] 데이터 get 통신 예시 \n\nexport async function axiosGetDataWithParam() {\n  await axios.get('api url', {\n    params: {\n      foo: 'bar'\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //[axios] 데이터 post 통신 예시 \n\nexport async function axiosPostDataWithoutParam() {\n  await axios.post('api url').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //[axios] 데이터 post 통신 예시 \n\nexport async function axiosPostDataWithParam() {\n  await axios.post('api url', {\n    params: {\n      foo: 'bar'\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //[fetch] 데이터 get 통신 예시\n\nexport const fetchGetDataWithParam = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/get\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: \"Test\",\n      body: \"I am testing!\",\n      userId: 1\n    })\n  }).then(response => console.log(response)).catch(err => console.log(err));\n}; //[fetch] 데이터 post 통신 예시\n\nexport const fetchPostDataWithParam = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: \"Test\",\n      body: \"I am testing!\",\n      userId: 1\n    })\n  }).then(response => console.log(response)).catch(err => console.log(err));\n}; //POST 메서드로 전송할 데이터\n// let formData = new FormData(); \n// formData.append('key', value); // key-value (키-값)의 형태로 데이터 추가함\n\n/* 캘린더 API 통신 시작 */\n//GET 캘린더 데이터 가져오기\n//dateYm=yyyy-mm\n\nexport async function axiosGetTodoDataForCalendar(date) {\n  //axios\n  await axios.get(`/todos/overview/${date}`).then(Response => {\n    //Response의 success가 true 일 때 data를\n    return Response.success ? Response.data : console.log(Response.errorMessage);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 캘린더 API 통신 시작 */\n\n/* 목표 API 통신 시작 */\n//GET 목표 배열 가져오기\n\nexport async function axiosGetGoalsData() {\n  //axios\n  await axios.post('/goals').then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //POST 목표 등록하기\n\nexport async function axiosPostGoalsData() {\n  //axios\n  await axios.post('/goals', {\n    body: {\n      'orderNo': 1,\n      'title': '목표2',\n      'privacy': 'PUBLIC',\n      'titleColor': '#cccccc'\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //PATCH 목표 수정하기\n\nexport async function axiosPatchGoalsData(id) {\n  //axios\n  await axios.post(`/goals/${id}`, {\n    body: {\n      'title': '목표2',\n      'privacy': 'PRIVATE',\n      'titleColor': '#222222'\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //DELETE 목표 삭제하기\n\nexport async function axiosDeleteGoalsData(id) {\n  //axios\n  await axios.delete(`/goals/${id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 목표 API 통신 끝 */\n\n/* 투두 API 통신 시작 */\n//GET objTodosDataResult id 값으로 받아오기\n\nexport async function axiosGetTodoDataWithId(id) {\n  //axios\n  await axios.get(`/todos/${id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //GET objTodosDataResult 캘린더 날짜로 받아오기\n//date=yyyy-mm-dd\n\nexport async function axiosGetTodoDataforCalendar(date) {\n  //axios\n  await axios.get(`http://{{host}}/today/todolist?date=/${date}`).then(Response => {\n    return Response.success ? Response.data : Response.errorMessage;\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //POST objTodosDataResult 추가하기\n\nexport async function axiosPostTodoData() {\n  //axios\n  await axios.post(`http://{{host}}/todos`, {\n    body: {\n      \"goalId\": 1,\n      \"orderNo\": 1,\n      \"title\": \"투두\",\n      \"date\": \"2022-03-29\",\n      \"startRepeatDate\": \"2022-03-29\",\n      \"endRepeatDate\": \"2022-03-29\",\n      \"repeatMonYn\": \"n\",\n      \"repeatTueYn\": \"n\",\n      \"repeatWenYn\": \"n\",\n      \"repeatThuYn\": \"n\",\n      \"repeatFriYn\": \"n\",\n      \"repeatSatYn\": \"n\",\n      \"repeatSunYn\": \"n\",\n      \"checkYn\": \"n\"\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //PATCH objTodosDataResult id값으로 수정하기\n\nexport async function axiosPatchTodoDataWithId(id) {\n  //axios\n  await axios.patch(`http://{{host}}/todos/${id}`, {\n    body: {\n      \"goalId\": 1,\n      //옵션\n      \"orderNo\": 1,\n      //옵션\n      \"title\": \"투두수정\",\n      //옵션\n      \"startRepeatDate\": \"2022-03-29\",\n      //옵션\n      \"endRepeatDate\": \"2022-03-31\",\n      //옵션\n      \"repeatMonYn\": \"n\",\n      //옵션\n      \"repeatTueYn\": \"n\",\n      //옵션\n      \"repeatWenYn\": \"y\",\n      //옵션\n      \"repeatThuYn\": \"n\",\n      //옵션\n      \"repeatFriYn\": \"n\",\n      //옵션\n      \"repeatSatYn\": \"y\",\n      //옵션\n      \"repeatSunYn\": \"n\",\n      //옵션\n      \"checkYn\": \"n\" //옵션\n\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //PATCH objTodosDataResult 날짜로 수정하기\n//date=yyyy-mm-dd\n//checkYn=y or n\n\nexport async function axiosPatchTodoDataWithDate(date, checkYn) {\n  //axios\n  await axios.patch(`/todos/${date}/${checkYn}`, {\n    body: {\n      \"goalId\": 1,\n      //옵션\n      \"orderNo\": 1,\n      //옵션\n      \"title\": \"투두수정\",\n      //옵션\n      \"date\": date,\n      //옵션\n      \"startRepeatDate\": \"2022-03-29\",\n      //옵션\n      \"endRepeatDate\": \"2022-03-31\",\n      //옵션\n      \"repeatMonYn\": \"n\",\n      //옵션\n      \"repeatTueYn\": \"n\",\n      //옵션\n      \"repeatWenYn\": \"y\",\n      //옵션\n      \"repeatThuYn\": \"n\",\n      //옵션\n      \"repeatFriYn\": \"n\",\n      //옵션\n      \"repeatSatYn\": \"y\",\n      //옵션\n      \"repeatSunYn\": \"n\",\n      //옵션\n      \"checkYn\": checkYn //옵션\n\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //DELETE objTodosDataResult 날짜로 모든 todo값 삭제하기\n\nexport async function axiosDeleteAllTodoData(date) {\n  //axios\n  await axios.delete(`/todos/${date}`, {\n    body: {\n      goalId: 1,\n      orderNo: 1,\n      title: \"투두\",\n      date: \"2022-02-13\",\n      endRepeatDate: \"2022-02-14\",\n      repeatDays: {\n        THU: \"N\",\n        WEN: \"N\",\n        TUE: \"N\",\n        SAT: \"N\",\n        FRI: \"N\",\n        MON: \"N\",\n        SUN: \"N\"\n      }\n    }\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //DELETE objTodosDataResult 날짜로 모든 todo값 삭제하기\n\nexport async function axiosDeleteTodoData(id) {\n  //axios\n  await axios.delete(`/todos/${id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 투두 API 통신 끝 */\n\n/* 투두 좋아요 API 통신 시작 */\n//POST 투두 좋아요 클릭 +1 추가하기\n\nexport async function axiosPostTodoLikeData(todoId) {\n  //axios\n  await axios.post(`http://{{host}}/like/${todoId}`, {\n    body: {}\n  }).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //DELETE 투두 좋아요 클릭 -1 삭제하기\n\nexport async function axiosDeleteTodoLikeData(likeId) {\n  //axios\n  await axios.delete(`http://{{host}}/like/${likeId}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 투두 좋아요 API 통신 끝 */\n\n/* 팔로우 API 통신 시작 */\n//GET followers 가져오기\n\nexport async function axiosGetFollowers() {\n  //axios\n  await axios.get(`/follow/followers`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //GET following 가져오기\n\nexport async function axiosGetFollowing() {\n  //axios\n  await axios.get(`/follow/followings`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //POST 팔로워 수정하기\n\nexport async function axiosPostEditFollower(user_id) {\n  //axios\n  await axios.post(`/follow/${user_id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //DELETE 팔로워 삭제하기\n\nexport async function axiosDeleteFollower(user_id) {\n  //axios\n  await axios.delete(`/follow/${user_id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 팔로우 API 통신 끝 */\n\n/* 좋아요 API 통신 시작 */\n//GET 좋아요 보내기\n\nexport async function axiosGetLike(todo_id) {\n  //axios\n  await axios.get(`/follow/${todo_id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //GET 지정 날짜 좋아요 보내기\n//date=yyyy-mm-dd\n\nexport async function axiosGetLikeWithDate(date) {\n  //axios\n  await axios.get(`/like/${date}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //POST 좋아요 수정하기\n\nexport async function axiosPostLike(todo_id) {\n  //axios\n  await axios.post(`/like/${todo_id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n} //DELETE 좋아요 삭제하기\n\nexport async function axiosDeleteLike(todo_id) {\n  //axios\n  await axios.delete(`/like/${todo_id}`).then(Response => {\n    console.log(Response.data);\n  }).catch(Error => {\n    console.log(Error);\n  });\n}\n/* 좋아요 API 통신 끝 */","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/api/apiCommunicate.js"],"names":["axios","getTodosData","get","then","Response","console","log","data","catch","Error","axiosGetDataWithoutParam","axiosGetDataWithParam","params","foo","axiosPostDataWithoutParam","post","axiosPostDataWithParam","fetchGetDataWithParam","response","fetch","method","headers","body","JSON","stringify","title","userId","err","fetchPostDataWithParam","axiosGetTodoDataForCalendar","date","success","errorMessage","axiosGetGoalsData","axiosPostGoalsData","axiosPatchGoalsData","id","axiosDeleteGoalsData","delete","axiosGetTodoDataWithId","axiosGetTodoDataforCalendar","axiosPostTodoData","axiosPatchTodoDataWithId","patch","axiosPatchTodoDataWithDate","checkYn","axiosDeleteAllTodoData","goalId","orderNo","endRepeatDate","repeatDays","THU","WEN","TUE","SAT","FRI","MON","SUN","axiosDeleteTodoData","axiosPostTodoLikeData","todoId","axiosDeleteTodoLikeData","likeId","axiosGetFollowers","axiosGetFollowing","axiosPostEditFollower","user_id","axiosDeleteFollower","axiosGetLike","todo_id","axiosGetLikeWithDate","axiosPostLike","axiosDeleteLike"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport async function getTodosData () {\r\n\r\n  //axios\r\n  await axios.get('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n//[axios] 데이터 get 통신 예시 \r\nexport default async function axiosGetDataWithoutParam () {\r\n  await axios.get('api url')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n//[axios] 데이터 get 통신 예시 \r\nexport async function axiosGetDataWithParam () {\r\n  await axios.get('api url', {\r\n    params: {\r\n      foo: 'bar'\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n//[axios] 데이터 post 통신 예시 \r\nexport async function axiosPostDataWithoutParam () {\r\n  await axios.post('api url')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n//[axios] 데이터 post 통신 예시 \r\nexport async function axiosPostDataWithParam () {\r\n  await axios.post('api url', {\r\n    params: {\r\n      foo: 'bar'\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//[fetch] 데이터 get 통신 예시\r\nexport const fetchGetDataWithParam = async () => {\r\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/get\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title: \"Test\",\r\n      body: \"I am testing!\",\r\n      userId: 1,\r\n    }),\r\n  })\r\n  .then((response) => console.log(response))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\n//[fetch] 데이터 post 통신 예시\r\nexport const fetchPostDataWithParam = async () => {\r\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title: \"Test\",\r\n      body: \"I am testing!\",\r\n      userId: 1,\r\n    }),\r\n  })\r\n  .then((response) => console.log(response))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\n\r\n//POST 메서드로 전송할 데이터\r\n// let formData = new FormData(); \r\n// formData.append('key', value); // key-value (키-값)의 형태로 데이터 추가함\r\n\r\n/* 캘린더 API 통신 시작 */\r\n\r\n//GET 캘린더 데이터 가져오기\r\n//dateYm=yyyy-mm\r\nexport async function axiosGetTodoDataForCalendar (date) {\r\n  //axios\r\n  await axios.get(`/todos/overview/${date}`)\r\n  .then((Response)=>{\r\n    //Response의 success가 true 일 때 data를\r\n    return Response.success ? Response.data : console.log(Response.errorMessage);\r\n  })\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n/* 캘린더 API 통신 시작 */\r\n\r\n\r\n\r\n/* 목표 API 통신 시작 */\r\n\r\n//GET 목표 배열 가져오기\r\nexport async function axiosGetGoalsData () {\r\n  //axios\r\n  await axios.post('/goals')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//POST 목표 등록하기\r\nexport async function axiosPostGoalsData () {\r\n  //axios\r\n  await axios.post('/goals',{\r\n    body: {\r\n      'orderNo' : 1,\r\n      'title' : '목표2',\r\n      'privacy' : 'PUBLIC',\r\n      'titleColor' : '#cccccc',\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//PATCH 목표 수정하기\r\nexport async function axiosPatchGoalsData (id) {\r\n  //axios\r\n  await axios.post(`/goals/${id}`,{\r\n    body: {\r\n      'title' : '목표2',\r\n      'privacy' : 'PRIVATE',\r\n      'titleColor' : '#222222',\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//DELETE 목표 삭제하기\r\nexport async function axiosDeleteGoalsData (id) {\r\n  //axios\r\n  await axios.delete(`/goals/${id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n/* 목표 API 통신 끝 */\r\n\r\n/* 투두 API 통신 시작 */\r\n\r\n//GET objTodosDataResult id 값으로 받아오기\r\n\r\nexport async function axiosGetTodoDataWithId (id) {\r\n  //axios\r\n  await axios.get(`/todos/${id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n//GET objTodosDataResult 캘린더 날짜로 받아오기\r\n//date=yyyy-mm-dd\r\nexport async function axiosGetTodoDataforCalendar (date) {\r\n\r\n  //axios\r\n  await axios.get(`http://{{host}}/today/todolist?date=/${date}`)\r\n  .then((Response)=>{\r\n    return Response.success ? Response.data : Response.errorMessage;\r\n  })\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n//POST objTodosDataResult 추가하기\r\nexport async function axiosPostTodoData () {\r\n\r\n  //axios\r\n  await axios.post(`http://{{host}}/todos`,{\r\n    body: {\r\n      \"goalId\": 1,\r\n      \"orderNo\": 1,\r\n      \"title\": \"투두\",\r\n      \"date\":\"2022-03-29\",\r\n      \"startRepeatDate\":\"2022-03-29\",\r\n      \"endRepeatDate\":\"2022-03-29\",\r\n      \"repeatMonYn\":\"n\",\r\n      \"repeatTueYn\":\"n\",\r\n      \"repeatWenYn\":\"n\",\r\n      \"repeatThuYn\":\"n\",\r\n      \"repeatFriYn\":\"n\",\r\n      \"repeatSatYn\":\"n\",\r\n      \"repeatSunYn\":\"n\",\r\n      \"checkYn\": \"n\"\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//PATCH objTodosDataResult id값으로 수정하기\r\nexport async function axiosPatchTodoDataWithId (id) {\r\n\r\n  //axios\r\n  await axios.patch(`http://{{host}}/todos/${id}`,{\r\n    body: {\r\n      \"goalId\": 1,                   //옵션\r\n      \"orderNo\": 1,                  //옵션\r\n      \"title\": \"투두수정\",            //옵션\r\n      \"startRepeatDate\":\"2022-03-29\", //옵션\r\n      \"endRepeatDate\":\"2022-03-31\",   //옵션\r\n      \"repeatMonYn\":\"n\",              //옵션\r\n      \"repeatTueYn\":\"n\",              //옵션\r\n      \"repeatWenYn\":\"y\",              //옵션\r\n      \"repeatThuYn\":\"n\",              //옵션\r\n      \"repeatFriYn\":\"n\",              //옵션\r\n      \"repeatSatYn\":\"y\",              //옵션\r\n      \"repeatSunYn\":\"n\",              //옵션\r\n      \"checkYn\": \"n\"                  //옵션\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//PATCH objTodosDataResult 날짜로 수정하기\r\n//date=yyyy-mm-dd\r\n//checkYn=y or n\r\nexport async function axiosPatchTodoDataWithDate (date,checkYn) {\r\n\r\n  //axios\r\n  await axios.patch(`/todos/${date}/${checkYn}`,{\r\n    body: {\r\n      \"goalId\": 1,                   //옵션\r\n      \"orderNo\": 1,                  //옵션\r\n      \"title\": \"투두수정\",            //옵션\r\n      \"date\": date,           //옵션\r\n      \"startRepeatDate\":\"2022-03-29\", //옵션\r\n      \"endRepeatDate\":\"2022-03-31\",   //옵션\r\n      \"repeatMonYn\":\"n\",              //옵션\r\n      \"repeatTueYn\":\"n\",              //옵션\r\n      \"repeatWenYn\":\"y\",              //옵션\r\n      \"repeatThuYn\":\"n\",              //옵션\r\n      \"repeatFriYn\":\"n\",              //옵션\r\n      \"repeatSatYn\":\"y\",              //옵션\r\n      \"repeatSunYn\":\"n\",              //옵션\r\n      \"checkYn\": checkYn              //옵션\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//DELETE objTodosDataResult 날짜로 모든 todo값 삭제하기\r\nexport async function axiosDeleteAllTodoData (date) {\r\n\r\n  //axios\r\n  await axios.delete(`/todos/${date}`,{\r\n    body: {\r\n      goalId: 1,\r\n      orderNo: 1,\r\n      title: \"투두\",\r\n      date: \"2022-02-13\",\r\n      endRepeatDate: \"2022-02-14\",\r\n      repeatDays: {\r\n        THU: \"N\",\r\n        WEN: \"N\",\r\n        TUE: \"N\",\r\n        SAT: \"N\",\r\n        FRI: \"N\",\r\n        MON: \"N\",\r\n        SUN: \"N\"\r\n      },\r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n//DELETE objTodosDataResult 날짜로 모든 todo값 삭제하기\r\nexport async function axiosDeleteTodoData (id) {\r\n\r\n  //axios\r\n  await axios.delete(`/todos/${id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n/* 투두 API 통신 끝 */\r\n\r\n/* 투두 좋아요 API 통신 시작 */\r\n\r\n\r\n//POST 투두 좋아요 클릭 +1 추가하기\r\nexport async function axiosPostTodoLikeData (todoId) {\r\n\r\n  //axios\r\n  await axios.post(`http://{{host}}/like/${todoId}`,{\r\n    body: {\r\n      \r\n    }\r\n  })\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//DELETE 투두 좋아요 클릭 -1 삭제하기\r\nexport async function axiosDeleteTodoLikeData (likeId) {\r\n\r\n  //axios\r\n  await axios.delete(`http://{{host}}/like/${likeId}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n/* 투두 좋아요 API 통신 끝 */\r\n\r\n/* 팔로우 API 통신 시작 */\r\n\r\n//GET followers 가져오기\r\n\r\nexport async function axiosGetFollowers () {\r\n  //axios\r\n  await axios.get(`/follow/followers`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//GET following 가져오기\r\n\r\nexport async function axiosGetFollowing () {\r\n  //axios\r\n  await axios.get(`/follow/followings`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//POST 팔로워 수정하기\r\n\r\nexport async function axiosPostEditFollower (user_id) {\r\n  //axios\r\n  await axios.post(`/follow/${user_id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//DELETE 팔로워 삭제하기\r\n\r\nexport async function axiosDeleteFollower (user_id) {\r\n  //axios\r\n  await axios.delete(`/follow/${user_id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n/* 팔로우 API 통신 끝 */\r\n\r\n\r\n/* 좋아요 API 통신 시작 */\r\n\r\n//GET 좋아요 보내기\r\n\r\nexport async function axiosGetLike (todo_id) {\r\n  //axios\r\n  await axios.get(`/follow/${todo_id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//GET 지정 날짜 좋아요 보내기\r\n//date=yyyy-mm-dd\r\nexport async function axiosGetLikeWithDate(date) {\r\n  //axios\r\n  await axios.get(`/like/${date}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//POST 좋아요 수정하기\r\n\r\nexport async function axiosPostLike (todo_id) {\r\n  //axios\r\n  await axios.post(`/like/${todo_id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//DELETE 좋아요 삭제하기\r\n\r\nexport async function axiosDeleteLike (todo_id) {\r\n  //axios\r\n  await axios.delete(`/like/${todo_id}`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n/* 좋아요 API 통신 끝 */\r\n"]},"metadata":{},"sourceType":"module"}