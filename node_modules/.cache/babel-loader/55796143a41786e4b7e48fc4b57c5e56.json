{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\main\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport CalendarPicker from '@mui/lab/CalendarPicker';\nimport { ko } from \"date-fns/locale\";\nimport FeedTodoGoal from './FeedTodoGoal';\nimport '../../stylesheets/Feed.css';\nimport { Modal } from \"@mui/material\";\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport EventBusyIcon from '@material-ui/icons/EventBusy';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport { objTodosDataResult, objDatesData } from \"../../atoms/todoData\";\nimport CreateTodoForm from \"./CreateTodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  /* hook 선언 시작 */\n  let history = useHistory();\n  /* hook 선언 종료 */\n\n  /* state 선언 시작 */\n  //all todos 수정 모달 onoff\n\n  const [allTodoModalActive, setAllTodoModalActive] = useState(false); //수정 모달에서 캘린더 onoff\n\n  const [allTodoCalendarActive, setAllTodoCalendarActive] = useState(false); //캘린더로 선택한 날짜\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  /* atom 시작 */\n  // atom에서 goal+todo 데이터 가져오기\n\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\n  let dtDate = useRecoilValue(objDatesData);\n  /* atom 종료 */\n  //날짜 정보값 dtToday 오늘 dtTomorrow 내일 dtFeedCalendarDate 캘린더에서 선택한 날짜\n  //목표 클릭 여부 확인 배열 생성\n\n  let [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false));\n  /* state 선언 종료 */\n\n  /* 함수 선언 시작 */\n  //Goal 클릭 핸들러 \n\n  const onClickGoalHandler = e => {\n    const index = e.currentTarget.dataset.index;\n    const clicked_arr = Array(todoDataArray.length).fill(false);\n    clicked_arr[index] = true;\n    setIsGoalSelected(clicked_arr);\n  }; //createTodoForm에 값 없을 때 사라지게\n\n\n  const createTodoFieldReset = e => {\n    const clicked_arr = Array(todoDataArray.length).fill(false);\n    setIsGoalSelected(clicked_arr);\n  }; //모달 내부 함수 시작\n  //미완료 할 일 오늘 하기\n\n\n  const checkNdoitToday = () => {\n    todoDataArray.map(data => data.todos.map(todo => {\n      todo.date = dtDate.dtTomorrow;\n    }));\n    setDtTodos(todoDataArray); //그런데 endRepeatDate가 내일 보다 작으면? 의 처리가 필요하다..\n  }; //할 일 다른 날 하기 캘린더 on\n\n\n  const checkNdoitCalendarOn = e => {\n    setAllTodoCalendarActive(true);\n  }; //미완료 할 일 다른 날 하기 확인 클릭\n\n\n  const submitDoitOtherDay = selectedDate => {}; //미완료 할 일 삭제\n\n\n  const checkNdelete = e => {\n    const new_arr = todoDataArray.map(data => data.todos.map(todo => {}));\n  }; //모든 할 일 다른 날 하기\n\n\n  const allTodoDoitOtherDay = selectedDate => {\n    console.log(\"todoDataArray\", todoDataArray);\n    const new_date = selectedDate.toJSON().substring(0, 10);\n    todoDataArray.map(data => data.todos.map(todo => {\n      todo.date = new_date;\n      todo.end_repeat_date = new_date;\n    }));\n    setDtTodos(todoDataArray);\n  }; //모든 할 일 삭제\n\n\n  const allTodoDelete = () => {\n    todoDataArray.map(data => console.log(data.todos));\n  };\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(AllTodoCalendar, {\n      selectedDate: selectedDate,\n      setSelectedDate: setSelectedDate,\n      allTodoCalendarActive: allTodoCalendarActive,\n      setAllTodoCalendarActive: setAllTodoCalendarActive,\n      submitDoitOtherDay: submitDoitOtherDay,\n      allTodoDoitOtherDay: allTodoDoitOtherDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AllTodoEditModal, {\n      allTodoModalActive: allTodoModalActive,\n      setAllTodoModalActive: setAllTodoModalActive,\n      checkNdoitToday: checkNdoitToday,\n      checkNdoitCalendarOn: checkNdoitCalendarOn,\n      checkNdelete: checkNdelete,\n      allTodoDoitOtherDay: allTodoDoitOtherDay,\n      allTodoDelete: allTodoDelete,\n      dtDate: dtDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"feed-title\",\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-list-wrap\",\n      children: todoDataArray.map((data, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FeedTodoGoal, {\n            data: data,\n            idx: idx,\n            onClickGoalHandler: onClickGoalHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), isGoalSelected[idx] ? /*#__PURE__*/_jsxDEV(CreateTodoForm, {\n            dtDate: dtDate,\n            goalId: data.goalId,\n            todoLength: data.todos.length,\n            createTodoFieldReset: createTodoFieldReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 48\n          }, this) : null]\n        }, data.goalId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"feed-day-all-todo-edit\",\n      title: \"\\uD604\\uC7AC \\uB0A0\\uC9DC\\uC758 \\uBAA8\\uB4E0 \\uD560 \\uC77C \\uC218\\uC815\",\n      onClick: () => {\n        setAllTodoModalActive(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 125\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"feed-move-to-routines\",\n      title: \"\\uAE30\\uAC04\\uC774 \\uC788\\uB294 \\uD560 \\uC77C \\uC791\\uC131\\uD558\\uAE30\",\n      onClick: () => {\n        history.push(\"/routines\");\n      },\n      children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 121\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"n9qVhk5aP7wmLaq+n5wXiVOUAZg=\", false, function () {\n  return [useHistory, useRecoilState, useRecoilValue];\n});\n\n_c = Feed;\nexport function AllTodoEditModal(props) {\n  const allTodoModalActive = props.allTodoModalActive;\n  const setAllTodoModalActive = props.setAllTodoModalActive;\n  const checkNdoitToday = props.checkNdoitToday;\n  const checkNdoitCalendarOn = props.checkNdoitCalendarOn;\n  const checkNdelete = props.checkNdelete;\n  const allTodoDoitOtherDay = props.allTodoDoitOtherDay;\n  const allTodoDelete = props.allTodoDelete;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: allTodoModalActive,\n    onClose: () => {\n      setAllTodoModalActive(false);\n    },\n    \"aria-labelledby\": \"all-todo-modal-title\",\n    \"aria-describedby\": \"all-modal-description\",\n    className: \"all-todo-modal-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-todo-modal-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"all-todo-modal-head\",\n        children: \"\\uD604\\uC7AC \\uB0A0\\uC9DC\\uC758 \\uBAA8\\uB4E0 \\uD560 \\uC77C \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-todo-modal-icon-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"all-todo-modal-icon\",\n          onClick: checkNdoitToday,\n          children: [/*#__PURE__*/_jsxDEV(EventAvailableIcon, {\n            className: \"feed-modal-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uBBF8\\uC644\\uB8CC \\uD560 \\uC77C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 87\n            }, this), \"\\uC804\\uBD80 \\uC644\\uB8CC \\uD558\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"all-todo-modal-icon\",\n          onClick: () => {\n            checkNdoitCalendarOn();\n          },\n          children: [/*#__PURE__*/_jsxDEV(EventNoteIcon, {\n            className: \"feed-modal-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uBBF8\\uC644\\uB8CC \\uD560 \\uC77C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 82\n            }, this), \"\\uB2E4\\uB978 \\uB0A0 \\uD558\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"all-todo-modal-icon\",\n          onClick: checkNdelete,\n          children: [/*#__PURE__*/_jsxDEV(EventBusyIcon, {\n            className: \"feed-modal-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uBBF8\\uC644\\uB8CC \\uD560 \\uC77C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 82\n            }, this), \"\\uC0AD\\uC81C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"all-todo-modal-icon\",\n          onClick: () => {\n            checkNdoitCalendarOn();\n          },\n          children: [/*#__PURE__*/_jsxDEV(FileCopyIcon, {\n            className: \"feed-modal-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uBAA8\\uB4E0 \\uD560 \\uC77C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 80\n            }, this), \"\\uB2E4\\uB978 \\uB0A0 \\uD558\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"all-todo-modal-icon\",\n          onClick: allTodoDelete,\n          children: [/*#__PURE__*/_jsxDEV(BackspaceIcon, {\n            className: \"feed-modal-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uBAA8\\uB4E0 \\uD560 \\uC77C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 81\n            }, this), \"\\uC0AD\\uC81C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n_c2 = AllTodoEditModal;\nexport function AllTodoCalendar(props) {\n  const selectedDate = props.selectedDate;\n  const setSelectedDate = props.setSelectedDate;\n  const allTodoCalendarActive = props.allTodoCalendarActive;\n  const setAllTodoCalendarActive = props.setAllTodoCalendarActive;\n  const week = new Array('일', '월', '화', '수', '목', '금', '토');\n  let selectedYear = selectedDate.getFullYear();\n  let selectedMonth = selectedDate.getMonth() + 1;\n  let selectedDay = selectedDate.getDate();\n  let selectedLabel = selectedDate.getDay();\n  let todayLabel = week[selectedLabel];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: allTodoCalendarActive,\n    onClose: () => {\n      setAllTodoCalendarActive(false);\n    },\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    className: \"todo-modal-datePicker-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-modal-datePicker-box\",\n      children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        locale: ko,\n        dateAdapter: AdapterDateFns,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-modal-datePicker-box-title-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC120\\uD0DD\\uD55C \\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedYear + `년 ` + selectedMonth + `월 ` + selectedDay + `일 ` + todayLabel + `요일`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CalendarPicker, {\n          className: \"todo-modal-datePicker\",\n          date: selectedDate,\n          onChange: date => setSelectedDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-modal-datePicker-btn-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-modal-datePicker-btn\",\n            \"data-day\": selectedDate,\n            onClick: () => {\n              console.log(\"확인 클릭\");\n            },\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-modal-datePicker-btn\",\n            onClick: () => {\n              setAllTodoCalendarActive(false);\n            },\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 136\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n}\n_c3 = AllTodoCalendar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Feed\");\n$RefreshReg$(_c2, \"AllTodoEditModal\");\n$RefreshReg$(_c3, \"AllTodoCalendar\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/main/Feed.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","useHistory","AdapterDateFns","LocalizationProvider","CalendarPicker","ko","FeedTodoGoal","Modal","BorderColorIcon","MoreHorizIcon","EventAvailableIcon","EventNoteIcon","EventBusyIcon","FileCopyIcon","BackspaceIcon","objTodosDataResult","objDatesData","CreateTodoForm","Feed","history","allTodoModalActive","setAllTodoModalActive","allTodoCalendarActive","setAllTodoCalendarActive","selectedDate","setSelectedDate","Date","dtTodos","setDtTodos","todoDataArray","JSON","parse","stringify","dtDate","isGoalSelected","setIsGoalSelected","Array","length","fill","onClickGoalHandler","e","index","currentTarget","dataset","clicked_arr","createTodoFieldReset","checkNdoitToday","map","data","todos","todo","date","dtTomorrow","checkNdoitCalendarOn","submitDoitOtherDay","checkNdelete","new_arr","allTodoDoitOtherDay","console","log","new_date","toJSON","substring","end_repeat_date","allTodoDelete","idx","goalId","push","AllTodoEditModal","props","AllTodoCalendar","week","selectedYear","getFullYear","selectedMonth","getMonth","selectedDay","getDate","selectedLabel","getDay","todayLabel"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport { ko } from \"date-fns/locale\";\r\nimport FeedTodoGoal from './FeedTodoGoal';\r\nimport '../../stylesheets/Feed.css'\r\n\r\nimport {  Modal, } from \"@mui/material\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport EventBusyIcon from '@material-ui/icons/EventBusy';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nimport { objTodosDataResult, objDatesData } from \"../../atoms/todoData\";\r\nimport CreateTodoForm from \"./CreateTodoForm\";\r\n\r\nexport default function Feed() {\r\n\r\n/* hook 선언 시작 */\r\n\r\nlet history = useHistory();\r\n\r\n/* hook 선언 종료 */\r\n\r\n/* state 선언 시작 */\r\n\r\n    //all todos 수정 모달 onoff\r\n    const [allTodoModalActive, setAllTodoModalActive] = useState(false);\r\n\r\n    //수정 모달에서 캘린더 onoff\r\n    const [allTodoCalendarActive, setAllTodoCalendarActive] = useState(false);\r\n\r\n    //캘린더로 선택한 날짜\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n\r\n/* atom 시작 */\r\n\r\n    // atom에서 goal+todo 데이터 가져오기\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n    let dtDate = useRecoilValue(objDatesData);\r\n\r\n/* atom 종료 */\r\n\r\n//날짜 정보값 dtToday 오늘 dtTomorrow 내일 dtFeedCalendarDate 캘린더에서 선택한 날짜\r\n\r\n//목표 클릭 여부 확인 배열 생성\r\nlet [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false) );\r\n\r\n\r\n/* state 선언 종료 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n//Goal 클릭 핸들러 \r\nconst onClickGoalHandler = (e) => {\r\n    const index = e.currentTarget.dataset.index;\r\n    const clicked_arr = Array(todoDataArray.length).fill(false) ;\r\n    clicked_arr[index] = true;\r\n    setIsGoalSelected(clicked_arr)\r\n}\r\n\r\n//createTodoForm에 값 없을 때 사라지게\r\nconst createTodoFieldReset = (e) => {\r\n    const clicked_arr = Array(todoDataArray.length).fill(false) ;\r\n    setIsGoalSelected(clicked_arr);\r\n}\r\n\r\n//모달 내부 함수 시작\r\n\r\n//미완료 할 일 오늘 하기\r\nconst checkNdoitToday = () => {\r\n    todoDataArray.map(data=>\r\n        data.todos.map((todo)=>{\r\n           todo.date = dtDate.dtTomorrow\r\n        })\r\n    )\r\n    setDtTodos(todoDataArray);\r\n    //그런데 endRepeatDate가 내일 보다 작으면? 의 처리가 필요하다..\r\n}\r\n\r\n\r\n//할 일 다른 날 하기 캘린더 on\r\nconst checkNdoitCalendarOn = (e) => {\r\n    setAllTodoCalendarActive(true)\r\n}\r\n\r\n//미완료 할 일 다른 날 하기 확인 클릭\r\nconst submitDoitOtherDay = (selectedDate) => {\r\n   \r\n}\r\n\r\n//미완료 할 일 삭제\r\n\r\nconst checkNdelete = (e) => {\r\n\r\nconst new_arr = todoDataArray.map(data=>\r\n    data.todos.map((todo)=>{\r\n        \r\n    })\r\n)\r\n   \r\n\r\n\r\n}\r\n\r\n//모든 할 일 다른 날 하기\r\n\r\nconst allTodoDoitOtherDay = (selectedDate) => {\r\n    console.log(\"todoDataArray\",todoDataArray)\r\n    const new_date = selectedDate.toJSON().substring(0, 10);\r\n    todoDataArray.map(data=>\r\n        data.todos.map((todo)=>{\r\n           todo.date = new_date;\r\n           todo.end_repeat_date = new_date;\r\n\r\n        })\r\n    )\r\n    setDtTodos(todoDataArray);\r\n\r\n}\r\n\r\n//모든 할 일 삭제\r\n\r\nconst allTodoDelete = () => {\r\n\r\n    todoDataArray.map(data=>\r\n        console.log(data.todos)\r\n        \r\n    )\r\n}\r\n\r\n\r\n/* 함수 선언 끝 */\r\n\r\n    return (\r\n        <div className='feed-wrap'>\r\n            <AllTodoCalendar \r\n            selectedDate={selectedDate} setSelectedDate={setSelectedDate}\r\n            allTodoCalendarActive={allTodoCalendarActive} setAllTodoCalendarActive={setAllTodoCalendarActive} submitDoitOtherDay={submitDoitOtherDay} allTodoDoitOtherDay={allTodoDoitOtherDay} />\r\n\r\n            <AllTodoEditModal \r\n            allTodoModalActive={allTodoModalActive} \r\n            setAllTodoModalActive={setAllTodoModalActive}\r\n            checkNdoitToday={checkNdoitToday}\r\n            checkNdoitCalendarOn={checkNdoitCalendarOn}\r\n            checkNdelete={checkNdelete}\r\n            allTodoDoitOtherDay={allTodoDoitOtherDay}\r\n            allTodoDelete={allTodoDelete}\r\n            dtDate={dtDate} />\r\n            <h2 className=\"feed-title\">Feed</h2>\r\n            <div className=\"goals-list-wrap\" >\r\n                {\r\n                    todoDataArray.map((data, idx) => {\r\n\r\n                        return (<React.Fragment key={data.goalId}>\r\n                        <FeedTodoGoal \r\n                        data={data} idx={idx}\r\n                        onClickGoalHandler={onClickGoalHandler}\r\n                        />\r\n                        {isGoalSelected[idx] ? <CreateTodoForm \r\n                        dtDate={dtDate} goalId={data.goalId} \r\n                        todoLength={data.todos.length}\r\n                        createTodoFieldReset={createTodoFieldReset}\r\n                        /> :null}\r\n                        </React.Fragment>\r\n                        )\r\n                    })\r\n                    \r\n                }\r\n            </div>\r\n            <button className=\"feed-day-all-todo-edit\" title=\"현재 날짜의 모든 할 일 수정\" onClick={()=>{setAllTodoModalActive(true)}}><MoreHorizIcon /></button>\r\n            <button className=\"feed-move-to-routines\" title=\"기간이 있는 할 일 작성하기\" onClick={()=>{history.push(\"/routines\")}}><BorderColorIcon /></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function AllTodoEditModal (props) {\r\n\r\n    const allTodoModalActive = props.allTodoModalActive;\r\n    const setAllTodoModalActive = props.setAllTodoModalActive;\r\n    const checkNdoitToday = props.checkNdoitToday;\r\n    const checkNdoitCalendarOn = props.checkNdoitCalendarOn;\r\n    const checkNdelete = props.checkNdelete;\r\n    const allTodoDoitOtherDay = props.allTodoDoitOtherDay;\r\n    const allTodoDelete = props.allTodoDelete;\r\n\r\n    return (\r\n        <Modal open={allTodoModalActive}\r\n        onClose={()=>{setAllTodoModalActive(false)}}\r\n        aria-labelledby=\"all-todo-modal-title\"\r\n        aria-describedby=\"all-modal-description\"\r\n        className=\"all-todo-modal-box\"\r\n         >\r\n        \r\n            <div className=\"all-todo-modal-wrap\" >\r\n                <p className=\"all-todo-modal-head\">현재 날짜의 모든 할 일 수정</p>\r\n                <div className=\"all-todo-modal-icon-wrap\">\r\n                    <button className=\"all-todo-modal-icon\" onClick={checkNdoitToday}>\r\n                       <EventAvailableIcon className=\"feed-modal-icon\" /><span>미완료 할 일<br/>전부 완료 하기</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={()=>{checkNdoitCalendarOn()}}>\r\n                       <EventNoteIcon className=\"feed-modal-icon\" /><span>미완료 할 일<br/>다른 날 하기</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={checkNdelete}>\r\n                       <EventBusyIcon className=\"feed-modal-icon\" /><span>미완료 할 일<br/>삭제</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={()=>{checkNdoitCalendarOn()}}>\r\n                       <FileCopyIcon className=\"feed-modal-icon\" /><span>모든 할 일<br/>다른 날 하기</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={allTodoDelete}>\r\n                       <BackspaceIcon className=\"feed-modal-icon\" /><span>모든 할 일<br/>삭제</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>  \r\n    )\r\n}\r\n\r\nexport function AllTodoCalendar (props) {\r\n\r\n    const selectedDate = props.selectedDate;\r\n    const setSelectedDate = props.setSelectedDate;\r\n    const allTodoCalendarActive = props.allTodoCalendarActive;\r\n    const setAllTodoCalendarActive = props.setAllTodoCalendarActive; \r\n    const week = new Array('일', '월', '화', '수', '목', '금', '토');\r\n\r\n    let selectedYear = selectedDate.getFullYear();\r\n    let selectedMonth = selectedDate.getMonth()+1;\r\n    let selectedDay = selectedDate.getDate();\r\n    let selectedLabel = selectedDate.getDay();\r\n    let todayLabel = week[selectedLabel];\r\n\r\n    return (\r\n        <Modal open={allTodoCalendarActive}\r\n        onClose={()=>{setAllTodoCalendarActive(false)}} \r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"todo-modal-datePicker-wrap\"\r\n         >\r\n        <div className=\"todo-modal-datePicker-box\">\r\n            <LocalizationProvider locale={ko} dateAdapter={AdapterDateFns}>\r\n                <div className=\"todo-modal-datePicker-box-title-wrap\">\r\n                    <p>선택한 날짜</p>\r\n                    <span>{selectedYear +`년 `+ selectedMonth +`월 `+ selectedDay+ `일 ` + todayLabel + `요일`}</span>\r\n                </div>\r\n                <CalendarPicker className=\"todo-modal-datePicker\" date={selectedDate} onChange={(date) => setSelectedDate(date)} />\r\n                <div className=\"todo-modal-datePicker-btn-wrap\">\r\n                <button className=\"todo-modal-datePicker-btn\" data-day={selectedDate} onClick={()=>{console.log(\"확인 클릭\")}}>확인</button> <button className=\"todo-modal-datePicker-btn\" onClick={()=>{setAllTodoCalendarActive(false)}}>취소</button>\r\n                </div>\r\n            </LocalizationProvider>\r\n        </div>\r\n        </Modal>  \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}