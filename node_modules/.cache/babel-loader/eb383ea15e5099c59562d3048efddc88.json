{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\exploresearch\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Button, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { FilledInput } from '@mui/material';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport '../../stylesheets/Search.css'; //  ** 할일 **\n// ✔ filter 함수 : 입력받는 string에 매치되는 아이디 불러와 보여주기\n// 유저 리스트-> 유저 클릭 -> 유저 feed 이동 -> 팔로우 버튼 -> event: isfollowing: true 생성 또는 변경 \n// 받아와야 하는 값 \n// -user id 입력-> filter -> 출력 user nickname \n// < style 수정사항 >\n// -search 검색 input 높이 조절\n// -항목 선택시 default 색 변경 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MuiFilledInputCustom = makeStyles({\n  underline: {\n    \"&&&:before\": {\n      borderBottom: \"black\"\n    },\n    \"&&:after\": {\n      borderBottom: \"black\"\n    }\n  }\n}, {\n  name: \"MuiFilledInput\"\n});\n_c = MuiFilledInputCustom;\nconst Data = [{\n  \"strUserName\": \"주영\",\n  \"todo_id\": \"0\",\n  \"title\": \"🥛우유마시기\"\n}, {\n  \"strUserName\": \"🍈메로나\",\n  \"todo_id\": \"1\",\n  \"title\": \"공부하기\"\n}, {\n  \"strUserName\": \"두두\",\n  \"todo_id\": \"5\",\n  \"title\": \"스터디카페가기\"\n}, {\n  \"strUserName\": \"나야\",\n  \"todo_id\": \"7\",\n  \"title\": \"8시간 자기\"\n}]; //console.log(Data);\n\nexport default function Search() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-search-list-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(MuiFilledInputCustom, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"filled\",\n        size: \"small\",\n        id: \"filled-basic\",\n        placeholder: \"email ,ID \\uAC80\\uC0C9\",\n        sx: {\n          boxShadow: 'none'\n        },\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        },\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              fontSize: \"small\",\n              className: \"search-list-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), Data.filter(data => {\n      if (searchTerm === \"\") {\n        return data;\n      } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if (data.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-list-box\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"search-list-button\",\n            id: data.todo_id,\n            name: data.todo_id,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-list-name\",\n              id: data.strUserName,\n              name: data.strUserName,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.strUserName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-list-text\",\n              id: data.title,\n              name: data.title,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, data.todo_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this)\n      }, data.todo_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c2 = Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MuiFilledInputCustom\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/exploresearch/Search.js"],"names":["React","useState","Box","Button","TextField","SearchIcon","InputAdornment","FilledInput","makeStyles","MuiFilledInputCustom","underline","borderBottom","name","Data","Search","searchTerm","setSearchTerm","boxShadow","event","target","value","startAdornment","filter","data","strUserName","toLowerCase","includes","title","map","todo_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport { Button, TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { FilledInput } from '@mui/material';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport '../../stylesheets/Search.css';\r\n\r\n//  ** 할일 **\r\n// ✔ filter 함수 : 입력받는 string에 매치되는 아이디 불러와 보여주기\r\n// 유저 리스트-> 유저 클릭 -> 유저 feed 이동 -> 팔로우 버튼 -> event: isfollowing: true 생성 또는 변경 \r\n\r\n// 받아와야 하는 값 \r\n// -user id 입력-> filter -> 출력 user nickname \r\n\r\n// < style 수정사항 >\r\n// -search 검색 input 높이 조절\r\n// -항목 선택시 default 색 변경 \r\n\r\nconst MuiFilledInputCustom = makeStyles(\r\n  {\r\n    underline: {\r\n      \"&&&:before\": {\r\n        borderBottom: \"black\"\r\n      },\r\n      \"&&:after\": {\r\n        borderBottom: \"black\"\r\n      }\r\n    }\r\n  },\r\n  { name: \"MuiFilledInput\" }\r\n);\r\n\r\n\r\nconst Data = [\r\n  { \"strUserName\": \"주영\", \"todo_id\": \"0\", \"title\": \"🥛우유마시기\" },\r\n  { \"strUserName\": \"🍈메로나\", \"todo_id\": \"1\", \"title\": \"공부하기\" },\r\n  { \"strUserName\": \"두두\", \"todo_id\": \"5\", \"title\": \"스터디카페가기\" },\r\n  { \"strUserName\": \"나야\", \"todo_id\": \"7\", \"title\": \"8시간 자기\" }\r\n]\r\n//console.log(Data);\r\n\r\nexport default function Search() {\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n    return (\r\n      <div className=\"search-search-list-wrap\" >\r\n            {/* textfield underline 색상 변경 */}\r\n            <MuiFilledInputCustom>\r\n            <TextField \r\n                fullWidth  \r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                id=\"filled-basic\"\r\n                placeholder=\"email ,ID 검색\"\r\n                sx={{ boxShadow: 'none'}}    \r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n        \r\n                InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" className=\"search-list-icon\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            >\r\n            </TextField>\r\n            </MuiFilledInputCustom>\r\n\r\n            {Data.filter((data)=> {\r\n              if (searchTerm === \"\") {\r\n                return data\r\n              } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              } else if (data.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              }\r\n            }).map(data=>{\r\n              return(\r\n                <React.Fragment key={data.todo_id}>\r\n                  <div className=\"search-list-box\" key={data.todo_id}>\r\n                    <Button className=\"search-list-button\" id={data.todo_id} name={data.todo_id}>\r\n                        <div className=\"search-list-name\" id={data.strUserName} name={data.strUserName}>\r\n                          <p>{data.strUserName}</p>\r\n                        </div>\r\n                        <div className=\"search-list-text\" id={data.title} name={data.title}>\r\n                          <p>{data.title}</p>\r\n                        </div>\r\n                    </Button>\r\n                  </div>\r\n\r\n                </React.Fragment>\r\n               \r\n               );\r\n\r\n              })}\r\n                \r\n    \r\n      </div>\r\n    \r\n    )}"]},"metadata":{},"sourceType":"module"}