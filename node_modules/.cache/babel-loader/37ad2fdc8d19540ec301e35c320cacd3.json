{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = [{\n  id: 'fullName',\n  label: 'Employee Name'\n}, {\n  id: 'email',\n  label: 'Email Address (Personal)'\n}, {\n  id: 'mobile',\n  label: 'Mobile Number'\n}, {\n  id: 'department',\n  label: 'Department',\n  disableSorting: true\n}];\nconsole.log(Data);\nexport default function Search() {\n  _s();\n\n  const styleInfo = {\n    paddingRight: '10px',\n    position: 'relative',\n    left: '10vh'\n  };\n  const [search, setSearch] = useState();\n\n  const searchSpace = event => {\n    let keyword = event.target.value;\n    setSearch({\n      search: keyword\n    });\n  };\n\n  const items = Data.filter(data => {\n    if (setSearch == null) return data;else if (data.id.toLowerCase().includes(setSearch.toLowerCase()) || data.label.toLowerCase().includes(setSearch.toLowerCase())) {\n      return data;\n    }\n  }).map(data => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            position: 'relative',\n            left: '10vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styleInfo,\n            children: [\"id: \", data.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 59\n            }, this), \"label: \", data.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this);\n  });\n  /* const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  \r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value === \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.fullname.toLowerCase().includes(target.value))\r\n        }\r\n    })\r\n  }\r\n  const items = Data.map(data=>{\r\n  return(\r\n  <div>\r\n    <ul>\r\n      <li style={{position:'relative',left:'10vh'}}>\r\n        <span style={styleInfo} >id: {data.id}<br/>label: {data.label}</span>\r\n      </li>\r\n     \r\n    </ul>\r\n  </div>\r\n  )\r\n  }) */\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"filled\",\n      size: \"small\",\n      id: \"filled-basic\",\n      placeholder: \"email ,ID \\uB610\\uB294 \\uD560 \\uC77C \\uAC80\\uC0C9\",\n      sx: {\n        boxShadow: 'none'\n      } //onChange={handleSearch}\n      ,\n      onChange: e => this.searchSpace(e),\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"KLrPbisl3Mlzlvtc6UZb5fIFlSg=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Search.js"],"names":["React","useState","Box","TextField","SearchIcon","Input","InputAdornment","TableBody","TableRow","TableCell","Data","id","label","disableSorting","console","log","Search","styleInfo","paddingRight","position","left","search","setSearch","searchSpace","event","keyword","target","value","items","filter","data","toLowerCase","includes","map","width","bgcolor","boxShadow","e","startAdornment"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport { TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Input from '@mui/material/Input';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { TableBody, TableRow, TableCell } from '@material-ui/core';\r\n\r\nconst Data = [\r\n  { id: 'fullName', label: 'Employee Name' },\r\n  { id: 'email', label: 'Email Address (Personal)' },\r\n  { id: 'mobile', label: 'Mobile Number' },\r\n  { id: 'department', label: 'Department', disableSorting: true },\r\n]\r\nconsole.log(Data);\r\n\r\nexport default function Search() {\r\n\r\n    const styleInfo = {\r\n      paddingRight:'10px',\r\n      position:'relative',\r\n      left:'10vh'\r\n      };\r\n  \r\n    const [search, setSearch] = useState();\r\n  \r\n    const searchSpace=(event)=>{\r\n      let keyword = event.target.value;\r\n      setSearch({search:keyword})\r\n    };\r\n\r\n   \r\n      const items = Data.filter((data)=>{\r\n        if(setSearch == null)\r\n            return data\r\n        else if(data.id.toLowerCase().includes(setSearch.toLowerCase()) || data.label.toLowerCase().includes(setSearch.toLowerCase())){\r\n            return data }\r\n        }).map(data=>{\r\n          return(\r\n             <div>\r\n                <ul>\r\n                  <li style={{position:'relative',left:'10vh'}}>\r\n                    <span style={styleInfo} >id: {data.id}<br/>label: {data.label}</span>\r\n                  </li>\r\n       \r\n               </ul>\r\n              </div>\r\n          )\r\n        })\r\n          \r\n\r\n    /* const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    \r\n    const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value === \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.fullname.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n  }\r\n\r\n  const items = Data.map(data=>{\r\n    return(\r\n    <div>\r\n      <ul>\r\n        <li style={{position:'relative',left:'10vh'}}>\r\n          <span style={styleInfo} >id: {data.id}<br/>label: {data.label}</span>\r\n        </li>\r\n       \r\n      </ul>\r\n    </div>\r\n    )\r\n  }) */\r\n\r\n\r\n    return (\r\n        <Box \r\n        sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n        textAlign='center' \r\n        style={{ position:'relative'}}>\r\n        \r\n          {/* - 입력받는 string에 매치되는 아이디,할일,email 리스트로 불러와 보여주기\r\n                받아와야 하는 값 \r\n                -user nickname\r\n                -매치된 할일 의 단어\r\n                -참고) 설정한 색  \r\n            - style 수정사항\r\n                -search 검색 input 높이 조절\r\n                -항목 선택시 default 색 변경 */}\r\n            <TextField \r\n                fullWidth  \r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                id=\"filled-basic\"\r\n                placeholder=\"email ,ID 또는 할 일 검색\"\r\n                sx={{ boxShadow: 'none'}}    \r\n                //onChange={handleSearch}\r\n                onChange={(e)=>this.searchSpace(e)}\r\n                InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            >\r\n            </TextField>\r\n            \r\n                 {items}\r\n                   \r\n             \r\n        </Box>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}