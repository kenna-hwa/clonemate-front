{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\OrderItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Button, List, ListItem, ListItemText } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from \"react-beautiful-dnd\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { goalsData, todoData, datesData } from \"../atoms/todoData\";\nimport \"../stylesheets/OrderItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderItem() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n  let dateData = useRecoilValue(datesData);\n  let [goal, setGoal] = useRecoilState(goalsData);\n  let [todo, setTodo] = useRecoilState(todoData);\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n\n  function goalDragEndEventHandler(result) {\n    if (!result.destination) return;\n    console.log(\"origin goal\", goal);\n    /* 220213 생성 */\n\n    const currentOrder = JSON.parse(JSON.stringify(goal));\n    const draggingItemIndex = result.source.index;\n    const afterDragItemIndex = result.destination.index;\n    const removeGoal = currentOrder.splice(draggingItemIndex, 1);\n    currentOrder.splice(afterDragItemIndex, 0, removeGoal[0]);\n    setGoal(currentOrder);\n  }\n\n  function todoDragEndEventHandler(result) {\n    if (!result.destination) return;\n    console.log(\"result\", result); // const currentOrder = JSON.parse(JSON.stringify(todo));\n    // const draggingItemIndex = result.source.index;\n    // const afterDragItemIndex = result.destination.index;\n    // const removeTodo = currentOrder.splice(draggingItemIndex, 1);\n    // currentOrder.splice(afterDragItemIndex, 0, removeTodo[0]);\n    // setTodo(currentOrder);\n  }\n\n  resetServerContext();\n  /* 함수 선언 끝 */\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: goalDragEndEventHandler,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"GOALS\",\n      type: \"GOALS\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-box\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [goal.map((goal, index) => {\n          //goal.map\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: goal.goal_id.toString(),\n            index: index,\n            children: provided => {\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                className: \"goals-listItem\",\n                id: goal.goal_id,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ref: provided.innerRef,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"goals-listItem-text-wrap\",\n                  \"data-index\": index,\n                  children: [/*#__PURE__*/_jsxDEV(LibraryBooksIcon, {\n                    className: \"goals-listItem-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    className: \"goals-listItem-text\",\n                    name: goal.goal_id,\n                    sx: {\n                      color: goal.title_color\n                    },\n                    children: goal.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    className: \"goals-listItem-add-icon\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 80\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this)]\n              }, goal.goal_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this);\n            }\n          }, `goal` + goal.goal_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        }), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n      /* order-box */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this); //최상단 return \n}\n\n_s(OrderItem, \"aL9fzCtxeHGk5gDpQeVSIYeQyJQ=\", false, function () {\n  return [useRecoilValue, useRecoilState, useRecoilState];\n});\n\n_c = OrderItem;\nexport function TodoList(props) {\n  const goal = props.goal;\n  const todo = props.todo;\n\n  function todoDragEndEventHandler(result) {\n    if (!result.destination) return;\n    console.log(\"result\", result); // const currentOrder = JSON.parse(JSON.stringify(todo));\n    // const draggingItemIndex = result.source.index;\n    // const afterDragItemIndex = result.destination.index;\n    // const removeTodo = currentOrder.splice(draggingItemIndex, 1);\n    // currentOrder.splice(afterDragItemIndex, 0, removeTodo[0]);\n    // setTodo(currentOrder);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: todoDragEndEventHandler,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"TODOS\",\n      type: \"TODOS\",\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-box\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: \"todo-list-wrap\",\n          children: todo.map((todo, index) => {\n            //todo.map\n            return (\n              /*#__PURE__*/\n              //todo.map return\n              // 드래그 영역 DragDrapContext\n              _jsxDEV(Draggable, {\n                draggableId: todo.todo_id.toString(),\n                index: index,\n                children: provided => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"goals-todo-input-list-Box\",\n                    \"data-index\": index,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    ref: provided.innerRef,\n                    children: goal.goal_id === parseInt(todo.goal_id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"goals-todo-input-list-check-wrap\",\n                      children: [todo.check_yn === 'Y' ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n                        className: \"goals-todo-list-input-check-icon\",\n                        \"data-index\": index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 59\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n                        className: \"goals-todo-list-input-check-icon\",\n                        \"data-index\": index\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 142\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        id: \"todo-input\",\n                        className: \"goals-todo-list\",\n                        name: todo.title,\n                        \"data-index\": index,\n                        children: [todo.title, \" \"]\n                      }, `todo${index}`, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 33\n                    }, this) : null\n                  }, `todo` + index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, `todo-${todo.goal_id}-goal-${todo.todo_id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            ); //todo.map return\n          })\n          /* todo.map */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderItem\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/OrderItem.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","Button","List","ListItem","ListItemText","Box","DragDropContext","Droppable","Draggable","resetServerContext","LibraryBooksIcon","MoreHorizIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","goalsData","todoData","datesData","OrderItem","dateData","goal","setGoal","todo","setTodo","goalDragEndEventHandler","result","destination","console","log","currentOrder","JSON","parse","stringify","draggingItemIndex","source","index","afterDragItemIndex","removeGoal","splice","todoDragEndEventHandler","provided","snapshot","droppableProps","innerRef","map","goal_id","toString","draggableProps","dragHandleProps","color","title_color","title","TodoList","props","todo_id","parseInt","check_yn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Button, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { DragDropContext, Droppable, Draggable, resetServerContext, } from \"react-beautiful-dnd\";\r\n\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n\r\nimport { goalsData, todoData, datesData } from \"../atoms/todoData\";\r\n\r\nimport \"../stylesheets/OrderItem.css\";\r\n\r\nexport default function OrderItem() {\r\n  /* Hook 선언 시작 */\r\n\r\n  /* atom 시작 */\r\n  let dateData = useRecoilValue(datesData);\r\n  let [goal, setGoal] = useRecoilState(goalsData);\r\n  let [todo, setTodo] = useRecoilState(todoData);\r\n\r\n  /* Hook 선언 끝 */\r\n\r\n  /* 함수 선언 시작 */\r\n\r\n  function goalDragEndEventHandler(result) {\r\n    if (!result.destination) return;\r\n    console.log(\"origin goal\", goal);\r\n\r\n    /* 220213 생성 */\r\n\r\n    const currentOrder = JSON.parse(JSON.stringify(goal));\r\n    const draggingItemIndex = result.source.index;\r\n    const afterDragItemIndex = result.destination.index;\r\n    const removeGoal = currentOrder.splice(draggingItemIndex, 1);\r\n\r\n    currentOrder.splice(afterDragItemIndex, 0, removeGoal[0]);\r\n    setGoal(currentOrder);\r\n  }\r\n\r\nfunction todoDragEndEventHandler(result) {\r\n    if (!result.destination) return;\r\n    console.log(\"result\", result);\r\n\r\n    // const currentOrder = JSON.parse(JSON.stringify(todo));\r\n    // const draggingItemIndex = result.source.index;\r\n    // const afterDragItemIndex = result.destination.index;\r\n    // const removeTodo = currentOrder.splice(draggingItemIndex, 1);\r\n\r\n    // currentOrder.splice(afterDragItemIndex, 0, removeTodo[0]);\r\n    // setTodo(currentOrder);\r\n\r\n  }\r\n  resetServerContext();\r\n\r\n  /* 함수 선언 끝 */\r\n \r\n\r\n  return (\r\n    <DragDropContext onDragEnd={goalDragEndEventHandler}>\r\n    <Droppable  droppableId=\"GOALS\" type=\"GOALS\">\r\n    {(provided, snapshot) => (\r\n    <div className=\"order-box\" {...provided.droppableProps}\r\n    ref={provided.innerRef}>\r\n\r\n\r\n            {goal.map((goal, index) => { //goal.map\r\n            return (\r\n                <Draggable key={`goal` + goal.goal_id} draggableId={goal.goal_id.toString()} index={index} >\r\n                    {(provided) => {return (\r\n                        <ListItem className=\"goals-listItem\" id={goal.goal_id} key={goal.goal_id} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}> {/* 드래그 해야할 요소 goal */}\r\n\r\n                        <div className=\"goals-listItem-text-wrap\"  data-index={index} >\r\n                        <LibraryBooksIcon className=\"goals-listItem-icon\" />\r\n                                <ListItemText className=\"goals-listItem-text\" name={goal.goal_id} sx={{ color:goal.title_color }}  >{goal.title}</ListItemText>\r\n                            <ListItemText className=\"goals-listItem-add-icon\" ><span>+</span></ListItemText>\r\n                        </div>\r\n\r\n{/* \r\n                        <TodoList goal={goal} todo={todo} /> */}\r\n\r\n                        </ListItem>\r\n                    )}}\r\n                </Draggable>\r\n            )\r\n                              \r\n            })}  {/* goal.map */}\r\n    </div> /* order-box */\r\n    )}\r\n    </Droppable>\r\n    </DragDropContext>\r\n\r\n\r\n  ) //최상단 return \r\n    \r\n}\r\n\r\nexport function TodoList (props) {\r\n\r\n    const goal = props.goal;\r\n    const todo = props.todo;\r\n\r\n\r\n    \r\nfunction todoDragEndEventHandler(result) {\r\n    if (!result.destination) return;\r\n    console.log(\"result\", result);\r\n\r\n    // const currentOrder = JSON.parse(JSON.stringify(todo));\r\n    // const draggingItemIndex = result.source.index;\r\n    // const afterDragItemIndex = result.destination.index;\r\n    // const removeTodo = currentOrder.splice(draggingItemIndex, 1);\r\n\r\n    // currentOrder.splice(afterDragItemIndex, 0, removeTodo[0]);\r\n    // setTodo(currentOrder);\r\n\r\n  }\r\n\r\n    return(\r\n        \r\n    <DragDropContext onDragEnd={todoDragEndEventHandler} >\r\n        {/* 드래그 놓을 수 있는 영역 (드롭 영역) Droppable */}\r\n        <Droppable droppableId=\"TODOS\"  type=\"TODOS\">\r\n        {/* 드래그 Div 생성 */}\r\n        {(provided, snapshot) => (\r\n        <div className=\"todo-box\" {...provided.droppableProps} ref={provided.innerRef}>\r\n        <List className=\"todo-list-wrap\">\r\n        {todo.map((todo,index)=>{ //todo.map\r\n            return ( //todo.map return\r\n               // 드래그 영역 DragDrapContext\r\n                <Draggable key={`todo-${todo.goal_id}-goal-${todo.todo_id}`} draggableId={todo.todo_id.toString()} index={index}>\r\n                    {(provided) => {return ( \r\n                    <div className=\"goals-todo-input-list-Box\" key={`todo`+index} data-index={index} {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                        {goal.goal_id === parseInt(todo.goal_id) ? (\r\n                                <div className=\"goals-todo-input-list-check-wrap\">\r\n                                {todo.check_yn === 'Y' ?  <CheckBoxIcon className=\"goals-todo-list-input-check-icon\" data-index={index} /> : <CheckBoxOutlineBlankIcon className=\"goals-todo-list-input-check-icon\" data-index={index} /> }\r\n                                    <p key={`todo${index}`} id=\"todo-input\" className=\"goals-todo-list\" \r\n                                    name={todo.title} data-index={index} >{todo.title} </p>\r\n                                </div>\r\n                        ) : null} \r\n                    </div>\r\n                    )}}\r\n                </Draggable>\r\n            ) //todo.map return\r\n        }) /* todo.map */}\r\n        </List>\r\n            </div>          \r\n            )}\r\n            </Droppable>\r\n            </DragDropContext>\r\n        \r\n        \r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}