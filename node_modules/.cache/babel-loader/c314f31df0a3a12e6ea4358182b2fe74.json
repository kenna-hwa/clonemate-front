{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\order\\\\OrderItem.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Box, Button, List, ListItem, ListItemText } from \"@mui/material\";\nimport { DragDropContext, Droppable, Draggable, resetServerContext } from \"react-beautiful-dnd\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport { objTodosDataResult, goalsData, todoData, objDatesData } from \"../../atoms/todoData\";\nimport \"../../stylesheets/OrderItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderItem() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* Hook 선언 종료 */\n\n  /* state 선언 시작 */\n\n  /* state 선언 종료 */\n\n  /* atom 시작 */\n  let dateData = useRecoilValue(objDatesData); // atom에서 goal+todo 데이터 가져오기\n\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  const todoDataArray = JSON.parse(JSON.stringify(dtTodos));\n  console.log(\"dtTodos\", dtTodos);\n  /* atom 종료 */\n\n  /* 함수 선언 시작 */\n  // a little function to help us with reordering the result\n\n  const Reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }; // 기존 방식\n  // const onDragEnd = (res) => {\n  //   if (!res.destination) return;\n  //   //드래그 하는 sourced의 index\n  //   const sourceGoalOrderNo = res.source.index;\n  //   //드래그 해서 내려놓은 destination의 index\n  //   const destinationGoalOrderNo = res.destination.index;\n  //   console.log(\"sourceGoalOrderNo\", sourceGoalOrderNo)\n  //   todoDataArray.map((goal)=>{\n  //       if(goal.goalOrderNo === sourceGoalOrderNo){\n  //         goal.goalOrderNo = destinationGoalOrderNo;\n  //       }\n  //     })\n  //     setDtTodos(todoDataArray)\n  // };\n\n\n  const onDragEndGoal = result => {\n    if (!result.destination) return; //드래그 하는 sourced의 index\n\n    const sourceGoalOrderNo = result.source.index; //드래그 해서 내려놓은 destination의 index\n\n    const destinationGoalOrderNo = result.destination.index; //미리 만들어둔 Reorder 함수 사용\n\n    const reorderArray = Reorder(dtTodos, sourceGoalOrderNo, destinationGoalOrderNo);\n    setDtTodos(reorderArray);\n  };\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEndGoal,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"Goal\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-list-wrap\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [todoDataArray.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: String(data.goalOrderNo),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(OrderTodoGoal, {\n                data: data,\n                index: index,\n                id: data.goalId,\n                todoDataArray: todoDataArray,\n                setDtTodos: setDtTodos,\n                Reorder: Reorder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        }), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderItem, \"52by6CE41JQMDRTG9dyCGmBVyvQ=\", false, function () {\n  return [useRecoilValue, useRecoilState];\n});\n\n_c = OrderItem;\nexport const OrderTodoGoal = props => {\n  const data = props.data;\n  const index = props.index;\n  const goal_id = props.id;\n  const todoDataArray = props.todoDataArray;\n  const setDtTodos = props.setDtTodos;\n  const Reorder = props.Reorder;\n  /* 함수 선언 시작 */\n\n  const onDragEndTodo = res => {\n    if (!res.destination) return; //드래그 하는 sourced의 index\n\n    const sourceTodoOrderNo = res.source.index; //드래그 해서 내려놓은 destination의 index\n\n    const destinationTodoOrderNo = res.destination.index;\n    todoDataArray.map(goal => {\n      if (goal.goalId === goal_id) {\n        const reorderArray = Reorder(goal.todos, sourceTodoOrderNo, destinationTodoOrderNo);\n        console.log(reorderArray);\n        goal.todos = reorderArray;\n      }\n    });\n    setDtTodos(todoDataArray);\n  }; //테스트\n  // const onDragEnd = (result) => {\n  //   if (!result.destination) return;\n  //   const draggingItemIndex = result.source.index-1;\n  //   const afterDragItemIndex = result.destination.index-1;\n  //   const removeTag = todoDataArray.splice(draggingItemIndex, 1);\n  //   console.log(\"removeTag\", removeTag)\n  //   // todoDataArray.todos.splice(afterDragItemIndex, 0, removeTag[0]);\n  //   setDtTodos(todoDataArray);\n  // }\n\n  /* 함수 선언 종료 */\n\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEndTodo,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"Todo\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-list-box\",\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"goals-list-button\",\n          \"data-index\": index,\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(ReceiptIcon, {\n            className: \"goals-list-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goals-list-text\",\n            id: data.goalOrderNo,\n            name: data.goalOrderNo,\n            style: {\n              color: data.goalTitleColor\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.goalTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"goals-list-plus-icon-wrap\",\n            children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n              className: \"goals-list-plus-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todos-list-wrap\",\n          children: data.todos.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: \"todo\" + index,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(FeedTodoData, {\n                  todos: data,\n                  index: index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)\n            }, data.todoId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), provided.placeholder]\n      }, data.goalOrderNo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_c2 = OrderTodoGoal;\nexport const FeedTodoData = props => {\n  const todos = props.todos;\n  const index = props.todos.todoId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos-list-box\",\n    \"data-todos\": todos,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-listItem-text-wrap\",\n      id: todos.todoId,\n      \"data-index\": todos.orderNo,\n      children: [todos.checkYn === \"Y\" ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n        \"data-goalid\": todos.goalId,\n        \"data-todoid\": todos.todoId,\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n        \"data-goalid\": todos.goalId,\n        \"data-todoid\": todos.todoId,\n        className: \"todos-list-check-icon\",\n        \"data-check\": todos.checkYn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_c3 = FeedTodoData;\nconst TodoList = /*#__PURE__*/React.forwardRef(_c4 = _s2((props, ref) => {\n  var _inputRef$current;\n\n  _s2();\n\n  const inputRef = useRef(null);\n  const todos = props.todos;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"todos-list-input\",\n    id: \"todo-input\",\n    type: \"text\",\n    maxLength: \"50\",\n    size: (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value.length,\n    ref: inputRef,\n    name: todos.title,\n    \"data-orderno\": todos.orderNo,\n    \"data-goalid\": todos.goalId,\n    \"data-todoid\": todos.todoId,\n    value: todos.title,\n    readOnly: true\n  }, todos.todoId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\"));\n_c5 = TodoList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"OrderItem\");\n$RefreshReg$(_c2, \"OrderTodoGoal\");\n$RefreshReg$(_c3, \"FeedTodoData\");\n$RefreshReg$(_c4, \"TodoList$React.forwardRef\");\n$RefreshReg$(_c5, \"TodoList\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/order/OrderItem.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","Box","Button","List","ListItem","ListItemText","DragDropContext","Droppable","Draggable","resetServerContext","ReceiptIcon","AddCircleIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","objTodosDataResult","goalsData","todoData","objDatesData","OrderItem","dateData","dtTodos","setDtTodos","todoDataArray","JSON","parse","stringify","console","log","Reorder","list","startIndex","endIndex","result","Array","from","removed","splice","onDragEndGoal","destination","sourceGoalOrderNo","source","index","destinationGoalOrderNo","reorderArray","provided","droppableProps","innerRef","map","data","String","goalOrderNo","draggableProps","dragHandleProps","goalId","placeholder","OrderTodoGoal","props","goal_id","id","onDragEndTodo","res","sourceTodoOrderNo","destinationTodoOrderNo","goal","todos","color","goalTitleColor","goalTitle","todoId","FeedTodoData","orderNo","checkYn","TodoList","forwardRef","ref","inputRef","current","value","length","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Box, Button, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  resetServerContext,\r\n} from \"react-beautiful-dnd\";\r\n\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n\r\nimport {\r\n  objTodosDataResult,\r\n  goalsData,\r\n  todoData,\r\n  objDatesData,\r\n} from \"../../atoms/todoData\";\r\n\r\nimport \"../../stylesheets/OrderItem.css\";\r\n\r\nexport default function OrderItem() {\r\n  /* Hook 선언 시작 */\r\n\r\n  /* Hook 선언 종료 */\r\n\r\n  /* state 선언 시작 */\r\n\r\n  /* state 선언 종료 */\r\n\r\n  /* atom 시작 */\r\n  let dateData = useRecoilValue(objDatesData);\r\n  // atom에서 goal+todo 데이터 가져오기\r\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n  const todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n  console.log(\"dtTodos\", dtTodos)\r\n\r\n  /* atom 종료 */\r\n\r\n  /* 함수 선언 시작 */\r\n    // a little function to help us with reordering the result\r\n    const Reorder = (list, startIndex, endIndex) => {\r\n      const result = Array.from(list);\r\n      const [removed] = result.splice(startIndex, 1);\r\n      result.splice(endIndex, 0, removed);\r\n\r\n      return result;\r\n    };\r\n\r\n\r\n// 기존 방식\r\n  // const onDragEnd = (res) => {\r\n  //   if (!res.destination) return;\r\n  //   //드래그 하는 sourced의 index\r\n  //   const sourceGoalOrderNo = res.source.index;\r\n  //   //드래그 해서 내려놓은 destination의 index\r\n  //   const destinationGoalOrderNo = res.destination.index;\r\n  //   console.log(\"sourceGoalOrderNo\", sourceGoalOrderNo)\r\n  //   todoDataArray.map((goal)=>{\r\n  //       if(goal.goalOrderNo === sourceGoalOrderNo){\r\n  //         goal.goalOrderNo = destinationGoalOrderNo;\r\n  //       }\r\n  //     })\r\n  //     setDtTodos(todoDataArray)\r\n\r\n  // };\r\n\r\n\r\n\r\n  const onDragEndGoal = (result) => {\r\n    if (!result.destination) return;\r\n    //드래그 하는 sourced의 index\r\n    const sourceGoalOrderNo = result.source.index;\r\n    //드래그 해서 내려놓은 destination의 index\r\n    const destinationGoalOrderNo = result.destination.index;\r\n    //미리 만들어둔 Reorder 함수 사용\r\n    const reorderArray = Reorder(dtTodos, sourceGoalOrderNo, destinationGoalOrderNo)\r\n    setDtTodos(reorderArray);\r\n\r\n  }\r\n\r\n  /* 함수 선언 종료 */\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndGoal}>\r\n      <Droppable droppableId=\"Goal\">\r\n      {provided =>  (\r\n        <div className=\"goals-list-wrap\" {...provided.droppableProps} ref={provided.innerRef}>\r\n          {todoDataArray.map((data, index) => {\r\n            return (\r\n              <Draggable draggableId={String(data.goalOrderNo)} index={index} key={index}>\r\n               {provided => (\r\n                  <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                    <OrderTodoGoal data={data} index={index}  id={data.goalId} todoDataArray={todoDataArray} setDtTodos={setDtTodos} Reorder={Reorder} />\r\n                  </div>\r\n                )}  \r\n              </Draggable>\r\n            )\r\n          })}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n\r\n}\r\n\r\nexport const OrderTodoGoal = (props) => {\r\n\r\n  const data = props.data;\r\n  const index = props.index;\r\n  const goal_id = props.id;\r\n  const todoDataArray = props.todoDataArray;\r\n  const setDtTodos = props.setDtTodos;\r\n  const Reorder = props.Reorder;\r\n\r\n  /* 함수 선언 시작 */\r\n\r\n  const onDragEndTodo = (res) => {\r\n    if (!res.destination) return;\r\n    //드래그 하는 sourced의 index\r\n    const sourceTodoOrderNo = res.source.index;\r\n    //드래그 해서 내려놓은 destination의 index\r\n    const destinationTodoOrderNo = res.destination.index;\r\n\r\n    todoDataArray.map(goal => {\r\n        if(goal.goalId === goal_id){\r\n          const reorderArray = Reorder(goal.todos, sourceTodoOrderNo, destinationTodoOrderNo)\r\n          console.log(reorderArray)\r\n          goal.todos = reorderArray;         \r\n        }\r\n    })\r\n    setDtTodos(todoDataArray);\r\n\r\n  }\r\n\r\n//테스트\r\n  // const onDragEnd = (result) => {\r\n  //   if (!result.destination) return;\r\n\r\n    \r\n  //   const draggingItemIndex = result.source.index-1;\r\n  //   const afterDragItemIndex = result.destination.index-1;\r\n  //   const removeTag = todoDataArray.splice(draggingItemIndex, 1);\r\n  //   console.log(\"removeTag\", removeTag)\r\n  //   // todoDataArray.todos.splice(afterDragItemIndex, 0, removeTag[0]);\r\n\r\n  //   setDtTodos(todoDataArray);\r\n  // }\r\n\r\n  /* 함수 선언 종료 */\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndTodo}>\r\n      <Droppable droppableId=\"Todo\">\r\n      {provided =>  (\r\n        <div className=\"goals-list-box\" key={data.goalOrderNo} ref={provided.innerRef} {...provided.droppableProps}>\r\n          {/* Goal 컴포넌트 시작 */}\r\n          <Button className=\"goals-list-button\" data-index={index} data={data}>\r\n            <ReceiptIcon className=\"goals-list-icon\" />\r\n            <div className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color: data.goalTitleColor }}>\r\n              <p>{data.goalTitle}</p>\r\n            </div>\r\n            <p className=\"goals-list-plus-icon-wrap\">\r\n              <AddCircleIcon className=\"goals-list-plus-icon\" />\r\n            </p>\r\n          </Button>\r\n          {/* Goal 컴포넌트 종료 */}\r\n          {/* Todo 컴포넌트 map 시작 */}\r\n          <div className=\"todos-list-wrap\">\r\n            {data.todos.map((data, index) => {\r\n              return (\r\n                <Draggable draggableId={\"todo\" + index} index={index} key={data.todoId}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                      <FeedTodoData todos={data} index={index}/> \r\n                    </div>\r\n                 )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Todo 컴포넌트 map 종료 */}\r\n          {provided.placeholder} \r\n        </div>\r\n      )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const FeedTodoData = (props) => {\r\n  const todos = props.todos;\r\n  const index = props.todos.todoId;\r\n\r\n  return (\r\n    <div className=\"todos-list-box\" data-todos={todos}>\r\n      <div\r\n        className=\"goals-listItem-text-wrap\"\r\n        id={todos.todoId}\r\n        data-index={todos.orderNo}\r\n      >\r\n        {todos.checkYn === \"Y\" ? (\r\n          <CheckBoxIcon\r\n            data-goalid={todos.goalId}\r\n            data-todoid={todos.todoId}\r\n            className=\"todos-list-check-icon\"\r\n            data-check={todos.checkYn}\r\n          />\r\n        ) : (\r\n          <CheckBoxOutlineBlankIcon\r\n            data-goalid={todos.goalId}\r\n            data-todoid={todos.todoId}\r\n            className=\"todos-list-check-icon\"\r\n            data-check={todos.checkYn}\r\n          />\r\n        )}\r\n        <TodoList todos={todos} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n  const inputRef = useRef(null);\r\n\r\n  const todos = props.todos;\r\n\r\n  return (\r\n    <input\r\n      className=\"todos-list-input\"\r\n      key={todos.todoId}\r\n      id=\"todo-input\"\r\n      type=\"text\"\r\n      maxLength=\"50\"\r\n      size={inputRef.current?.value.length}\r\n      ref={inputRef}\r\n      name={todos.title}\r\n      data-orderno={todos.orderNo}\r\n      data-goalid={todos.goalId}\r\n      data-todoid={todos.todoId}\r\n      value={todos.title}\r\n      readOnly\r\n    />\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}