{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\routines\\\\CreateRoutinesForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useForm } from \"react-hook-form\";\nimport { Box, Button } from \"@mui/material\";\nimport CreateRoutinesEndDate from \"./CreateRoutinesEndDate\";\nimport CreateRoutinesDate from \"./CreateRoutinesDate\";\nimport CreateRoutinesDay from \"./CreateRoutinesDay\";\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { goalsData, todoData, datesData, dateCalendarOpen, endRepeatDateCalendarOpen, repeatDayCalendarOpen, createRepeatDay } from \"../../atoms/todoData\"; // input 생성\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRoutinesForm(props) {\n  _s();\n\n  /* Hook 선언 시작 */\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm({\n    mode: \"onChange\"\n  });\n  /* atom 시작 */\n\n  let goal = useRecoilValue(goalsData);\n  let [todo, setTodo] = useRecoilState(todoData);\n  let [dayChecked, setDayChecked] = useRecoilState(createRepeatDay);\n  let dateData = useRecoilValue(datesData);\n  let dtToday = dateData.dtToday;\n  let [dateCalenderBoolean, setDateCalendarBoolean] = useRecoilState(dateCalendarOpen);\n  let [endDateCalenderBoolean, setEndDateCalendarBoolean] = useRecoilState(endRepeatDateCalendarOpen);\n  let [repeatDayCalenderBoolean, setRepeatDayCalendarBoolean] = useRecoilState(repeatDayCalendarOpen);\n  let [newDate, setNewDate] = useState(dateData.selectedNewDate);\n  let [newEndDate, setNewEndDate] = useState(dateData.selectedNewEndDate);\n  /* 변수 선언 시작 */\n\n  const setIsGoalSelected = props.setIsGoalSelected;\n  const selectedGoalId = props.goal_id;\n  const matchedGoal = todo.filter(data => {\n    return data.goal_id === selectedGoalId;\n  }).length;\n  let [createRoutinesState, setCreactRoutinesState] = useState({\n    \"todo_id\": \"\",\n    \"goal_id\": \"\",\n    //묶여있는 goal id\n    \"next_todo_id\": \"\",\n    //다음 todo id (순서지정용)\n    \"title\": \"\",\n    \"date\": \"\",\n    \"end_repeat_date\": \"\",\n    //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\n    \"repeat_days\": dayChecked,\n    \"check_yn\": \"N\" //달성여부\n\n  });\n  const dayENGKOR = {\n    \"sun\": \"일\",\n    //y 면 일요일 반복, n 이면 반복 x\n    \"mon\": \"월\",\n    \"tue\": \"화\",\n    \"wed\": \"수\",\n    \"thu\": \"목\",\n    \"fri\": \"금\",\n    \"sat\": \"토\"\n  };\n  let checkedArr = []; //요일 배열화\n\n  const dayCheckedArr = Object.entries(dayChecked);\n  const dayENGKORArr = Object.entries(dayENGKOR);\n  dayCheckedArr.filter(day => {\n    let name = day[0].toString();\n    if (day[1] === 'Y') return checkedArr.push(dayENGKOR[name]);\n  }); //첫 시작 시 key default 정보 입력\n\n  useEffect(() => {\n    setCreactRoutinesState({ ...createRoutinesState,\n      goal_id: selectedGoalId,\n      todo_id: matchedGoal + 1,\n      next_todo_id: matchedGoal + 2,\n      date: dtToday,\n      end_repeat_date: dtToday\n    });\n  }, []);\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  //title 작성 시 createState 수정\n\n  const onChangeTitleEventHandler = e => {\n    setCreactRoutinesState({ ...createRoutinesState,\n      title: e.target.value\n    });\n  }; // 시작 날짜 클릭 시 Date캘린더 노출 on off\n\n\n  const handleDateCalendarOpen = () => setDateCalendarBoolean(true);\n\n  const handleDateCalendarClose = () => setDateCalendarBoolean(false); // 종료 날짜 클릭 시 EndDate캘린더 노출 on off\n\n\n  const handleEndDateCalendarOpen = () => setEndDateCalendarBoolean(true);\n\n  const handleEndDateCalendarClose = () => setEndDateCalendarBoolean(false); // 반복 요일 클릭 시 Date캘린더 노출 on off\n\n\n  const handleDayCalendarOpen = () => setRepeatDayCalendarBoolean(true);\n\n  const handleDayCalendarClose = () => setRepeatDayCalendarBoolean(false); //캘린더 생성 후 날짜 선택 date \n\n\n  const calendarOnChangeDate = e => {\n    console.log(\"클릭 후 date\", newDate);\n    const dtDate = newDate.toJSON().substring(0, 10);\n    setCreactRoutinesState({ ...createRoutinesState,\n      date: dtDate\n    });\n    handleDateCalendarClose();\n  }; //캘린더 생성 후 날짜 선택 end_repeat_date\n\n\n  const calendarOnChangeEndRepeatDate = () => {\n    console.log(\"클릭 후 newEndDate\", newDate);\n    const dtDate = newDate.toJSON().substring(0, 10);\n\n    if (dtDate < createRoutinesState.date) {\n      alert(\"시작 날짜 이후 날짜를 선택해주세요.\");\n      return false;\n    }\n\n    setCreactRoutinesState({ ...createRoutinesState,\n      end_repeat_date: dtDate\n    });\n    handleEndDateCalendarClose();\n  }; //캘린더 생성 후 요일 선택 repeat_day\n\n\n  const calendarOnChangeRepeatDays = e => {\n    setCreactRoutinesState({ ...createRoutinesState,\n      repeat_days: dayChecked\n    });\n    handleDayCalendarClose();\n  };\n\n  const calendarRoutinesSubmit = e => {\n    const copy_todo_state = [...todo]; // todo State 원본 카피        \n\n    copy_todo_state.push(createRoutinesState);\n    setTodo(copy_todo_state, console.log(copy_todo_state)); //setTodo 이용해 state 변경\n\n    const newArr = Array(goal.length).fill(false);\n    setIsGoalSelected(newArr);\n  };\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"create-routines-input-Box\",\n    children: [/*#__PURE__*/_jsxDEV(CreateRoutinesDate, {\n      dateCalenderBoolean: dateCalenderBoolean,\n      setDateCalendarBoolean: setDateCalendarBoolean,\n      todoId: createRoutinesState.todo_id,\n      handleDateCalendarOpen: handleDateCalendarOpen,\n      handleDateCalendarClose: handleDateCalendarClose,\n      calendarOnChangeDate: calendarOnChangeDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateRoutinesEndDate, {\n      endDateCalenderBoolean: endDateCalenderBoolean,\n      setEndDateCalendarBoolean: setEndDateCalendarBoolean,\n      todoId: createRoutinesState.todo_id,\n      handleEndDateCalendarOpen: handleEndDateCalendarOpen,\n      handleEndDateCalendarClose: handleEndDateCalendarClose,\n      calendarOnChangeEndRepeatDate: calendarOnChangeEndRepeatDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateRoutinesDay, {\n      repeatDayCalenderBoolean: repeatDayCalenderBoolean,\n      handleDayCalendarClose: handleDayCalendarClose,\n      calendarOnChangeRepeatDays: calendarOnChangeRepeatDays,\n      dayENGKOR: dayENGKOR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-title-field\",\n      children: [/*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n        className: \"routines-input-check-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"todo-input\",\n        className: \"routines-input-field\",\n        placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        type: \"text\",\n        maxLength: \"35\",\n        onChange: onChangeTitleEventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-startdate-field\",\n      onClick: handleDateCalendarOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC2DC\\uC791 \\uB0A0\\uC9DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"start-date-input\",\n        className: \"routines-startdate-input\",\n        type: \"text\",\n        value: createRoutinesState.date,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-enddate-field\",\n      onClick: handleEndDateCalendarOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC885\\uB8CC \\uB0A0\\uC9DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"end-date-input\",\n        className: \"routines-enddate-input\",\n        type: \"text\",\n        value: createRoutinesState.end_repeat_date,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routines-input-day-field\",\n      onClick: handleDayCalendarOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uBC18\\uBCF5 \\uC694\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"routines-day-text-wrap\",\n        children: checkedArr.length != 7 ? checkedArr.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"routines-day-text\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"routines-day-text\",\n          children: \"\\uB9E4\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"routines-goal-id-input\",\n      className: \"routines-goal-create-id\",\n      type: \"hidden\",\n      value: '',\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"routines-input-btn\",\n      onClick: calendarRoutinesSubmit,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CreateRoutinesForm, \"2Y2bZaVwEHA4/9hvE696/k/xz+8=\", false, function () {\n  return [useForm, useRecoilValue, useRecoilState, useRecoilState, useRecoilValue, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = CreateRoutinesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoutinesForm\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/routines/CreateRoutinesForm.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","useForm","Box","Button","CreateRoutinesEndDate","CreateRoutinesDate","CreateRoutinesDay","CheckBoxOutlineBlankIcon","goalsData","todoData","datesData","dateCalendarOpen","endRepeatDateCalendarOpen","repeatDayCalendarOpen","createRepeatDay","CreateRoutinesForm","props","register","handleSubmit","errors","watch","mode","goal","todo","setTodo","dayChecked","setDayChecked","dateData","dtToday","dateCalenderBoolean","setDateCalendarBoolean","endDateCalenderBoolean","setEndDateCalendarBoolean","repeatDayCalenderBoolean","setRepeatDayCalendarBoolean","newDate","setNewDate","selectedNewDate","newEndDate","setNewEndDate","selectedNewEndDate","setIsGoalSelected","selectedGoalId","goal_id","matchedGoal","filter","data","length","createRoutinesState","setCreactRoutinesState","dayENGKOR","checkedArr","dayCheckedArr","Object","entries","dayENGKORArr","day","name","toString","push","todo_id","next_todo_id","date","end_repeat_date","onChangeTitleEventHandler","e","title","target","value","handleDateCalendarOpen","handleDateCalendarClose","handleEndDateCalendarOpen","handleEndDateCalendarClose","handleDayCalendarOpen","handleDayCalendarClose","calendarOnChangeDate","console","log","dtDate","toJSON","substring","calendarOnChangeEndRepeatDate","alert","calendarOnChangeRepeatDays","repeat_days","calendarRoutinesSubmit","copy_todo_state","newArr","Array","fill","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport CreateRoutinesEndDate from \"./CreateRoutinesEndDate\";\r\nimport CreateRoutinesDate from \"./CreateRoutinesDate\";\r\nimport CreateRoutinesDay from \"./CreateRoutinesDay\";\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport { goalsData, todoData, datesData, dateCalendarOpen, endRepeatDateCalendarOpen, repeatDayCalendarOpen, createRepeatDay } from \"../../atoms/todoData\";\r\n\r\n// input 생성\r\nexport default function CreateRoutinesForm(props) {\r\n\r\n\r\n\r\n    /* Hook 선언 시작 */\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm({ mode: \"onChange\" });\r\n\r\n    /* atom 시작 */\r\n    \r\n\r\n    let goal = useRecoilValue(goalsData);\r\n    let [todo, setTodo] = useRecoilState(todoData);\r\n\r\n    let [dayChecked, setDayChecked] = useRecoilState(createRepeatDay);\r\n    let dateData = useRecoilValue(datesData);\r\n    let dtToday = dateData.dtToday;\r\n    let [dateCalenderBoolean, setDateCalendarBoolean] = useRecoilState(dateCalendarOpen);\r\n    let [endDateCalenderBoolean, setEndDateCalendarBoolean] = useRecoilState(endRepeatDateCalendarOpen);\r\n    let [repeatDayCalenderBoolean, setRepeatDayCalendarBoolean] = useRecoilState(repeatDayCalendarOpen);\r\n\r\n    let [newDate, setNewDate] = useState(dateData.selectedNewDate);\r\n    let [newEndDate, setNewEndDate] = useState(dateData.selectedNewEndDate);\r\n\r\n\r\n    /* 변수 선언 시작 */\r\n    \r\n    const setIsGoalSelected = props.setIsGoalSelected;\r\n    const selectedGoalId = props.goal_id;\r\n    const matchedGoal = todo.filter((data)=>{\r\n        return (data.goal_id === selectedGoalId) ;\r\n    }).length;\r\n\r\n    let [createRoutinesState, setCreactRoutinesState] = useState({\r\n        \"todo_id\": \"\",\r\n        \"goal_id\": \"\", //묶여있는 goal id\r\n        \"next_todo_id\": \"\", //다음 todo id (순서지정용)\r\n        \"title\": \"\",\r\n        \"date\": \"\",\r\n        \"end_repeat_date\": \"\", //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n        \"repeat_days\": dayChecked,\r\n        \"check_yn\" : \"N\" //달성여부\r\n      });\r\n\r\n      const dayENGKOR =  {\r\n            \"sun\": \"일\", //y 면 일요일 반복, n 이면 반복 x\r\n            \"mon\": \"월\",\r\n            \"tue\": \"화\",\r\n            \"wed\": \"수\",\r\n            \"thu\": \"목\",\r\n            \"fri\": \"금\",\r\n            \"sat\": \"토\",\r\n    }\r\n    let checkedArr = [];\r\n    //요일 배열화\r\n    const dayCheckedArr = Object.entries(dayChecked);\r\n    const dayENGKORArr = Object.entries(dayENGKOR);\r\n\r\n    dayCheckedArr.filter((day)=>{\r\n    let name = day[0].toString();\r\n       if(day[1] === 'Y') return checkedArr.push(dayENGKOR[name])\r\n    })\r\n\r\n      //첫 시작 시 key default 정보 입력\r\n      useEffect(()=>{\r\n        setCreactRoutinesState({...createRoutinesState, goal_id: selectedGoalId, todo_id: (matchedGoal+1), next_todo_id: (matchedGoal+2), date: dtToday, end_repeat_date: dtToday, })\r\n      },[])\r\n\r\n    /* Hook 선언 끝 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //title 작성 시 createState 수정\r\n    const onChangeTitleEventHandler = (e) => {\r\n        setCreactRoutinesState({...createRoutinesState, title: e.target.value})\r\n    }\r\n\r\n    // 시작 날짜 클릭 시 Date캘린더 노출 on off\r\n    const handleDateCalendarOpen = () => setDateCalendarBoolean(true);\r\n    const handleDateCalendarClose = () => setDateCalendarBoolean(false);\r\n\r\n    // 종료 날짜 클릭 시 EndDate캘린더 노출 on off\r\n    const handleEndDateCalendarOpen = () => setEndDateCalendarBoolean(true);\r\n    const handleEndDateCalendarClose = () => setEndDateCalendarBoolean(false);\r\n\r\n    // 반복 요일 클릭 시 Date캘린더 노출 on off\r\n    const handleDayCalendarOpen = () => setRepeatDayCalendarBoolean(true);\r\n    const handleDayCalendarClose = () => setRepeatDayCalendarBoolean(false);\r\n\r\n    //캘린더 생성 후 날짜 선택 date \r\n\r\n    const calendarOnChangeDate = (e) => {\r\n        console.log(\"클릭 후 date\", newDate)\r\n        const dtDate = newDate.toJSON().substring(0,10);\r\n        setCreactRoutinesState({...createRoutinesState, date: dtDate })\r\n        handleDateCalendarClose();\r\n    }\r\n\r\n    //캘린더 생성 후 날짜 선택 end_repeat_date\r\n    \r\n    const calendarOnChangeEndRepeatDate = () => {\r\n        console.log(\"클릭 후 newEndDate\", newDate)\r\n        const dtDate = newDate.toJSON().substring(0,10);\r\n        if(dtDate<createRoutinesState.date){\r\n            alert(\"시작 날짜 이후 날짜를 선택해주세요.\")\r\n            return false;\r\n        }\r\n\r\n        setCreactRoutinesState({...createRoutinesState, end_repeat_date: dtDate })\r\n        handleEndDateCalendarClose();\r\n    }\r\n\r\n    //캘린더 생성 후 요일 선택 repeat_day\r\n\r\n    const calendarOnChangeRepeatDays = (e) => {\r\n        setCreactRoutinesState({...createRoutinesState, repeat_days: dayChecked })\r\n        handleDayCalendarClose();\r\n    }\r\n\r\n    const calendarRoutinesSubmit = (e) => {\r\n        const copy_todo_state = [...todo]; // todo State 원본 카피        \r\n        copy_todo_state.push(createRoutinesState);\r\n        setTodo(copy_todo_state, console.log(copy_todo_state)) ;//setTodo 이용해 state 변경\r\n        const newArr = Array(goal.length).fill(false) ;\r\n        setIsGoalSelected(newArr)\r\n    }\r\n\r\n    /* 함수 선언 끝 */\r\n\r\n    return  (\r\n            <Box className=\"create-routines-input-Box\">\r\n            <CreateRoutinesDate dateCalenderBoolean={dateCalenderBoolean} setDateCalendarBoolean={setDateCalendarBoolean} todoId={createRoutinesState.todo_id} handleDateCalendarOpen={handleDateCalendarOpen} handleDateCalendarClose={handleDateCalendarClose} calendarOnChangeDate={calendarOnChangeDate} /> \r\n            <CreateRoutinesEndDate endDateCalenderBoolean={endDateCalenderBoolean} setEndDateCalendarBoolean={setEndDateCalendarBoolean} todoId={createRoutinesState.todo_id} handleEndDateCalendarOpen={handleEndDateCalendarOpen} handleEndDateCalendarClose={handleEndDateCalendarClose} calendarOnChangeEndRepeatDate={calendarOnChangeEndRepeatDate} /> \r\n            <CreateRoutinesDay repeatDayCalenderBoolean={repeatDayCalenderBoolean} handleDayCalendarClose={handleDayCalendarClose} calendarOnChangeRepeatDays={calendarOnChangeRepeatDays} dayENGKOR={dayENGKOR} /> \r\n            \r\n                <div className=\"routines-input-title-field\">\r\n                    <CheckBoxOutlineBlankIcon className=\"routines-input-check-icon\"/>\r\n                    <input id=\"todo-input\" className=\"routines-input-field\"  placeholder=\"할 일을 입력해주세요.\" type=\"text\" maxLength={\"35\"} onChange={onChangeTitleEventHandler} /> \r\n                </div>\r\n                <div className=\"routines-input-startdate-field\" onClick={handleDateCalendarOpen}>\r\n                    <span>시작 날짜</span>\r\n                    <input id=\"start-date-input\" className=\"routines-startdate-input\"  type=\"text\" value={createRoutinesState.date} readOnly /> \r\n                </div>\r\n                <div className=\"routines-input-enddate-field\" onClick={handleEndDateCalendarOpen}>\r\n                    <span>종료 날짜</span>\r\n                    <input   id=\"end-date-input\" className=\"routines-enddate-input\" type=\"text\" value={createRoutinesState.end_repeat_date} readOnly /> \r\n                </div>\r\n                <div className=\"routines-input-day-field\" onClick={handleDayCalendarOpen}>\r\n                    <span>반복 요일</span>\r\n                    <div className=\"routines-day-text-wrap\">\r\n                    {\r\n                    checkedArr.length != 7? (checkedArr.map((data)=>{\r\n                        return (<i className=\"routines-day-text\">{data}</i>)\r\n                    })) : (<i className=\"routines-day-text\">매일</i>)\r\n                    }\r\n                    </div>\r\n                </div>\r\n                <input id=\"routines-goal-id-input\" className=\"routines-goal-create-id\" type=\"hidden\" value={''} readOnly/> \r\n                <Button type=\"submit\" className=\"routines-input-btn\" onClick={calendarRoutinesSubmit}>등록</Button>\r\n            \r\n            </Box>\r\n            )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}