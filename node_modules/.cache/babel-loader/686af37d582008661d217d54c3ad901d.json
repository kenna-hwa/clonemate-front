{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\exploresearch\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputBase from '@mui/material/InputBase';\nimport { alpha, styled } from '@mui/material/styles';\nimport '../../stylesheets/Search.css'; //  ** 할일 **\n// ✔ filter 함수 : 입력받는 string에 매치되는 아이디 불러와 보여주기\n// 유저 리스트-> 유저 클릭 -> 유저 feed 이동 -> 팔로우 버튼 -> event: isfollowing: true 생성 또는 변경 \n// 받아와야 하는 값 \n// -user id 입력-> filter -> 출력 user nickname \n// < style 수정사항 >\n// -search 검색 input 높이 조절\n// -항목 선택시 default 색 변경 \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedditTextField = styled(props => /*#__PURE__*/_jsxDEV(TextField, {\n  InputProps: {\n    disableUnderline: true\n  },\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this))(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '& .MuiFilledInput-root': {\n      overflow: 'hidden',\n      borderRadius: 4,\n      backgroundColor: theme.palette.mode === 'light' ? '#f5f5f5' : '#f5f5f5',\n      transition: theme.transitions.create(['border-color', 'background-color', 'box-shadow']),\n      '&:hover': {\n        backgroundColor: '#f5f5f5'\n      },\n      '&.Mui-focused': {\n        backgroundColor: '#f5f5f5'\n      }\n    }\n  };\n});\nconst BootstrapInput = styled(InputBase)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    },\n    '& .MuiInputBase-input': {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.mode === 'light' ? '#f5f5f5' : '#f5f5f5',\n      fontSize: 13,\n      color: '#c4c0c0',\n      width: 'fullwidth',\n      padding: '10px 12px',\n      transition: theme.transitions.create(['border-color', 'background-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:focus': {}\n    }\n  };\n});\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: '#f5f5f5'\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#f5f5f5'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#f5f5f5'\n    },\n    '&:hover fieldset': {\n      borderColor: '#f5f5f5'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#f5f5f5'\n    },\n    '& .MuiFilledInput-root': {\n      backgroundColor: '#f5f5f5'\n    }\n  },\n  '& .MuiFilledInput-root': {\n    overflow: 'hidden',\n    borderRadius: 4,\n    backgroundColor: theme.palette.mode === 'light' ? '#f5f5f5' : '#f5f5f5',\n    transition: theme.transitions.create(['border-color', 'background-color', 'box-shadow']),\n    '&:hover': {\n      backgroundColor: '#f5f5f5'\n    },\n    '&.Mui-focused': {\n      backgroundColor: '#f5f5f5'\n    }\n  }\n});\nconst Data = [{\n  \"strUserName\": \"주영\",\n  \"todo_id\": \"0\",\n  \"title\": \"🥛우유마시기\"\n}, {\n  \"strUserName\": \"🍈메로나\",\n  \"todo_id\": \"1\",\n  \"title\": \"공부하기\"\n}, {\n  \"strUserName\": \"두두\",\n  \"todo_id\": \"5\",\n  \"title\": \"스터디카페가기\"\n}, {\n  \"strUserName\": \"나야\",\n  \"todo_id\": \"7\",\n  \"title\": \"8시간 자기\"\n}]; //console.log(Data);\n\nexport default function Search() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-search-list-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(RedditTextField, {\n      fullWidth: true,\n      hiddenLabel: true,\n      size: \"small\",\n      placeholder: \"email ,ID \\uAC80\\uC0C9\",\n      sx: {\n        boxShadow: 'none'\n      },\n      id: \"reddit-input\",\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      },\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"small\",\n            className: \"search-list-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapInput, {\n      defaultValue: \"email ,ID \\uAC80\\uC0C9\",\n      id: \"bootstrap-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CssTextField, {\n      label: \"Custom CSS\",\n      id: \"custom-css-outlined-input\",\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      hiddenLabel: true,\n      id: \"filled-basic\",\n      size: \"small\",\n      variant: \"filled\",\n      placeholder: \"email ,ID \\uAC80\\uC0C9\",\n      sx: {\n        boxShadow: 'none'\n      },\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      },\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"small\",\n            className: \"search-list-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), Data.filter(data => {\n      if (searchTerm === \"\") {\n        return data;\n      } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      } else if (data.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-list-box\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"search-list-button\",\n            id: data.todo_id,\n            name: data.todo_id,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-list-name\",\n              id: data.strUserName,\n              name: data.strUserName,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.strUserName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-list-text\",\n              id: data.title,\n              name: data.title,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)\n        }, data.todo_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }, this)\n      }, data.todo_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/exploresearch/Search.js"],"names":["React","useState","Button","TextField","SearchIcon","InputAdornment","InputBase","alpha","styled","RedditTextField","props","disableUnderline","theme","overflow","borderRadius","backgroundColor","palette","mode","transition","transitions","create","BootstrapInput","marginTop","spacing","position","fontSize","color","width","padding","fontFamily","join","CssTextField","borderBottomColor","borderColor","Data","Search","searchTerm","setSearchTerm","boxShadow","event","target","value","startAdornment","filter","data","strUserName","toLowerCase","includes","title","map","todo_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { Button, TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { alpha, styled } from '@mui/material/styles';\r\n\r\nimport '../../stylesheets/Search.css';\r\n\r\n//  ** 할일 **\r\n// ✔ filter 함수 : 입력받는 string에 매치되는 아이디 불러와 보여주기\r\n// 유저 리스트-> 유저 클릭 -> 유저 feed 이동 -> 팔로우 버튼 -> event: isfollowing: true 생성 또는 변경 \r\n\r\n// 받아와야 하는 값 \r\n// -user id 입력-> filter -> 출력 user nickname \r\n\r\n// < style 수정사항 >\r\n// -search 검색 input 높이 조절\r\n// -항목 선택시 default 색 변경 \r\n\r\nconst RedditTextField = styled((props) => (\r\n  <TextField InputProps={{ disableUnderline: true }} {...props} />\r\n))(({ theme }) => ({\r\n  '& .MuiFilledInput-root': {\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.mode === 'light' ? '#f5f5f5' : '#f5f5f5',\r\n    transition: theme.transitions.create([\r\n      'border-color',\r\n      'background-color',\r\n      'box-shadow',\r\n    ]),\r\n    '&:hover': {\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n    '&.Mui-focused': {\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n  'label + &': {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  '& .MuiInputBase-input': {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.mode === 'light' ? '#f5f5f5' : '#f5f5f5',\r\n    fontSize: 13,\r\n    color: '#c4c0c0',\r\n    width: 'fullwidth',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create([\r\n      'border-color',\r\n      'background-color',\r\n      'box-shadow',\r\n    ]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n    },\r\n  },\r\n}));\r\n\r\nconst CssTextField = styled(TextField)({\r\n  '& label.Mui-focused': {\r\n    color: '#f5f5f5',\r\n  },\r\n  '& .MuiInput-underline:after': {\r\n    borderBottomColor: '#f5f5f5',\r\n  },\r\n  '& .MuiOutlinedInput-root': {\r\n    '& fieldset': {\r\n      borderColor: '#f5f5f5',\r\n    },\r\n    '&:hover fieldset': {\r\n      borderColor: '#f5f5f5',\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: '#f5f5f5',\r\n    },\r\n    '& .MuiFilledInput-root': {\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n  },\r\n  '& .MuiFilledInput-root': {\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: theme.palette.mode === 'light' ? '#f5f5f5' : '#f5f5f5',\r\n    transition: theme.transitions.create([\r\n      'border-color',\r\n      'background-color',\r\n      'box-shadow',\r\n    ]),\r\n    '&:hover': {\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n    '&.Mui-focused': {\r\n      backgroundColor: '#f5f5f5',\r\n    },\r\n  },\r\n});\r\n\r\nconst Data = [\r\n  { \"strUserName\": \"주영\", \"todo_id\": \"0\", \"title\": \"🥛우유마시기\" },\r\n  { \"strUserName\": \"🍈메로나\", \"todo_id\": \"1\", \"title\": \"공부하기\" },\r\n  { \"strUserName\": \"두두\", \"todo_id\": \"5\", \"title\": \"스터디카페가기\" },\r\n  { \"strUserName\": \"나야\", \"todo_id\": \"7\", \"title\": \"8시간 자기\" }\r\n]\r\n//console.log(Data);\r\n\r\nexport default function Search() {\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n    return (\r\n      <div className=\"search-search-list-wrap\" >\r\n            {/* textfield underline 색상 변경 */}\r\n            <RedditTextField\r\n              fullWidth  \r\n              hiddenLabel\r\n              size=\"small\"\r\n              \r\n              placeholder=\"email ,ID 검색\"\r\n              sx={{ boxShadow: 'none'}}  \r\n              id=\"reddit-input\"\r\n\r\n              onChange={(event) => {\r\n                setSearchTerm(event.target.value);\r\n              }}\r\n      \r\n              InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon fontSize=\"small\" className=\"search-list-icon\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n              \r\n              />\r\n            <BootstrapInput defaultValue=\"email ,ID 검색\" id=\"bootstrap-input\" >\r\n            </BootstrapInput>\r\n            <CssTextField label=\"Custom CSS\" id=\"custom-css-outlined-input\" size=\"small\" />\r\n            <TextField \r\n                fullWidth  \r\n                hiddenLabel\r\n                id=\"filled-basic\"\r\n                size=\"small\"\r\n                variant=\"filled\"\r\n                placeholder=\"email ,ID 검색\"\r\n                sx={{ boxShadow: 'none'}}    \r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n        \r\n                InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" className=\"search-list-icon\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            >\r\n            </TextField>\r\n\r\n            {Data.filter((data)=> {\r\n              if (searchTerm === \"\") {\r\n                return data\r\n              } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              } else if (data.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              }\r\n            }).map(data=>{\r\n              return(\r\n                <React.Fragment key={data.todo_id}>\r\n                  <div className=\"search-list-box\" key={data.todo_id}>\r\n                    <Button className=\"search-list-button\" id={data.todo_id} name={data.todo_id}>\r\n                        <div className=\"search-list-name\" id={data.strUserName} name={data.strUserName}>\r\n                          <p>{data.strUserName}</p>\r\n                        </div>\r\n                        <div className=\"search-list-text\" id={data.title} name={data.title}>\r\n                          <p>{data.title}</p>\r\n                        </div>\r\n                    </Button>\r\n                  </div>\r\n\r\n                </React.Fragment>\r\n               \r\n               );\r\n\r\n              })}\r\n                \r\n    \r\n      </div>\r\n    \r\n    )}"]},"metadata":{},"sourceType":"module"}