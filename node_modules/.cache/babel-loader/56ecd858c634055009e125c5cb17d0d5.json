{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button, List, ListItem } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { goalsData } from \"../atoms/todoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n  let goal = useRecoilValue(goalsData);\n  /* Hook 선언 끝 */\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"feed-wrap\",\n    sx: {\n      position: 'relative',\n      width: '75vw',\n      height: '100vh',\n      top: '0',\n      right: '0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"goals-list-box\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        className: \"goals-list-wrap\",\n        children: goal.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"goals-list\",\n            id: item.goal_id,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"goals-listItem-btn\",\n              id: item.goal_id,\n              name: item.goal_id,\n              sx: {\n                color: item.title_color\n              },\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n              className: \"goals-clickToEdit-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, item.goal_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"8cArK35pCQchaECILu70LLaCNZ0=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Feed.js"],"names":["React","useEffect","Button","List","ListItem","Box","useRecoilState","useRecoilValue","ArrowForwardIosIcon","goalsData","Feed","goal","position","width","height","top","right","map","item","idx","goal_id","color","title_color","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,QAAxB,QAAyC,eAAzC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,SAASC,SAAT,QAA0B,mBAA1B;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAG9B;;AAEE;AAEG,MAAIC,IAAI,GAAGJ,cAAc,CAACE,SAAD,CAAzB;AAGJ;;AAME,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAE;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,KAAK,EAAE,MAA/B;AAAuCC,MAAAA,MAAM,EAAE,OAA/C;AAAwDC,MAAAA,GAAG,EAAE,GAA7D;AAAkEC,MAAAA,KAAK,EAAE;AAAzE,KAA/B;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA,kBAEIL,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,8BAAS,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC,YAApB;AAAiC,YAAA,EAAE,EAAED,IAAI,CAACE,OAA1C;AAAA,oCACG,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,oBAAlB;AAAuC,cAAA,EAAE,EAAEF,IAAI,CAACE,OAAhD;AAAyD,cAAA,IAAI,EAAEF,IAAI,CAACE,OAApE;AAA6E,cAAA,EAAE,EAAE;AAAEC,gBAAAA,KAAK,EAACH,IAAI,CAACI;AAAb,eAAjF;AAAA,wBAAgHJ,IAAI,CAACK;AAArH;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG,QAAC,mBAAD;AAAqB,cAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFH;AAAA,aAAwDL,IAAI,CAACE,OAA7D;AAAA;AAAA;AAAA;AAAA,kBAAT;AAKK,SANL;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAnCuBV,I;UAOPH,c;;;KAPOG,I","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {  Button, List, ListItem  } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nimport { goalsData } from \"../atoms/todoData\";\r\n\r\n\r\nexport default function Feed() {\r\n\r\n\r\n /* Hook 선언 시작 */\r\n\r\n   /* atom 시작 */\r\n\r\n      let goal = useRecoilValue(goalsData);\r\n\r\n\r\n  /* Hook 선언 끝 */\r\n\r\n      \r\n\r\n\r\n\r\n    return (\r\n        <Box className='feed-wrap' sx={{ position: 'relative', width: '75vw', height: '100vh', top: '0', right: '0' }}>\r\n        <p>feed</p>\r\n        <Box className=\"goals-list-box\">\r\n            <List className=\"goals-list-wrap\" >\r\n                {\r\n                goal.map((item, idx) => {\r\n                return ( <ListItem className=\"goals-list\" id={item.goal_id} key={item.goal_id} > \r\n                            <Button className=\"goals-listItem-btn\" id={item.goal_id} name={item.goal_id} sx={{ color:item.title_color }}  >{item.title}</Button >\r\n                            <ArrowForwardIosIcon className=\"goals-clickToEdit-btn\"/>\r\n                        </ListItem>\r\n                        );\r\n                    })\r\n                }\r\n            </List>\r\n        </Box>\r\n\r\n        </Box>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}