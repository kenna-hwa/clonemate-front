{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\main\\\\Feed.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport CalendarPicker from '@mui/lab/CalendarPicker';\nimport { ko } from \"date-fns/locale\";\nimport { Button, List, ListItem, ListItemText, Modal } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport '../../stylesheets/Feed.css';\nimport { objTodosDataResult, goalsData, todoData, datesData, selectedNewDate } from \"../../atoms/todoData\";\nimport { blue } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n  let dateData = useRecoilValue(datesData); // atom에서 goal+todo 데이터 가져오기\n\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\n  let todoDataArray = [...dtTodos]; //날짜 관련\n\n  let dtToday = dateData.dtToday;\n  let dtTomorrow = dateData.dtTomorrow; //모달, 캘린더 on/off 정보\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [calendarOpen, setCalendarOpen] = useState(false); //목표 클릭 여부 확인 배열 생성\n\n  let [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false));\n  let [readOnly, setReadOnly] = useState(true); // console.log(\"todoReadOnly\", readOnly)\n  //선택한 todo의 정보 저장\n\n  let [selectedTodoData, setSelectedTodoData] = useState({});\n  let [selectedInputIndex, setSelectedInputIndex] = useState(\"\");\n  let history = useHistory();\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  //목표 클릭 시 새로운 투두 작성 이벤트 핸들러\n\n  const clickCreateTodoHandler = e => {\n    const index = e.currentTarget.dataset.index;\n    const newArr = Array(todoDataArray.length).fill(false);\n    newArr[index] = true;\n    setIsGoalSelected(newArr);\n  };\n  /* 모달 on off 관련 */\n  //투두 클릭 시 모달 등장 이벤트 핸들러\n\n\n  const clickTodoModalHandler = e => {\n    if (readOnly === false) return false;\n    const goal_index = e.currentTarget.dataset.goalid - 1;\n    const todo_index = e.currentTarget.dataset.todoid - 1; //모달열기 -> selectedTodoData에 클릭한 todo 정보 넣기 -> todo index 전달하기\n\n    console.log(e.currentTarget.dataset);\n    handleTodoModalOpen();\n    setSelectedTodoData(todoDataArray[goal_index].todos[todo_index]);\n    setSelectedInputIndex(todo_index);\n  }; // 투두 클릭시 모달 노출 on off\n\n\n  const handleTodoModalOpen = () => setModalOpen(true);\n\n  const handleTodoModalClose = () => setModalOpen(false); // 투두 클릭시 캘린더 노출 on off\n\n\n  const handleCalendarModalOpen = () => setCalendarOpen(true);\n\n  const handleCalendarModalClose = () => setCalendarOpen(false);\n  /* 투두 수정 이벤트 관련 함수 */\n  //엔터키 인식 readonly 변경\n\n\n  const enterKeyEventHandler = e => {\n    if (e.key === 'Enter') {\n      inputLostFocusEventHandler();\n    }\n  }; //외부 클릭 readonly 변경\n\n\n  const inputLostFocusEventHandler = e => {\n    setReadOnly(true);\n  }; //투두 수정 버튼 클릭 이벤트 핸들러\n\n\n  const clickTodoEditHandler = e => {\n    readOnly === false ? setReadOnly(true) : setReadOnly(false);\n    handleTodoModalClose();\n  }; //투두 input onchange 이벤트\n  // 방법 1 인덱스 사용\n  // const onChangetodoEditEventHandler = (e) => {\n  //     console.log(\"입력 정보 \", e.currentTarget.value)\n  //     const goal_index = e.currentTarget.dataset.goalid-1;\n  //     const todo_index = e.currentTarget.dataset.todoid-1;\n  //     let current_value = e.currentTarget.value;\n  //     const copy_todoDataArray = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray의 todo State 원본 카피\n  //     copy_todoDataArray[goal_index].todos[todo_index].title = current_value;\n  //     setDtTodos(copy_todoDataArray) ;//setDtTodos 이용해 state 변경\n  // }\n  // 방법 2 map 에 이중 조건문 사용\n\n\n  const onChangetodoEditEventHandler = e => {\n    // console.log(\"입력 정보 \", e.currentTarget.value)\n    const goal_id = parseInt(e.currentTarget.dataset.goalid);\n    const todo_id = parseInt(e.currentTarget.dataset.todoid);\n    let current_value = e.currentTarget.value;\n    const copy_todoDataArray = JSON.parse(JSON.stringify(todoDataArray));\n    copy_todoDataArray.map(data => {\n      data.todos.map(todo => {\n        if (todo.goalId === goal_id) {\n          if (todo.todoId === todo_id) {\n            todo.title = current_value;\n            console.log(\"todo, \", todo.title);\n          }\n        }\n      });\n    });\n    setDtTodos(copy_todoDataArray); //setDtTodos 이용해 state 변경\n  }; //투두 체크박스 클릭 이벤트 핸들러\n\n\n  const todoCheckBoxEventHandler = e => {\n    e.stopPropagation();\n    let index = parseInt(e.currentTarget.dataset.index);\n    console.log(\"check click\", e.target.dataset.index);\n    const originTodo = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray State 원본 카피\n    // console.log(\"originTodo\", originTodo)\n\n    if (originTodo[index].check_yn === 'Y') {\n      originTodo[index].check_yn = 'N';\n    } else {\n      originTodo[index].check_yn = 'Y';\n    }\n\n    ;\n    setDtTodos(originTodo); //setOriginTodo를 이용해 state 변경\n  }; //투두 내일 하기 이벤트 핸들러 \n\n\n  const todoDelayNextDayEventHandler = e => {\n    console.log(e.currentTarget);\n    let index = parseInt(e.currentTarget.dataset.index);\n    console.log(index);\n    const originTodo = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray State 원본 카피\n\n    originTodo[index].date = dtTomorrow;\n    originTodo[index].end_repeat_date = dtTomorrow;\n    setDtTodos(originTodo); //setOriginTodo를 이용해 state 변경\n\n    handleTodoModalClose();\n  }; //투두 날짜 바꾸기 이벤트 핸들러\n\n\n  const todoChangeDateEventHandler = e => {\n    let dtNewDate = e.currentTarget.dataset.day;\n    let index = parseInt(e.currentTarget.dataset.index);\n    const originTodo = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray State 원본 카피\n\n    originTodo[index].date = dtNewDate;\n    originTodo[index].end_repeat_date = dtNewDate;\n    setDtTodos(originTodo); //setOriginTodo를 이용해 state 변경\n\n    handleTodoModalClose();\n    handleCalendarModalClose();\n  }; //투두 삭제 이벤트 핸들러 -> 나중에는 삭제가 아니라 바로 ajax로 Delete 메소드 던지는게 빠르지 않을까욧\n\n\n  const clickTodoDeleteHandler = e => {\n    console.log(\"현재 인덱스 \", e.currentTarget.dataset.index);\n    let index = parseInt(e.currentTarget.dataset.index);\n    const originTodo = [...todoDataArray]; // todoDataArray State 원본 카피\n    // console.log(\"originTodo\",originTodo)\n\n    originTodo.splice(index, 1); //원본 todoDataArray 배열에서 해당 index 찾아서 1개 삭제\n\n    setDtTodos(originTodo); //setOriginTodo를 이용해 state 변경\n\n    handleTodoModalClose();\n  };\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"feed-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"feed-title\",\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"feed-goals-list-box\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          className: \"goals-list-wrap\",\n          children: todoDataArray.map((data, idx) => {\n            // console.log(\"Data\", data)\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"goals-listItem\",\n              id: data.goalOrderNo,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"goals-listItem-text-wrap\",\n                isselected: isGoalSelected[idx],\n                id: data.goal_id,\n                onClick: e => {\n                  clickCreateTodoHandler(e);\n                },\n                \"data-index\": idx,\n                children: [/*#__PURE__*/_jsxDEV(LibraryBooksIcon, {\n                  className: \"goals-listItem-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  className: \"goals-listItem-text\",\n                  id: data.goalOrderNo,\n                  name: data.goalOrderNo,\n                  sx: {\n                    color: data.goalTitleColor\n                  },\n                  children: data.goalTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  className: \"goals-listItem-add-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 80\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 25\n              }, this), data.todos.map((todo, index) => {\n                // {console.log(\"todo\", todo)}\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"goals-todo-input-list-Box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"goals-todo-input-list-check-wrap\",\n                    children: [todo.checkYn === 'Y' ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n                      className: \"goals-todo-list-input-check-icon\",\n                      onClick: todoCheckBoxEventHandler,\n                      \"data-todoid\": todo.todoId,\n                      style: {\n                        color: data.goalTitleColor\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 58\n                    }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n                      className: \"goals-todo-list-input-check-icon\",\n                      onClick: todoCheckBoxEventHandler,\n                      \"data-index\": todo.todoId,\n                      style: {\n                        color: data.goalTitleColor\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"todo-input\",\n                      className: \"goals-todo-list-input\",\n                      type: \"text\",\n                      name: todo.title,\n                      \"data-index\": index,\n                      \"data-goalid\": todo.goalId,\n                      \"data-todoid\": todo.todoId,\n                      value: todo.title,\n                      onClick: clickTodoModalHandler,\n                      onChange: onChangetodoEditEventHandler,\n                      onKeyDown: enterKeyEventHandler,\n                      onBlur: inputLostFocusEventHandler,\n                      readOnly: readOnly\n                    }, `todo${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"goals-todo-list-input-btn\",\n                    children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n                      className: \"goals-todo-list-input-btn-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 80\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 33\n                }, this);\n              }), isGoalSelected[idx] ? /*#__PURE__*/_jsxDEV(CreateInput, {\n                id: idx,\n                isGoalSelected: isGoalSelected,\n                setIsGoalSelected: setIsGoalSelected,\n                dtToday: dtToday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 48\n              }, this) : null]\n            }, data.goalOrderNo, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 30\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"feed-move-to-routines\",\n        title: \"\\uAE30\\uAC04\\uC774 \\uC788\\uB294 \\uD560 \\uC77C \\uC791\\uC131\\uD558\\uAE30\",\n        onClick: () => {\n          history.push(\"/routines\");\n        },\n        children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 121\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoModal, {\n      modalOpen: modalOpen,\n      handleTodoModalClose: handleTodoModalClose,\n      selectedTodoData: selectedTodoData,\n      clickTodoEditHandler: clickTodoEditHandler,\n      clickTodoDeleteHandler: clickTodoDeleteHandler,\n      selectedInputIndex: selectedInputIndex,\n      todoDelayNextDayEventHandler: todoDelayNextDayEventHandler,\n      calendarOpen: calendarOpen,\n      handleCalendarModalOpen: handleCalendarModalOpen,\n      handleCalendarModalClose: handleCalendarModalClose,\n      todoChangeDateEventHandler: todoChangeDateEventHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n} // input 생성\n\n_s(Feed, \"MEBJrwdlfbJyHXiPBUGgGr0WyIQ=\", false, function () {\n  return [useRecoilValue, useRecoilState, useHistory];\n});\n\n_c = Feed;\nexport function CreateInput(props) {\n  _s2();\n\n  let id = props.id;\n  const dtToday = props.dtToday;\n  const isGoalSelected = props.isGoalSelected;\n  const setIsGoalSelected = props.setIsGoalSelected;\n  /* Hook 선언 시작 */\n\n  /* atom 시작 */\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm({\n    mode: \"onChange\"\n  });\n  let [todoDataArray, setTodo] = useRecoilState(todoData);\n  let [createTodoState, setCreactTodoState] = useState({\n    \"todo_id\": \"\",\n    \"goal_id\": \"\",\n    //묶여있는 goal id\n    \"next_todo_id\": \"\",\n    //다음 todoDataArray id (순서지정용)\n    \"title\": \"\",\n    \"date\": \"\",\n    \"end_repeat_date\": \"\",\n    //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\n    \"repeat_days\": {\n      \"sun\": \"N\",\n      //y 면 일요일 반복, n 이면 반복 x\n      \"mon\": \"N\",\n      \"tue\": \"N\",\n      \"wed\": \"N\",\n      \"thu\": \"N\",\n      \"fri\": \"N\",\n      \"sat\": \"N\"\n    },\n    \"check_yn\": \"N\" //달성여부\n\n  });\n  let createInput = useRef();\n  useEffect(() => {\n    const inputElement = createInput.current;\n    inputElement.focus();\n  }, []);\n  /* Hook 선언 끝 */\n\n  /* 함수 선언 시작 */\n  //input 함수\n\n  const onChangeTitleEventHandler = e => {\n    setCreactTodoState({ ...createTodoState,\n      title: e.target.value\n    }); // console.log(createTodoState)\n  }; //todoDataArray 추가 함수\n\n\n  const addTodo = (data, id) => {\n    const copy_todo_state = [...todoDataArray]; //추가되는 state 'todo_id', 'goal_id', 'next_todo_id', 'date', 'end_repeat_date'\n    // 'repeat_days'와 'check_yn'은 default 값 \"N\" , \n\n    data.todo_id = copy_todo_state.length;\n    data.goal_id = parseInt(id); //key를 위한 id 추가\n\n    data.next_todo_id = copy_todo_state.length + 1;\n    data.date = dtToday;\n    data.end_repeat_date = dtToday;\n    copy_todo_state.push(data);\n    setTodo(copy_todo_state, console.log(copy_todo_state));\n  };\n\n  const onSubmit = data => {\n    const index = data.goal_id;\n    const newArr = [...isGoalSelected];\n    setIsGoalSelected(newArr[index] = false);\n    setCreactTodoState(JSON.stringify(createTodoState));\n    addTodo(createTodoState, index);\n  };\n\n  const onError = error => {\n    console.log(error);\n  };\n  /* 함수 선언 끝 */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"goals-todo-input-create-Box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit, onError),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-todo-input-create-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n          className: \"goals-todo-input-create-check-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"title\"),\n          ref: createInput,\n          id: \"todo-input\",\n          className: \"goals-todo-input-create-field\",\n          placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          type: \"text\",\n          maxLength: \"35\",\n          onChange: onChangeTitleEventHandler,\n          onBlur: handleSubmit(onSubmit, onError)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"goal_id\"),\n          id: \"todo-goal-id-input\",\n          className: \"todo-goal-create-id\",\n          type: \"hidden\",\n          value: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"goals-todo-input-btn\",\n          children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n            className: \"goals-todo-list-input-btn-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(CreateInput, \"vcIcHw3j/avzduKYNKs3R7C36kU=\", false, function () {\n  return [useForm, useRecoilState];\n});\n\n_c2 = CreateInput;\nexport function TodoModal(props) {\n  const modalOpen = props.modalOpen;\n  const handleTodoModalClose = props.handleTodoModalClose;\n  const selectedTodoData = props.selectedTodoData;\n  const clickTodoEditHandler = props.clickTodoEditHandler;\n  const selectedInputIndex = props.selectedInputIndex;\n  const clickTodoDeleteHandler = props.clickTodoDeleteHandler;\n  const todoDelayNextDayEventHandler = props.todoDelayNextDayEventHandler;\n  const calendarOpen = props.calendarOpen;\n  const handleCalendarModalOpen = props.handleCalendarModalOpen;\n  const handleCalendarModalClose = props.handleCalendarModalClose;\n  const todoChangeDateEventHandler = props.todoChangeDateEventHandler;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DatePickerCalender, {\n      calendarOpen: calendarOpen,\n      handleCalendarModalOpen: handleCalendarModalOpen,\n      selectedInputIndex: selectedInputIndex,\n      handleCalendarModalClose: handleCalendarModalClose,\n      handleTodoModalClose: handleTodoModalClose,\n      todoChangeDateEventHandler: todoChangeDateEventHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleTodoModalClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      className: \"feed-todo-modal-box\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"feed-todo-modal-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feed-todo-modal-head\",\n          children: selectedTodoData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"feed-todo-modal-icon-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feed-todo-edit-icon\",\n            \"data-index\": selectedInputIndex,\n            onClick: clickTodoEditHandler,\n            children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n              className: \"feed-modal-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 125\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 165\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feed-todo-delay-icon\",\n            \"data-index\": selectedInputIndex,\n            onClick: todoDelayNextDayEventHandler,\n            children: [/*#__PURE__*/_jsxDEV(SkipNextIcon, {\n              className: \"feed-modal-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 134\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB0B4\\uC77C \\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 178\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feed-todo-date-change-icon\",\n            \"data-index\": selectedInputIndex,\n            children: [/*#__PURE__*/_jsxDEV(SyncAltIcon, {\n              className: \"feed-modal-icon\",\n              onClick: handleCalendarModalOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 101\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB0A0\\uC9DC \\uBC14\\uAFB8\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 178\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feed-todo-order-change-icon\",\n            \"data-index\": selectedInputIndex,\n            children: [/*#__PURE__*/_jsxDEV(WrapTextIcon, {\n              className: \"feed-modal-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 102\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC21C\\uC11C \\uBCC0\\uACBD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 146\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feed-todo-delete-icon\",\n            \"data-index\": selectedInputIndex,\n            onClick: clickTodoDeleteHandler,\n            children: [/*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {\n              className: \"feed-modal-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 130\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 179\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c3 = TodoModal;\nexport function DatePickerCalender(props) {\n  _s3();\n\n  const selectedInputIndex = props.selectedInputIndex;\n  const [selectedNewDate, setSelectedNewDate] = useState(new Date());\n  const week = new Array('일', '월', '화', '수', '목', '금', '토');\n  const calendarOpen = props.calendarOpen;\n  const handleCalendarModalClose = props.handleCalendarModalClose;\n  const handleTodoModalClose = props.handleTodoModalClose;\n  const todoChangeDateEventHandler = props.todoChangeDateEventHandler;\n  const selectedDate = selectedNewDate.toJSON().substring(0, 10);\n  let selectedYear = selectedNewDate.getFullYear();\n  let selectedMonth = selectedNewDate.getMonth() + 1;\n  let selectedDay = selectedNewDate.getDate();\n  let selectedLabel = selectedNewDate.getDay();\n  let todayLabel = week[selectedLabel];\n  useEffect(() => {\n    handleTodoModalClose();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: calendarOpen,\n    onClose: handleCalendarModalClose,\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    className: \"todo-modal-datePicker-wrap\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: \"todo-modal-datePicker-box\",\n      children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        locale: ko,\n        dateAdapter: AdapterDateFns,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-modal-datePicker-box-title-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC120\\uD0DD\\uD55C \\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedYear + `년 ` + selectedMonth + `월 ` + selectedDay + `일 ` + todayLabel + `요일`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CalendarPicker, {\n          className: \"todo-modal-datePicker\",\n          date: selectedNewDate,\n          onChange: newDate => setSelectedNewDate(newDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-modal-datePicker-btn-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"todo-modal-datePicker-btn\",\n            \"data-index\": selectedInputIndex,\n            \"data-day\": selectedDate,\n            onClick: todoChangeDateEventHandler,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            className: \"todo-modal-datePicker-btn\",\n            onClick: handleCalendarModalClose,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 168\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(DatePickerCalender, \"EV7ifr9wjI2ZWS5rrdrmLJlTNLQ=\");\n\n_c4 = DatePickerCalender;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Feed\");\n$RefreshReg$(_c2, \"CreateInput\");\n$RefreshReg$(_c3, \"TodoModal\");\n$RefreshReg$(_c4, \"DatePickerCalender\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/main/Feed.js"],"names":["React","useEffect","useState","useRef","useRecoilState","useRecoilValue","useHistory","useForm","AdapterDateFns","LocalizationProvider","CalendarPicker","ko","Button","List","ListItem","ListItemText","Modal","Box","LibraryBooksIcon","MoreHorizIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","EditIcon","SkipNextIcon","SyncAltIcon","WrapTextIcon","DeleteOutlineIcon","BorderColorIcon","objTodosDataResult","goalsData","todoData","datesData","selectedNewDate","blue","Feed","dateData","dtTodos","setDtTodos","todoDataArray","dtToday","dtTomorrow","modalOpen","setModalOpen","calendarOpen","setCalendarOpen","isGoalSelected","setIsGoalSelected","Array","length","fill","readOnly","setReadOnly","selectedTodoData","setSelectedTodoData","selectedInputIndex","setSelectedInputIndex","history","clickCreateTodoHandler","e","index","currentTarget","dataset","newArr","clickTodoModalHandler","goal_index","goalid","todo_index","todoid","console","log","handleTodoModalOpen","todos","handleTodoModalClose","handleCalendarModalOpen","handleCalendarModalClose","enterKeyEventHandler","key","inputLostFocusEventHandler","clickTodoEditHandler","onChangetodoEditEventHandler","goal_id","parseInt","todo_id","current_value","value","copy_todoDataArray","JSON","parse","stringify","map","data","todo","goalId","todoId","title","todoCheckBoxEventHandler","stopPropagation","target","originTodo","check_yn","todoDelayNextDayEventHandler","date","end_repeat_date","todoChangeDateEventHandler","dtNewDate","day","clickTodoDeleteHandler","splice","idx","goalOrderNo","color","goalTitleColor","goalTitle","checkYn","push","CreateInput","props","id","register","handleSubmit","errors","watch","mode","setTodo","createTodoState","setCreactTodoState","createInput","inputElement","current","focus","onChangeTitleEventHandler","addTodo","copy_todo_state","next_todo_id","onSubmit","onError","error","TodoModal","DatePickerCalender","setSelectedNewDate","Date","week","selectedDate","toJSON","substring","selectedYear","getFullYear","selectedMonth","getMonth","selectedDay","getDate","selectedLabel","getDay","todayLabel","newDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport { ko } from \"date-fns/locale\";\r\n\r\n\r\nimport {  Button, List, ListItem, ListItemText, Modal, } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport WrapTextIcon from '@material-ui/icons/WrapText';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\nimport '../../stylesheets/Feed.css'\r\nimport { objTodosDataResult, goalsData, todoData, datesData, selectedNewDate } from \"../../atoms/todoData\";\r\nimport { blue } from \"@mui/material/colors\";\r\n\r\n\r\nexport default function Feed() {\r\n\r\n\r\n/* Hook 선언 시작 */\r\n\r\n/* atom 시작 */\r\n\r\n    let dateData = useRecoilValue(datesData);\r\n\r\n    // atom에서 goal+todo 데이터 가져오기\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = [...dtTodos];\r\n\r\n\r\n    //날짜 관련\r\n    let dtToday = dateData.dtToday;\r\n    let dtTomorrow = dateData.dtTomorrow;\r\n\r\n\r\n    //모달, 캘린더 on/off 정보\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [calendarOpen, setCalendarOpen] = useState(false);\r\n\r\n    //목표 클릭 여부 확인 배열 생성\r\n    let [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false) );\r\n\r\n    let [readOnly, setReadOnly] = useState(true);\r\n    // console.log(\"todoReadOnly\", readOnly)\r\n\r\n    //선택한 todo의 정보 저장\r\n    let [selectedTodoData, setSelectedTodoData] = useState({});\r\n    let [selectedInputIndex, setSelectedInputIndex] = useState(\"\");\r\n\r\n\r\n    let history = useHistory();\r\n\r\n/* Hook 선언 끝 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n//목표 클릭 시 새로운 투두 작성 이벤트 핸들러\r\nconst clickCreateTodoHandler = (e) => {\r\n    const index = e.currentTarget.dataset.index;\r\n    const newArr = Array(todoDataArray.length).fill(false) ;\r\n    newArr[index] = true;\r\n    setIsGoalSelected(newArr)\r\n}\r\n\r\n/* 모달 on off 관련 */\r\n\r\n//투두 클릭 시 모달 등장 이벤트 핸들러\r\nconst clickTodoModalHandler = (e) => {\r\n    if(readOnly === false) return false;\r\n    \r\n    const goal_index = e.currentTarget.dataset.goalid-1;\r\n    const todo_index = e.currentTarget.dataset.todoid-1;\r\n\r\n    //모달열기 -> selectedTodoData에 클릭한 todo 정보 넣기 -> todo index 전달하기\r\n    console.log(e.currentTarget.dataset)\r\n\r\n    handleTodoModalOpen()\r\n    setSelectedTodoData(todoDataArray[goal_index].todos[todo_index])\r\n    setSelectedInputIndex(todo_index);\r\n}\r\n\r\n// 투두 클릭시 모달 노출 on off\r\nconst handleTodoModalOpen = () => setModalOpen(true);\r\nconst handleTodoModalClose = () => setModalOpen(false);\r\n\r\n// 투두 클릭시 캘린더 노출 on off\r\nconst handleCalendarModalOpen = () => setCalendarOpen(true);\r\nconst handleCalendarModalClose = () => setCalendarOpen(false);\r\n\r\n\r\n\r\n/* 투두 수정 이벤트 관련 함수 */\r\n\r\n//엔터키 인식 readonly 변경\r\nconst enterKeyEventHandler = (e) => {\r\n    if(e.key === 'Enter'){ \r\n        inputLostFocusEventHandler()\r\n     }\r\n}\r\n\r\n//외부 클릭 readonly 변경\r\nconst inputLostFocusEventHandler = (e) => {\r\n    setReadOnly(true)\r\n}\r\n\r\n//투두 수정 버튼 클릭 이벤트 핸들러\r\nconst clickTodoEditHandler = (e) => {\r\n    readOnly === false ? setReadOnly(true) : setReadOnly(false);\r\n    handleTodoModalClose();\r\n}\r\n\r\n//투두 input onchange 이벤트\r\n// 방법 1 인덱스 사용\r\n// const onChangetodoEditEventHandler = (e) => {\r\n//     console.log(\"입력 정보 \", e.currentTarget.value)\r\n//     const goal_index = e.currentTarget.dataset.goalid-1;\r\n//     const todo_index = e.currentTarget.dataset.todoid-1;\r\n\r\n//     let current_value = e.currentTarget.value;\r\n//     const copy_todoDataArray = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray의 todo State 원본 카피\r\n\r\n//     copy_todoDataArray[goal_index].todos[todo_index].title = current_value;\r\n//     setDtTodos(copy_todoDataArray) ;//setDtTodos 이용해 state 변경\r\n// }\r\n\r\n\r\n// 방법 2 map 에 이중 조건문 사용\r\n\r\nconst onChangetodoEditEventHandler = (e) => {\r\n    // console.log(\"입력 정보 \", e.currentTarget.value)\r\n\r\n    const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n    const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n\r\n\r\n    let current_value = e.currentTarget.value;\r\n    const copy_todoDataArray = JSON.parse(JSON.stringify(todoDataArray));\r\n\r\n    copy_todoDataArray.map((data)=>{\r\n        data.todos.map((todo)=>{\r\n            if(todo.goalId === goal_id){\r\n                    if(todo.todoId === todo_id){\r\n                        todo.title = current_value;\r\n                        console.log(\"todo, \" , todo.title)\r\n                    }\r\n            }\r\n        })\r\n    })\r\n    setDtTodos(copy_todoDataArray) ;//setDtTodos 이용해 state 변경\r\n}\r\n\r\n//투두 체크박스 클릭 이벤트 핸들러\r\nconst todoCheckBoxEventHandler = (e) => {\r\n    e.stopPropagation(); \r\n    let index = parseInt(e.currentTarget.dataset.index);\r\n    console.log(\"check click\" , e.target.dataset.index)\r\n    const originTodo = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray State 원본 카피\r\n    // console.log(\"originTodo\", originTodo)\r\n    if(originTodo[index].check_yn === 'Y'){\r\n        originTodo[index].check_yn = 'N'\r\n    } else {\r\n        originTodo[index].check_yn = 'Y'\r\n    };\r\n    setDtTodos(originTodo) ;//setOriginTodo를 이용해 state 변경\r\n}\r\n\r\n//투두 내일 하기 이벤트 핸들러 \r\nconst todoDelayNextDayEventHandler = (e) => {\r\n    console.log(e.currentTarget)\r\n    let index = parseInt(e.currentTarget.dataset.index);\r\n    console.log(index)\r\n    const originTodo = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray State 원본 카피\r\n    originTodo[index].date = dtTomorrow;\r\n    originTodo[index].end_repeat_date = dtTomorrow;\r\n    setDtTodos(originTodo) ;//setOriginTodo를 이용해 state 변경\r\n    handleTodoModalClose();\r\n}\r\n\r\n//투두 날짜 바꾸기 이벤트 핸들러\r\nconst todoChangeDateEventHandler = (e) => {\r\n    let dtNewDate = e.currentTarget.dataset.day;\r\n    let index = parseInt(e.currentTarget.dataset.index);\r\n    const originTodo = JSON.parse(JSON.stringify(todoDataArray)); // todoDataArray State 원본 카피\r\n    originTodo[index].date = dtNewDate;\r\n    originTodo[index].end_repeat_date = dtNewDate;\r\n    setDtTodos(originTodo) ;//setOriginTodo를 이용해 state 변경\r\n    handleTodoModalClose();\r\n    handleCalendarModalClose();\r\n}\r\n\r\n//투두 삭제 이벤트 핸들러 -> 나중에는 삭제가 아니라 바로 ajax로 Delete 메소드 던지는게 빠르지 않을까욧\r\nconst clickTodoDeleteHandler = (e) => {\r\n    console.log(\"현재 인덱스 \", e.currentTarget.dataset.index)\r\n    let index = parseInt(e.currentTarget.dataset.index);\r\n    const originTodo = [...todoDataArray]; // todoDataArray State 원본 카피\r\n    // console.log(\"originTodo\",originTodo)\r\n    originTodo.splice(index, 1) //원본 todoDataArray 배열에서 해당 index 찾아서 1개 삭제\r\n    setDtTodos(originTodo) ;//setOriginTodo를 이용해 state 변경\r\n    handleTodoModalClose();\r\n}\r\n\r\n/* 함수 선언 끝 */\r\n\r\n    return (<>\r\n        \r\n        <Box className='feed-box'>\r\n        <h2 className=\"feed-title\">Feed</h2>\r\n            <Box className=\"feed-goals-list-box\">\r\n                <List className=\"goals-list-wrap\" >\r\n                    {\r\n                    todoDataArray.map((data, idx) => {\r\n                        // console.log(\"Data\", data)\r\n\r\n                    return ( <ListItem className=\"goals-listItem\" id={data.goalOrderNo} key={data.goalOrderNo} > \r\n                        <Button className=\"goals-listItem-text-wrap\" isselected={isGoalSelected[idx]} id={data.goal_id} onClick={(e)=>{(clickCreateTodoHandler(e))}} data-index={idx} >\r\n                        <LibraryBooksIcon className=\"goals-listItem-icon\" />\r\n                                <ListItemText className=\"goals-listItem-text\" id={data.goalOrderNo} name={data.goalOrderNo} sx={{ color:data.goalTitleColor }}  >{data.goalTitle}</ListItemText>\r\n                            <ListItemText className=\"goals-listItem-add-icon\" ><span>+</span></ListItemText>\r\n                        </Button>\r\n\r\n                        {data.todos.map((todo,index)=>{\r\n                            // {console.log(\"todo\", todo)}\r\n                            return (\r\n                                <Box className=\"goals-todo-input-list-Box\" key={index}>\r\n                              \r\n                                <div className=\"goals-todo-input-list-check-wrap\"\r\n                                >\r\n                                {todo.checkYn === 'Y' ?  <CheckBoxIcon className=\"goals-todo-list-input-check-icon\" onClick={todoCheckBoxEventHandler} data-todoid={todo.todoId} \r\n                                style={{ color: data.goalTitleColor }}\r\n                                /> : \r\n                                <CheckBoxOutlineBlankIcon className=\"goals-todo-list-input-check-icon\" \r\n                                onClick={todoCheckBoxEventHandler} data-index={todo.todoId} \r\n                                style={{ color: data.goalTitleColor }}\r\n                                /> }\r\n                                    <input key={`todo${index}`} id=\"todo-input\" className=\"goals-todo-list-input\"type=\"text\" \r\n                                    name={todo.title} \r\n                                    data-index={index}\r\n                                    data-goalid={todo.goalId} \r\n                                    data-todoid={todo.todoId} \r\n                                    value={todo.title} \r\n                                    onClick={clickTodoModalHandler} \r\n                                    onChange={onChangetodoEditEventHandler} onKeyDown={enterKeyEventHandler} \r\n                                    onBlur={inputLostFocusEventHandler}  \r\n                                    readOnly={readOnly} \r\n                                    />\r\n                                    \r\n                                </div>\r\n                                <Button className=\"goals-todo-list-input-btn\" ><MoreHorizIcon className=\"goals-todo-list-input-btn-icon\" /></Button>\r\n                               \r\n                                </Box>\r\n                            )\r\n                        })}\r\n                        {isGoalSelected[idx] ? <CreateInput id={idx} isGoalSelected={isGoalSelected} setIsGoalSelected={setIsGoalSelected} dtToday={dtToday} />: null}\r\n                    </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n\r\n                </List>\r\n            </Box>\r\n            <button className=\"feed-move-to-routines\" title=\"기간이 있는 할 일 작성하기\" onClick={()=>{history.push(\"/routines\")}}><BorderColorIcon /></button>\r\n        </Box>\r\n\r\n        {/* 모달 생성 */}\r\n        <TodoModal modalOpen={modalOpen} handleTodoModalClose={handleTodoModalClose} selectedTodoData={selectedTodoData} clickTodoEditHandler={clickTodoEditHandler} clickTodoDeleteHandler={clickTodoDeleteHandler} selectedInputIndex={selectedInputIndex} todoDelayNextDayEventHandler={todoDelayNextDayEventHandler} calendarOpen={calendarOpen} handleCalendarModalOpen={handleCalendarModalOpen} handleCalendarModalClose={handleCalendarModalClose} todoChangeDateEventHandler={todoChangeDateEventHandler} />\r\n        </>\r\n    );\r\n}\r\n\r\n// input 생성\r\nexport function CreateInput(props) {\r\n\r\n\r\n    let id = props.id;\r\n    const dtToday = props.dtToday;\r\n    const isGoalSelected = props.isGoalSelected;\r\n    const setIsGoalSelected = props.setIsGoalSelected;\r\n\r\n    /* Hook 선언 시작 */\r\n\r\n    /* atom 시작 */\r\n    const { register, handleSubmit, errors, watch } = useForm({ mode: \"onChange\" });\r\n    let [todoDataArray, setTodo] = useRecoilState(todoData);\r\n    let [createTodoState, setCreactTodoState] = useState({\r\n        \"todo_id\": \"\",\r\n        \"goal_id\": \"\", //묶여있는 goal id\r\n        \"next_todo_id\": \"\", //다음 todoDataArray id (순서지정용)\r\n        \"title\": \"\",\r\n        \"date\": \"\",\r\n        \"end_repeat_date\": \"\", //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n        \"repeat_days\": {\r\n            \"sun\": \"N\", //y 면 일요일 반복, n 이면 반복 x\r\n            \"mon\": \"N\",\r\n            \"tue\": \"N\",\r\n            \"wed\": \"N\",\r\n            \"thu\": \"N\",\r\n            \"fri\": \"N\",\r\n            \"sat\": \"N\",\r\n        },\r\n        \"check_yn\" : \"N\" //달성여부\r\n      });\r\n\r\n    let createInput = useRef();\r\n\r\n    useEffect(() => {\r\n        const inputElement = createInput.current;\r\n        inputElement.focus();\r\n      }, []);\r\n    /* Hook 선언 끝 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //input 함수\r\n    const onChangeTitleEventHandler = (e) => {\r\n        setCreactTodoState({...createTodoState, title: e.target.value})\r\n        // console.log(createTodoState)\r\n    }\r\n    \r\n    //todoDataArray 추가 함수\r\n    const addTodo = (data, id) => {\r\n        const copy_todo_state = [...todoDataArray];\r\n        //추가되는 state 'todo_id', 'goal_id', 'next_todo_id', 'date', 'end_repeat_date'\r\n        // 'repeat_days'와 'check_yn'은 default 값 \"N\" , \r\n        data.todo_id = copy_todo_state.length;\r\n        data.goal_id = parseInt(id); //key를 위한 id 추가\r\n        data.next_todo_id = copy_todo_state.length+1;\r\n        data.date = dtToday;\r\n        data.end_repeat_date = dtToday;\r\n        copy_todo_state.push(data);\r\n        setTodo(copy_todo_state, console.log(copy_todo_state))\r\n    }\r\n\r\n    const onSubmit =  (data) => { \r\n        const index = data.goal_id\r\n        const newArr = [...isGoalSelected];\r\n        setIsGoalSelected(newArr[index] = false)\r\n        setCreactTodoState(JSON.stringify(createTodoState));\r\n        addTodo(createTodoState, index);\r\n    }\r\n\r\n    const onError = (error) => {\r\n        console.log(error);\r\n        };\r\n\r\n\r\n\r\n    /* 함수 선언 끝 */\r\n\r\n    return  (\r\n            <Box className=\"goals-todo-input-create-Box\">\r\n                <form onSubmit={handleSubmit(onSubmit,onError)}>\r\n                    <div className=\"goals-todo-input-create-wrap\">\r\n                    <CheckBoxOutlineBlankIcon className=\"goals-todo-input-create-check-icon\"/>\r\n                    <input {...register(\"title\")} ref={createInput} id=\"todo-input\" className=\"goals-todo-input-create-field\"  placeholder=\"할 일을 입력해주세요.\" type=\"text\" maxLength={\"35\"} onChange={onChangeTitleEventHandler} onBlur={handleSubmit(onSubmit, onError)} /> \r\n                    <input {...register(\"goal_id\")} id=\"todo-goal-id-input\" className=\"todo-goal-create-id\" type=\"hidden\" value={id} /> \r\n                    <Button type=\"submit\" className=\"goals-todo-input-btn\"><MoreHorizIcon className=\"goals-todo-list-input-btn-icon\" /></Button>\r\n                    </div>\r\n                </form>\r\n            </Box>\r\n            )\r\n}\r\n\r\n\r\nexport function TodoModal (props) {\r\n\r\n    const modalOpen = props.modalOpen;\r\n    const handleTodoModalClose = props.handleTodoModalClose;\r\n    const selectedTodoData = props.selectedTodoData;\r\n    const clickTodoEditHandler = props.clickTodoEditHandler;\r\n    const selectedInputIndex = props.selectedInputIndex;\r\n    const clickTodoDeleteHandler = props.clickTodoDeleteHandler;\r\n    const todoDelayNextDayEventHandler = props.todoDelayNextDayEventHandler;\r\n    const calendarOpen = props.calendarOpen;\r\n    const handleCalendarModalOpen = props.handleCalendarModalOpen;\r\n    const handleCalendarModalClose = props.handleCalendarModalClose;\r\n    const todoChangeDateEventHandler = props.todoChangeDateEventHandler;\r\n\r\n\r\n    return(\r\n        <>\r\n        <DatePickerCalender calendarOpen={calendarOpen} handleCalendarModalOpen={handleCalendarModalOpen} selectedInputIndex={selectedInputIndex} handleCalendarModalClose={handleCalendarModalClose} handleTodoModalClose={handleTodoModalClose} todoChangeDateEventHandler={todoChangeDateEventHandler} /> \r\n\r\n        <Modal open={modalOpen}\r\n        onClose={handleTodoModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"feed-todo-modal-box\"\r\n         >\r\n            <Box className=\"feed-todo-modal-wrap\" >\r\n                <p className=\"feed-todo-modal-head\">{selectedTodoData.title}</p>\r\n                <Box className=\"feed-todo-modal-icon-wrap\">\r\n                    <button className=\"feed-todo-edit-icon\" data-index={selectedInputIndex} onClick={clickTodoEditHandler} ><EditIcon className=\"feed-modal-icon\" /><span>수정</span></button>\r\n                    <button className=\"feed-todo-delay-icon\" data-index={selectedInputIndex} onClick={todoDelayNextDayEventHandler} ><SkipNextIcon className=\"feed-modal-icon\" /><span>내일 하기</span></button>\r\n                    <button className=\"feed-todo-date-change-icon\" data-index={selectedInputIndex} ><SyncAltIcon className=\"feed-modal-icon\" onClick={handleCalendarModalOpen} /><span>날짜 바꾸기</span></button>\r\n                    <button className=\"feed-todo-order-change-icon\" data-index={selectedInputIndex} ><WrapTextIcon className=\"feed-modal-icon\" /><span>순서 변경</span></button>\r\n                    <button className=\"feed-todo-delete-icon\" data-index={selectedInputIndex} onClick={clickTodoDeleteHandler}  ><DeleteOutlineIcon className=\"feed-modal-icon\" /><span>삭제</span></button>\r\n                </Box>\r\n            </Box>\r\n\r\n        </Modal>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport function DatePickerCalender(props) {\r\n\r\n    const selectedInputIndex = props.selectedInputIndex;\r\n    const [selectedNewDate, setSelectedNewDate] = useState(new Date());\r\n    const  week = new Array('일', '월', '화', '수', '목', '금', '토');\r\n    const calendarOpen = props.calendarOpen;\r\n    const handleCalendarModalClose = props.handleCalendarModalClose;\r\n    const handleTodoModalClose = props.handleTodoModalClose;\r\n    const todoChangeDateEventHandler = props.todoChangeDateEventHandler;\r\n    const selectedDate = selectedNewDate.toJSON().substring(0,10);\r\n\r\n    let selectedYear = selectedNewDate.getFullYear();\r\n    let selectedMonth = selectedNewDate.getMonth()+1;\r\n    let selectedDay = selectedNewDate.getDate();\r\n    let selectedLabel = selectedNewDate.getDay();\r\n    let todayLabel = week[selectedLabel];\r\n\r\n\r\n    useEffect(()=>{\r\n        handleTodoModalClose()\r\n    },[])\r\n    \r\n    return (\r\n        <Modal open={calendarOpen}\r\n        onClose={handleCalendarModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"todo-modal-datePicker-wrap\"\r\n         >\r\n        <Box className=\"todo-modal-datePicker-box\">\r\n            <LocalizationProvider locale={ko} dateAdapter={AdapterDateFns}>\r\n                <div className=\"todo-modal-datePicker-box-title-wrap\">\r\n                    <p>선택한 날짜</p>\r\n                    <span>{selectedYear +`년 `+ selectedMonth +`월 `+ selectedDay+ `일 ` + todayLabel + `요일`}</span>\r\n                </div>\r\n                <CalendarPicker className=\"todo-modal-datePicker\" date={selectedNewDate} onChange={(newDate) => setSelectedNewDate(newDate)} />\r\n                <div className=\"todo-modal-datePicker-btn-wrap\">\r\n                <Button className=\"todo-modal-datePicker-btn\" data-index={selectedInputIndex} data-day={selectedDate} onClick={todoChangeDateEventHandler}>확인</Button> <Button className=\"todo-modal-datePicker-btn\" onClick={handleCalendarModalClose}>취소</Button>\r\n                </div>\r\n            </LocalizationProvider>\r\n        </Box>\r\n        </Modal>  \r\n    )\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}