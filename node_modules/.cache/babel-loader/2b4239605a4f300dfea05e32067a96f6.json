{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soomin\\\\clonemate-front\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Input from '@mui/material/Input';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = [{\n  \"strUserName\": \"주영\",\n  \"todo_id\": \"0\",\n  \"title\": \"🥛우유마시기\"\n}, {\n  \"strUserName\": \"🍈메로나\",\n  \"todo_id\": \"1\",\n  \"title\": \"공부하기\"\n}, {\n  \"strUserName\": \"두두\",\n  \"todo_id\": \"5\",\n  \"title\": \"스터디카페가기\"\n}, {\n  \"strUserName\": \"나야\",\n  \"todo_id\": \"7\",\n  \"title\": \"8시간 자기\"\n}];\nconsole.log(Data);\nexport default function Search() {\n  _s();\n\n  const styleInfo = {\n    paddingRight: '10px',\n    position: 'relative',\n    left: '10vh'\n  };\n  /* \r\n  const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n  \r\n  const handleSearch = e => {\r\n    let target = e.target;\r\n    setFilterFn({\r\n        fn: items => {\r\n            if (target.value == \"\")\r\n                return items;\r\n            else\r\n                return items.filter(x => x.fullname.toLowerCase().includes(target.value))\r\n        }\r\n    })\r\n  } */\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  /* <div>\r\n    <ul>\r\n      <li style={{position:'relative',left:'10vh'}}>\r\n        <span style={styleInfo}>\r\n            {data.strUserName}<br/>\r\n            {data.title}</span>\r\n      </li>\r\n    </ul>\r\n  </div> */\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper'\n    },\n    textAlign: \"center\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"filled\",\n      size: \"small\",\n      id: \"filled-basic\",\n      placeholder: \"email ,ID \\uB610\\uB294 \\uD560 \\uC77C \\uAC80\\uC0C9\",\n      sx: {\n        boxShadow: 'none'\n      },\n      onChange: event => {\n        setSearchTerm(event.target.value);\n      },\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), Data.filter(data => {\n      if (searchTerm == \"\") {\n        return data;\n      } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return data;\n      }\n    }).map(data => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          position: 'relative'\n        },\n        component: \"div\",\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: data.strUserName,\n            secondary: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this)\n      }, data.todo_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/soomin/clonemate-front/src/components/Search.js"],"names":["React","useState","Box","TextField","SearchIcon","Input","InputAdornment","ListItem","ListItemButton","ListItemText","Data","console","log","Search","styleInfo","paddingRight","position","left","searchTerm","setSearchTerm","width","bgcolor","boxShadow","event","target","value","startAdornment","filter","data","strUserName","toLowerCase","includes","map","title","todo_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport { TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Input from '@mui/material/Input';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nconst Data = [\r\n  { \"strUserName\": \"주영\", \"todo_id\": \"0\", \"title\": \"🥛우유마시기\" },\r\n  { \"strUserName\": \"🍈메로나\", \"todo_id\": \"1\", \"title\": \"공부하기\" },\r\n  { \"strUserName\": \"두두\", \"todo_id\": \"5\", \"title\": \"스터디카페가기\" },\r\n  { \"strUserName\": \"나야\", \"todo_id\": \"7\", \"title\": \"8시간 자기\" }\r\n]\r\nconsole.log(Data);\r\n\r\nexport default function Search() {\r\n\r\n    const styleInfo = {\r\n      paddingRight:'10px',\r\n      position:'relative',\r\n      left:'10vh'\r\n      };\r\n  \r\n    /* \r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    \r\n    const handleSearch = e => {\r\n      let target = e.target;\r\n      setFilterFn({\r\n          fn: items => {\r\n              if (target.value == \"\")\r\n                  return items;\r\n              else\r\n                  return items.filter(x => x.fullname.toLowerCase().includes(target.value))\r\n          }\r\n      })\r\n    } */\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n    \r\n      \r\n      /* <div>\r\n        <ul>\r\n          <li style={{position:'relative',left:'10vh'}}>\r\n            <span style={styleInfo}>\r\n                {data.strUserName}<br/>\r\n                {data.title}</span>\r\n          </li>\r\n        </ul>\r\n      </div> */\r\n\r\n      \r\n    \r\n    return (\r\n        <Box \r\n        sx={{ width: '100%', bgcolor: 'background.paper' }} \r\n        textAlign='center' \r\n        style={{ position:'relative'}}>\r\n        \r\n          {/* - 입력받는 string에 매치되는 아이디,할일,email 리스트로 불러와 보여주기\r\n                받아와야 하는 값 \r\n                -user nickname\r\n                -매치된 할일 의 단어\r\n                -참고) 설정한 색  \r\n            - style 수정사항\r\n                -search 검색 input 높이 조절\r\n                -항목 선택시 default 색 변경 */}\r\n            <TextField \r\n                fullWidth  \r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                id=\"filled-basic\"\r\n                placeholder=\"email ,ID 또는 할 일 검색\"\r\n                sx={{ boxShadow: 'none'}}    \r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n                \r\n                InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            >\r\n            </TextField>\r\n            \r\n\r\n            {Data.filter((data)=> {\r\n              if (searchTerm == \"\") {\r\n                return data\r\n              } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              }\r\n            }).map(data=>{\r\n              return(\r\n                <ListItem style={{position:'relative'}} key={data.todo_id} component=\"div\" disablePadding>\r\n                  <ListItemButton>\r\n                    <ListItemText \r\n                    primary={data.strUserName}\r\n                    secondary={data.title} />\r\n                   </ListItemButton>\r\n                </ListItem>\r\n               );\r\n\r\n              })}\r\n                \r\n        </Box>\r\n    \r\n    )}"]},"metadata":{},"sourceType":"module"}