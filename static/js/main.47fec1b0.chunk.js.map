{"version":3,"sources":["atoms/todoData.js","api/apiCommunicate.js","components/usercontrol/Signin.js","components/usercontrol/Join.js","components/nav/BasicNavBar.js","components/goal/Goals.js","components/nav/MainNavBar.js","components/main/CalendarBox.js","components/main/Explore.js","components/main/TodoModal.js","components/main/LikeListModal.js","components/main/FeedTodoData.js","components/main/FeedTodoGoal.js","components/main/CreateTodoForm.js","components/main/Feed.js","components/main/Content.js","components/main/Main.js","components/order/OrderItem.js","components/goal/GoalForm.js","components/goal/GoalEditForm.js","components/exploresearch/Search.js","components/exploresearch/Follower.js","components/exploresearch/Following.js","components/exploresearch/ExploreSearch.js","components/routines/RoutineDayModal.js","components/routines/RoutineDateModal.js","components/routines/EditRoutinesForm.js","components/routines/RoutinesTodos.js","components/routines/CreateRoutinesForm.js","components/routines/Routines.js","components/nav/Setting.js","components/tabmenu/Text.js","components/tabmenu/TermUse.js","components/tabmenu/Policy.js","components/tabmenu/Announce.js","components/App.js","index.js"],"names":["today","atom","key","default","Date","tomorrow","nextDay","setDate","getDate","objDatesData","toJSON","substring","objFeedCalendarOverview","objTodosDataResult","goalsData","userIdInfo","headers","userHost","todoHost","getTodosOverviewData","numUserId","localDate","a","axios","method","url","params","userId","dateYm","header","then","Response","data","success","alert","catch","Error","console","log","postUserJoin","res","window","location","reload","postUserLogin","getGoalsData","getTodosData","Signin","useForm","register","handleSubmit","errors","formState","watch","useState","onSubmit","TextField","required","id","className","label","type","autoComplete","variant","helperText","margin","fullWidth","account","password","Button","to","Join","mode","result","setResult","JSON","stringify","error","message","email","minLength","value","name","introText","BasicNavBar","history","useHistory","urlPath","pathname","useParams","Box","AppBar","Toolbar","IconButton","size","edge","color","sx","mr","onClick","goBack","Typography","component","includes","replace","Goals","useRecoilState","dtTodos","setDtTodos","todoDataArray","parse","useEffect","goalItems","moveEditGoalForm","e","target","map","idx","Fragment","goalOrderNo","style","titleColor","title","MainNavBar","dtUser","userData","moveSetting","moveFollowing","right","state","setState","toggleDrawer","anchor","open","event","position","boxShadow","flexDirection","height","borderTop","boxSizing","Drawer","onClose","width","role","onKeyDown","display","justifyContent","marginRight","fontSize","stroke","strokeWidth","paddingRight","Divider","todos","todoId","orderNo","goalId","SNB","styles","makeStyles","notInThisMonthDayPaper","visibility","backgroundColor","textAlign","padding","normalDayPaper","cursor","normalDayNum","top","selectedDayPaper","selectedDayNum","fontWeight","textDecoration","hasTodoDayPaper","hasTodoDayNum","CheckedTodoDayPaper","CheckedTodoDayNum","todayPaper","todayNum","CalendarBox","props","objDate","setObjDate","copy_objDate","dtFeedCalendarOverview","classes","dtFeedCalendarDate","selectedDate","setselectedDate","todoObj","localeSelectedDate","localeSelectedDateYm","process","theDayhasTodoArr","i","arrTodoInfo","numTodoDay","item","ynComplete","numTodoCount","locale","ko","utils","DateFnsUtils","DatePicker","onChange","inputFormat","mask","renderDay","day","isInCurrentMonth","dayComponent","dateTile","isHasTodoData","isSelected","isToday","getMonth","d","Paper","isNaN","ref","Grid","getDayElement","Explore","calendarData","minWidth","Stack","direction","spacing","Avatar","border","TodoModal","dtDate","useRecoilValue","index","calendarActiveIndex","setCalendarActiveIndex","modalActive","setModalActiveIndex","todoModalEditHandler","DatePickerCalender","calendarActive","Modal","goal_id","parseInt","currentTarget","dataset","goalid","todo_id","todoid","todo","date","endRepeatDate","dtTomorrow","push","splice","new_date","newDate","setNewDate","week","Array","selectedYear","getFullYear","selectedMonth","selectedDay","todayLabel","getDay","LocalizationProvider","dateAdapter","AdapterDateFns","CalendarPicker","LikeListModal","likesUser","likeModalActiveIndex","setLikeModalActiveIndex","userInfo","user","uriParams","FeedTodoData","readOnly","setReadOnly","modalActiveIndex","onClickTodoCheckYn","stopPropagation","checkYn","readOnlyHandler","likeModalActive","likes","TodoList","activeHandler","likeActiveHandler","todoInputChangeHandler","current_value","inputLostFocusEventHandler","enterKeyEventHandler","code","React","forwardRef","inputRef","useRef","maxLength","current","length","onBlur","FeedTodoGoal","modalOpen","onClickGoalHandler","CreateTodoForm","createInput","focus","new_todo_id","todoLength","new_order_no","createTodoFieldReset","createTodoState","dtToday","inputValueCheckHandler","createTodoStateSubmit","placeholder","onKeyPress","Feed","allTodoModalActive","setAllTodoModalActive","allTodoCalendarActive","setAllTodoCalendarActive","setSelectedDate","fill","isGoalSelected","setIsGoalSelected","clicked_arr","AllTodoCalendar","submitDoitOtherDay","AllTodoEditModal","checkNdoitToday","checkNdoitCalendarOn","checkNdelete","checkedArr","filter","allTodoDelete","Content","Main","OrderItem","Reorder","list","startIndex","endIndex","from","removed","onDragEnd","destination","sourceGoalOrderNo","source","destinationGoalOrderNo","reorderArray","droppableId","provided","droppableProps","innerRef","draggableId","String","draggableProps","dragHandleProps","OrderTodoGoal","sourceTodoOrderNo","destinationTodoOrderNo","goal","GoalForm","setGoal","createGoalState","setCreactGoalState","copy_createGoalState","privacyDialogActive","setPrivacyDialogActive","colorDialogActive","setColorDialogActive","privacyObj","handlePrivacyDialogClose","reason","handleColorDialogClose","container","xs","privacy","borderRadius","background","Dialog","disableEscapeKeyDown","DialogTitle","DialogContent","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","DialogActions","defaultValue","marginBottom","GoalEditForm","originID","editGoalState","setEditGoalState","copy_editGoalState","copy_goal","newGoalArr","Data","Search","searchTerm","setSearchTerm","hiddenLabel","InputProps","disableUnderline","startAdornment","InputAdornment","strUserName","toLowerCase","FollowerData","Follower","follower","setFollower","setOpen","handleClickOpen","handleClose","handleFollowingChange","newFollower","strUserId","List","disablePadding","dtTodo","todo_title","maxHeight","maxWidth","autoFocus","FollowingData","Following","following","setFollowing","newFollowing","ExploreSearch","TabPanel","children","other","hidden","p","a11yProps","setValue","bgcolor","Tabs","borderBottom","borderBottomColor","TabIndicatorProps","newValue","Tab","RoutineDayModal","dayActiveBoolean","setDayActiveBoolean","createRoutinesState","dayArr","copy_createRoutinesState","setCreatRoutinesState","editRoutinesState","copy_editRoutinesState","setEditRoutinesState","checkedHandler","repeatDays","checked","RoutineDateModal","setDtDate","dateActiveBoolean","setDateActiveBoolean","dtSelectedDate","selectedNewDate","copy_dtDate","saveSelectedNewDate","EditRoutinesForm","setLocation","dayEng","dayKor","checkDate","RoutinesTodos","isTodoSelected","check_yn","set","ReadOnly","CreateRoutinesForm","goal_Id","todo_Id","repeatSunYn","repeatMonYn","repeatTueYn","repeatWenYn","repeatThuYn","repeatFriYn","repeatSatYn","copy_todo_state","newArr","Routines","goalSelectedHandler","Setting","TextInfo","TermUse","Policy","Announce","Container","theme","createTheme","components","MuiTypography","defaultProps","variantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","typography","Link","bolder","button","palette","btn","main","contrastText","basicnav","mainnav","koKR","App","ThemeProvider","exact","path","src","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47fec1b0.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\n//아톰 예시 입니다.\r\nexport const textState = atom({\r\n  key: 'textState', // unique ID (with respect to other atoms/selectors)\r\n  default: '', // default value (aka initial value)\r\n});\r\n\r\n// Goal, Todo 캘린더 모달용 날짜 state\r\n\r\n\r\nconst today = new Date();\r\nconst tomorrow = new Date(today);\r\nconst nextDay = new Date(tomorrow.setDate(today.getDate()+1))\r\n\r\n\r\n//오늘 날짜, 내일 날짜\r\nexport const objDatesData = atom({\r\n  key: 'objDatesData',\r\n  default : {\r\n    \"dtToday\" : today.toJSON().substring(0, 10),\r\n    \"dtTomorrow\" : nextDay.toJSON().substring(0, 10),\r\n    \"dtFeedCalendarDate\" : today,\r\n    \"selectedNewDate\" : new Date(),\r\n    \"selectedNewEndDate\" : new Date(),\r\n  }\r\n\r\n})\r\n\r\n// Feed 좌측 캘린더 state -> CalendarBox 컴포넌트에서 dtFeedCalendarOverview 로 사용\r\nexport const objFeedCalendarOverview = atom({ // 로딩 시 현재 달의 데이터 전부 // <> 클릭하면 다시 데이터 받기\r\n    key: 'objFeedCalendarOverview', // unique ID (with respect to other atoms/selectors)\r\n    default: [ {\r\n              \"numTodoYear\": 2022,          //연도\r\n              \"numTodoMonth\": 2,            //월\r\n              \"numMonthTodoCount\": 11,      //해당 월 투두 개수\r\n              \"arrTodoInfo\": [\r\n                {\r\n                  \"numTodoDay\": 2,             //일\r\n                  \"numTodoCount\": 1,            //해당 연월일 투두 개수\r\n                  \"ynComplete\": \"Y\",            //해당 연원일 투두 전부 완료 여부\r\n                },\r\n              ]\r\n          },\r\n          {\r\n            \"numTodoYear\": 2022,          //연도\r\n            \"numTodoMonth\": 2,            //월\r\n            \"numMonthTodoCount\": 11,      //해당 월 투두 개수\r\n            \"arrTodoInfo\": [\r\n              {\r\n                \"numTodoDay\": 23,             //일\r\n                \"numTodoCount\": 5,            //해당 연월일 투두 개수\r\n                \"ynComplete\": \"N\",            //해당 연원일 투두 전부 완료 여부\r\n              },\r\n            ]\r\n        } ,\r\n        ]\r\n  });// default value (aka initial value)\r\n\r\n// todo 더미데이터 수정 220304\r\n\r\n// todo api\r\nexport const objTodosDataResult = atom({\r\n  key: 'objTodosDataResult',\r\n  default: [\r\n  {\r\n  \"id\": 1,\r\n  \"orderNo\" : 1,\r\n  \"title\" : \"첫 번째 목표\",\r\n  \"privacy\": \"PUB\",\r\n  \"titleColor\" : \"#ff0000\",\r\n  \"todos\" : [\r\n        {\r\n          \"id\": 1,\r\n          \"date\": \"2022-02-13\",\r\n          \"startRepeatDate\":\"2022-02-13\", \r\n          \"endRepeatDate\": \"2022-02-13\",\r\n          \"checkYn\": \"N\",\r\n          \"orderNo\": 1,\r\n          \"title\": \"첫 번째 목표의 첫 번째 할 일\",\r\n          \"goalId\": 1,\r\n          \"repeatDays\": {\r\n            \"THU\": \"N\",\r\n            \"WEN\": \"N\",\r\n            \"TUE\": \"N\",\r\n            \"SAT\": \"N\",\r\n            \"FRI\": \"N\",\r\n            \"MON\": \"N\",\r\n            \"SUN\": \"N\"\r\n          },\r\n          \"likes\": [\r\n            {\r\n              \"id\": 3,\r\n              \"user\": {\r\n                \"email\": \"test2@test.com\",\r\n                \"account\": \"test2\",\r\n                \"introText\": \"클론짱2의 투두메이트\",\r\n                \"name\": \"클론짱2\",\r\n                \"id\": 2\r\n              }\r\n            },\r\n            {\r\n              \"id\": 4,\r\n              \"user\": {\r\n                \"email\": \"test3@test.com\",\r\n                \"account\": \"test3\",\r\n                \"introText\": \"클론짱3의 투두메이트\",\r\n                \"name\": \"클론짱3\",\r\n                \"id\": 3\r\n              }\r\n            }\r\n          ],\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"date\": \"2022-02-13\",\r\n          \"startRepeatDate\":\"2022-02-13\",\r\n          \"endRepeatDate\": \"2022-02-14\",\r\n          \"checkYn\": \"N\",\r\n          \"orderNo\": 2,\r\n          \"title\": \"첫 번째 목표의 두 번째 할 일\",\r\n          \"goalId\": 1,\r\n          \"repeatDays\": {\r\n            \"THU\": \"N\",\r\n            \"WEN\": \"N\",\r\n            \"TUE\": \"N\",\r\n            \"SAT\": \"N\",\r\n            \"FRI\": \"N\",\r\n            \"MON\": \"N\",\r\n            \"SUN\": \"N\"\r\n          },\r\n          \"likes\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\": 3,\r\n\t\t\t\t\t\t\t\"user\": {\r\n\t\t\t\t\t\t\t\t\"email\": \"test2@test.com\",\r\n\t\t\t\t\t\t\t\t\"account\": \"test2\",\r\n\t\t\t\t\t\t\t\t\"introText\": \"클론짱2의 투두메이트\",\r\n\t\t\t\t\t\t\t\t\"name\": \"클론짱2\",\r\n\t\t\t\t\t\t\t\t\"id\": 2\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"id\": 4,\r\n\t\t\t\t\t\t\t\"user\": {\r\n\t\t\t\t\t\t\t\t\"email\": \"test3@test.com\",\r\n\t\t\t\t\t\t\t\t\"account\": \"test3\",\r\n\t\t\t\t\t\t\t\t\"introText\": \"클론짱3의 투두메이트\",\r\n\t\t\t\t\t\t\t\t\"name\": \"클론짱3\",\r\n\t\t\t\t\t\t\t\t\"id\": 3\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"date\": \"2022-02-13\",\r\n        \"startRepeatDate\":\"2022-02-13\",\r\n        \"endRepeatDate\": \"2022-02-17\",\r\n        \"checkYn\": \"N\",\r\n        \"orderNo\": 3,\r\n        \"title\": \"첫 번째 목표의 세 번째 할 일\",\r\n        \"goalId\": 1,\r\n        \"repeatDays\": {\r\n          \"THU\": \"N\",\r\n          \"WEN\": \"Y\",\r\n          \"TUE\": \"N\",\r\n          \"SAT\": \"N\",\r\n          \"FRI\": \"Y\",\r\n          \"MON\": \"N\",\r\n          \"SUN\": \"N\"\r\n        },\r\n        \"likes\": [\r\n          {\r\n            \"id\": 3,\r\n            \"user\": {\r\n              \"email\": \"test2@test.com\",\r\n              \"account\": \"test2\",\r\n              \"introText\": \"클론짱2의 투두메이트\",\r\n              \"name\": \"클론짱2\",\r\n              \"id\": 2\r\n            }\r\n          },\r\n          {\r\n            \"id\": 4,\r\n            \"user\": {\r\n              \"email\": \"test3@test.com\",\r\n              \"account\": \"test3\",\r\n              \"introText\": \"클론짱3의 투두메이트\",\r\n              \"name\": \"클론짱3\",\r\n              \"id\": 3\r\n            }\r\n          }\r\n        ],\r\n      },\r\n  ]},\r\n  {\r\n    \"title\" : \"두 번째 목표\",\r\n    \"id\": 2,\r\n    \"orderNo\" : 2,\r\n    \"titleColor\" : \"#ff873d\",\r\n    \"todos\" : [\r\n          {\r\n            \"id\": 1,\r\n            \"date\": \"2022-02-13\",\r\n            \"startRepeatDate\":\"2022-02-13\",\r\n            \"endRepeatDate\": \"2022-02-13\",\r\n            \"checkYn\": \"N\",\r\n            \"orderNo\": 1,\r\n            \"title\": \"두 번째 목표의 첫 번째 할 일\",\r\n            \"goalId\": 2,\r\n            \"repeatDays\": {\r\n              \"THU\": \"N\",\r\n              \"WEN\": \"N\",\r\n              \"TUE\": \"N\",\r\n              \"SAT\": \"N\",\r\n              \"FRI\": \"N\",\r\n              \"MON\": \"N\",\r\n              \"SUN\": \"N\"\r\n            },\r\n            \"likes\": [\r\n              {\r\n                \"id\": 3,\r\n                \"user\": {\r\n                  \"email\": \"test2@test.com\",\r\n                  \"account\": \"test2\",\r\n                  \"introText\": \"클론짱2의 투두메이트\",\r\n                  \"name\": \"클론짱2\",\r\n                  \"id\": 2\r\n                }\r\n              },\r\n              {\r\n                \"id\": 4,\r\n                \"user\": {\r\n                  \"email\": \"test3@test.com\",\r\n                  \"account\": \"test3\",\r\n                  \"introText\": \"클론짱3의 투두메이트\",\r\n                  \"name\": \"클론짱3\",\r\n                  \"id\": 3\r\n                }\r\n              }\r\n            ],\r\n          },\r\n          {\r\n            \"id\": 2,\r\n            \"date\": \"2022-02-11\",\r\n            \"startRepeatDate\":\"2022-02-11\", \r\n            \"endRepeatDate\": \"2022-02-15\",\r\n            \"checkYn\": \"N\",\r\n            \"orderNo\": 2,\r\n            \"title\": \"두 번째 목표의 두 번째 할 일\",\r\n            \"goalId\": 2,\r\n            \"repeatDays\": {\r\n              \"THU\": \"N\",\r\n              \"WEN\": \"N\",\r\n              \"TUE\": \"N\",\r\n              \"SAT\": \"N\",\r\n              \"FRI\": \"N\",\r\n              \"MON\": \"N\",\r\n              \"SUN\": \"N\"\r\n            },\r\n            \"likes\": [\r\n              {\r\n                \"id\": 3,\r\n                \"user\": {\r\n                  \"email\": \"test2@test.com\",\r\n                  \"account\": \"test2\",\r\n                  \"introText\": \"클론짱2의 투두메이트\",\r\n                  \"name\": \"클론짱2\",\r\n                  \"id\": 2\r\n                }\r\n              },\r\n              {\r\n                \"id\": 4,\r\n                \"user\": {\r\n                  \"email\": \"test3@test.com\",\r\n                  \"account\": \"test3\",\r\n                  \"introText\": \"클론짱3의 투두메이트\",\r\n                  \"name\": \"클론짱3\",\r\n                  \"id\": 3\r\n                }\r\n              }\r\n            ],\r\n        },\r\n    ]},\r\n    {\r\n      \"title\" : \"세 번째 목표\",\r\n      \"id\": 3,\r\n      \"orderNo\" : 3,\r\n      \"titleColor\" : \"#0119cb\",\r\n      \"todos\" : [\r\n           {\r\n              \"id\": 1,\r\n              \"date\": \"2022-02-16\",\r\n              \"startRepeatDate\":\"2022-02-16\", \r\n              \"endRepeatDate\": \"2022-02-16\",\r\n              \"checkYn\": \"N\",\r\n              \"orderNo\": 1,\r\n              \"title\": \"세 번째 목표의 첫 번째 할 일\",\r\n              \"goalId\": 3,\r\n              \"repeatDays\": {\r\n                \"THU\": \"N\",\r\n                \"WEN\": \"N\",\r\n                \"TUE\": \"N\",\r\n                \"SAT\": \"N\",\r\n                \"FRI\": \"N\",\r\n                \"MON\": \"N\",\r\n                \"SUN\": \"N\"\r\n              },\r\n              \"likes\": [\r\n                {\r\n                  \"id\": 3,\r\n                  \"user\": {\r\n                    \"email\": \"test2@test.com\",\r\n                    \"account\": \"test2\",\r\n                    \"introText\": \"클론짱2의 투두메이트\",\r\n                    \"name\": \"클론짱2\",\r\n                    \"id\": 2\r\n                  }\r\n                },\r\n                {\r\n                  \"id\": 4,\r\n                  \"user\": {\r\n                    \"email\": \"test3@test.com\",\r\n                    \"account\": \"test3\",\r\n                    \"introText\": \"클론짱3의 투두메이트\",\r\n                    \"name\": \"클론짱3\",\r\n                    \"id\": 3\r\n                  }\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              \"id\": 2,\r\n              \"date\": \"2022-02-13\",\r\n              \"startRepeatDate\":\"2022-02-13\",\r\n              \"endRepeatDate\": \"2022-02-19\",\r\n              \"checkYn\": \"N\",\r\n              \"orderNo\": 2,\r\n              \"title\": \"세 번째 목표의 두 번째 할 일\",\r\n              \"goalId\": 3,\r\n              \"repeatDays\": {\r\n                \"THU\": \"N\",\r\n                \"WEN\": \"N\",\r\n                \"TUE\": \"N\",\r\n                \"SAT\": \"N\",\r\n                \"FRI\": \"N\",\r\n                \"MON\": \"N\",\r\n                \"SUN\": \"N\"\r\n              },\r\n              \"likes\": [\r\n                {\r\n                  \"id\": 3,\r\n                  \"user\": {\r\n                    \"email\": \"test2@test.com\",\r\n                    \"account\": \"test2\",\r\n                    \"introText\": \"클론짱2의 투두메이트\",\r\n                    \"name\": \"클론짱2\",\r\n                    \"id\": 2\r\n                  }\r\n                },\r\n                {\r\n                  \"id\": 4,\r\n                  \"user\": {\r\n                    \"email\": \"test3@test.com\",\r\n                    \"account\": \"test3\",\r\n                    \"introText\": \"클론짱3의 투두메이트\",\r\n                    \"name\": \"클론짱3\",\r\n                    \"id\": 3\r\n                  }\r\n                },\r\n                {\r\n                  \"id\": 5,\r\n                  \"user\": {\r\n                    \"email\": \"test2@test.com\",\r\n                    \"account\": \"test2\",\r\n                    \"introText\": \"클론짱4의 투두메이트\",\r\n                    \"name\": \"클론짱4\",\r\n                    \"id\": 2\r\n                  }\r\n                },\r\n              ],\r\n          },\r\n      ]},\r\n      {\r\n        \"title\" : \"네 번째 목표\",\r\n        \"id\": 4,\r\n        \"orderNo\" : 4,\r\n        \"titleColor\" : \"#77ab59\",\r\n        \"todos\" : [\r\n             {\r\n                \"id\": 1,\r\n                \"date\": \"2022-02-16\",\r\n                \"startRepeatDate\":\"2022-02-16\",\r\n                \"endRepeatDate\": \"2022-02-16\",\r\n                \"checkYn\": \"N\",\r\n                \"orderNo\": 1,\r\n                \"title\": \"네 번째 목표의 첫 번째 할 일\",\r\n                \"goalId\": 4,\r\n                \"repeatDays\": {\r\n                  \"THU\": \"N\",\r\n                  \"WEN\": \"N\",\r\n                  \"TUE\": \"N\",\r\n                  \"SAT\": \"N\",\r\n                  \"FRI\": \"N\",\r\n                  \"MON\": \"N\",\r\n                  \"SUN\": \"N\"\r\n                },\r\n                \"likes\": [\r\n                  {\r\n                    \"id\": 3,\r\n                    \"user\": {\r\n                      \"email\": \"test2@test.com\",\r\n                      \"account\": \"test2\",\r\n                      \"introText\": \"클론짱2의 투두메이트\",\r\n                      \"name\": \"클론짱2\",\r\n                      \"id\": 2\r\n                    }\r\n                  },\r\n                ],\r\n              },\r\n        ]},\r\n]\r\n})\r\n\r\n\r\n\r\nexport const goalsData = atom({ // 로딩 시 모든 목표 뿌리기\r\n  key: \"goalsData\",\r\n  default: [\r\n    {\r\n      \"id\" : 1,\r\n      \"orderNo\" : 1,\r\n      \"title\" : \"첫 번째 목표\",\r\n      \"privacy\" : \"PUBLIC\",\r\n      \"titleColor\" : \"#cccccc\"\r\n    },\r\n    {\r\n      \"id\" : 2,\r\n      \"orderNo\" : 2,\r\n      \"title\" : \"두 번째 목표\",\r\n      \"privacy\" : \"PRIVACY\",\r\n      \"titleColor\" : \"#cccccc\"\r\n    },\r\n    {\r\n      \"id\" : 3,\r\n      \"orderNo\" : 3,\r\n      \"title\" : \"세 번째 목표\",\r\n      \"privacy\" : \"FOLLOWING\",\r\n      \"titleColor\" : \"#cccccc\"\r\n    },\r\n    {\r\n      \"id\" : 4,\r\n      \"orderNo\" : 4,\r\n      \"title\" : \"네 번째 목표\",\r\n      \"privacy\" : \"HIDDEN\",\r\n      \"titleColor\" : \"#cccccc\"\r\n    }\r\n  ]\r\n})\r\n\r\n\r\nexport const createRepeatDay = atom({\r\n  key: \"createRepeatDay\",\r\n  default: {\r\n  \"SUN\": \"N\", //y 면 일요일 반복, n 이면 반복 x\r\n  \"MON\": \"N\",\r\n  \"TUE\": \"N\",\r\n  \"WED\": \"N\",\r\n  \"THU\": \"N\",\r\n  \"FRI\": \"N\",\r\n  \"SAT\": \"N\",\r\n}\r\n});\r\n\r\n// export const todoData = atom({ // 로딩 시 오늘 값 받아오기 // 캘린더에서 날짜 클릭하면 해당 날짜로 값 받아오기 // 더미 데이터는 2022-02-05\r\n//   key: \"todoData\",\r\n//   default: [\r\n//     {\r\n//     \"todo_id\": 0,\r\n//     \"goal_id\": 0, //묶여있는 goal id\r\n//     \"next_todo_id\": 1, //다음 todo id (순서지정용)\r\n//     \"title\": \"첫 번째 목표의 할 일 0\",\r\n//     \"date\": \"2022-02-05\",\r\n//     \"end_repeat_date\": \"2022-02-05\", //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n//     \"repeat_days\": {\r\n//         \"sun\": \"N\", //y 면 일요일 반복, n 이면 반복 x\r\n//         \"mon\": \"N\",\r\n//         \"tue\": \"N\",\r\n//         \"wed\": \"N\",\r\n//         \"thu\": \"N\",\r\n//         \"fri\": \"N\",\r\n//         \"sat\": \"N\",\r\n//     },\r\n//     \"check_yn\" : \"N\" //달성여부\r\n//   },\r\n//   {\r\n//     \"todo_id\": 1,\r\n//     \"goal_id\": 0, //묶여있는 goal id\r\n//     \"next_todo_id\": 2, //다음 todo id (순서지정용)\r\n//     \"title\": \"첫 번째 목표의 할 일 1\",\r\n//     \"date\": \"2022-02-05\",\r\n//     \"end_repeat_date\": \"2022-02-05\", //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n//     \"repeat_days\": {\r\n//         \"sun\": \"N\", //y 면 일요일 반복, n 이면 반복 x\r\n//         \"mon\": \"N\",\r\n//         \"tue\": \"N\",\r\n//         \"wed\": \"N\",\r\n//         \"thu\": \"N\",\r\n//         \"fri\": \"N\",\r\n//         \"sat\": \"N\",\r\n//     },\r\n//     \"check_yn\" : \"N\" //달성여부\r\n//   },\r\n//   {\r\n//     \"todo_id\": 0,\r\n//     \"goal_id\": 1, //묶여있는 goal id\r\n//     \"next_todo_id\": 1, //다음 todo id (순서지정용)\r\n//     \"title\": \"두 번째 목표의 할 일 1\",\r\n//     \"date\": \"2022-02-05\",\r\n//     \"end_repeat_date\": \"2022-02-05\", //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n//     \"repeat_days\": {\r\n//         \"sun\": \"N\", //y 면 일요일 반복, n 이면 반복 x\r\n//         \"mon\": \"N\",\r\n//         \"tue\": \"N\",\r\n//         \"wed\": \"N\",\r\n//         \"thu\": \"N\",\r\n//         \"fri\": \"N\",\r\n//         \"sat\": \"N\",\r\n//     },\r\n//     \"check_yn\" : \"N\" //달성여부\r\n//   }\r\n// ]\r\n// })\r\n\r\nexport const todoReadOnly = atom({\r\n  key: \"todoReadOnly\",\r\n  default: true\r\n})\r\n\r\nexport const dateCalendarOpen = atom({\r\n  key: \"dateCalendarOpen\",\r\n  default: false\r\n})\r\n\r\nexport const endRepeatDateCalendarOpen = atom({\r\n  key: \"endRepeatDateCalendarOpen\",\r\n  default: false\r\n})\r\n\r\nexport const repeatDayCalendarOpen = atom({\r\n  key: \"repeatDayCalendarOpen\",\r\n  default: false\r\n})\r\n\r\n// User API 테스트 더미 \r\nexport const userIdInfo = atom({\r\n  key: 'userIdInfo',\r\n  default : [\r\n    {\r\n    \"id\": 2,\r\n    \"account\": \"test2\",\r\n    \"email\": \"test2@test.com\",\r\n    \"name\": \"클론짱2\",\r\n    \"introText\": \"클론짱2의 투두메이트\",\r\n    }\r\n  ]\r\n})","import axios from 'axios';\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { objFeedCalendarOverview , objDatesData} from \"../atoms/todoData\";\r\n\r\n\r\nexport const getTodosDataSample = async () => {\r\n\r\n  //axios\r\n  await axios.get('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .then((result)=>{console.log(result)})\r\n  .catch((Error)=>{console.log(Error)})\r\n\r\n  return Response.data\r\n} \r\n\r\n\r\n/* ------------------------------------예시 종료---------------------------------------- */\r\n\r\n/* state 관리 */\r\n\r\n\r\n/* 공통 변수 선언 */\r\n\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n  \"Connection\": \"keep-alive\",\r\n  \"X-Requested-With\": \"XMLHttpRequest\"\r\n}\r\n\r\nconst userHost = 'https://clonetodo.herokuapp.com';\r\nconst todoHost = 'https://clonetodo.herokuapp.com/api/v1';\r\n\r\n//POST 메서드로 전송할 데이터\r\n// let formData = new FormData(); \r\n// formData.append('key', value); // key-value (키-값)의 형태로 데이터 추가함\r\n\r\n/* 캘린더 API 통신 시작 */\r\n\r\n//GET 캘린더 데이터 가져오기\r\n//dateYm=yyyy-mm\r\nexport const getTodosOverviewData = async (numUserId,localDate) => {\r\n\r\n  //axios\r\n  await axios({\r\n    method: `GET`,\r\n    url: `${todoHost}/todos/overview`,\r\n    params: {\r\n      userId: numUserId,\r\n      dateYm: localDate\r\n    },\r\n    header: {\r\n      headers\r\n    }\r\n  })\r\n  .then(Response => Response.data)\r\n  .then(Response => !Response.success ? alert(\"데이터를 받아오지 못했습니다.\") : null)\r\n  .catch((Error)=>{console.log(Error)})\r\n  \r\n    //완료 되면 res.data가 success true 인지 확인하고 null 부분에 todoData에 objFeedCalendarOverview 값을 바꿔줘야 한다\r\n  return Response.data;\r\n} \r\n\r\n/* 캘린더 API 통신 종료 */\r\n\r\n\r\n\r\n/* 유저 관련 통신 시작 */\r\n\r\n//회원가입\r\nexport const postUserJoin = async (data) => {\r\n\r\n  //axios\r\n  await axios({\r\n    method: `POST`,\r\n    url: `${userHost}/join`,\r\n    params: {\r\n      data\r\n    },\r\n    headers:{\r\n      headers\r\n    }\r\n  })\r\n  .then(res => res.data)\r\n  .then(res => !res.success ? alert(\"아이디와 비밀번호를 확인해주세요\") : \r\n   window.location.reload(`/signin`))\r\n} \r\n\r\n\r\n\r\n//로그인\r\n\r\nexport const postUserLogin = async (data) => {\r\n\r\n  //axios\r\n  await axios({\r\n    method: `POST`,\r\n    url: `${userHost}/login`,\r\n    params: {\r\n      data\r\n    },\r\n    headers:{\r\n      headers\r\n    }\r\n  })\r\n  .then(res => res.data)\r\n  .then(res => !res.success ? alert(\"아이디와 비밀번호를 확인해주세요\") : \r\n   window.location.reload(`/main`))\r\n} \r\n\r\n\r\n/* 유저 관련 통신 종료 */\r\n\r\n\r\n\r\n/* 목표 API 통신 시작 */\r\n\r\n//GET 목표 배열 가져오기\r\n\r\nexport const getGoalsData = async () => {\r\n\r\n  //axios\r\n  await axios({\r\n   method: `GET`,\r\n   url: `${todoHost}/goals`\r\n })\r\n .then(Response => Response.data)\r\n .then(Response => !Response.success ? alert(\"데이터를 받아오지 못했습니다.\") : null)\r\n .catch((Error)=>{console.log(Error)})\r\n\r\n return Response.data\r\n}\r\n\r\n//POST 목표 등록하기\r\n\r\n//PATCH 목표 수정하기\r\n\r\n//DELETE 목표 삭제하기\r\n\r\n/* 목표 API 통신 끝 */\r\n\r\n\r\n\r\n/* 투두 API 통신 시작 */\r\n\r\n//GET objTodosDataResult id 값으로 받아오기\r\n\r\n//GET objTodosDataResult 캘린더 날짜로 받아오기\r\n//date=yyyy-mm-dd\r\nexport const getTodosData = async (numUserId,localDate) => {\r\n\r\n   //axios\r\n   await axios({\r\n    method: `GET`,\r\n    url: `${todoHost}/todos/overview`,\r\n    params: {\r\n      userId: numUserId,\r\n      dateYm: localDate\r\n    }\r\n  })\r\n  .then(Response => Response.data)\r\n  .then(Response => !Response.success ? alert(\"데이터를 받아오지 못했습니다.\") : null)\r\n  .catch((Error)=>{console.log(Error)})\r\n  \r\n    //완료 되면 res.data가 success true 인지 확인하고 null 부분에 todoData에 objFeedCalendarOverview 값을 바꿔줘야 한다\r\n  return Response.data\r\n\r\n} \r\n\r\n//POST objTodosDataResult 추가하기\r\n\r\n//PATCH objTodosDataResult id값으로 수정하기\r\n\r\n//PATCH objTodosDataResult 날짜로 수정하기\r\n//date=yyyy-mm-dd\r\n//checkYn=y or n\r\n\r\n//DELETE objTodosDataResult 날짜로 모든 todo값 삭제하기\r\n\r\n//DELETE objTodosDataResult 날짜로 모든 todo값 삭제하기\r\n\r\n/* 투두 API 통신 끝 */\r\n\r\n\r\n\r\n\r\n/* 투두 좋아요 API 통신 시작 */\r\n\r\n//POST 투두 좋아요 클릭 +1 추가하기\r\n\r\n//DELETE 투두 좋아요 클릭 -1 삭제하기\r\n\r\n/* 투두 좋아요 API 통신 끝 */\r\n\r\n\r\n\r\n/* 팔로우 API 통신 시작 */\r\n\r\n//GET followers 가져오기\r\n\r\nexport async function axiosGetFollowers () {\r\n  //axios\r\n  await axios.get(`http://{{host}}/follows/followers`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n\r\n//GET following 가져오기\r\n\r\nexport async function axiosGetFollowing () {\r\n  //axios\r\n  await axios.get(`http://{{host}}/follows/followings`)\r\n  .then((Response)=>{console.log(Response.data)})\r\n  .catch((Error)=>{console.log(Error)})\r\n} \r\n\r\n//POST 팔로워 수정하기\r\n\r\n//DELETE 팔로워 삭제하기\r\n\r\n/* 팔로우 API 통신 끝 */\r\n\r\n\r\n\r\n/* 좋아요 API 통신 시작 */\r\n\r\n//GET 좋아요 보내기\r\n\r\n//GET 지정 날짜 좋아요 보내기\r\n//date=yyyy-mm-dd\r\n\r\n//POST 좋아요 수정하기\r\n\r\n\r\n//DELETE 좋아요 삭제하기\r\n\r\n\r\n/* 좋아요 API 통신 끝 */\r\n","import React ,  { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, TextField } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { postUserLogin } from '../../api/apiCommunicate';\r\nimport '../../stylesheets/Signin.css';\r\n\r\n\r\nfunction Signin(){\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch } = useForm();\r\n    const [result, setResult] = useState(\"\");\r\n    console.log(\"watch\",watch())\r\n\r\n    const onSubmit = (data) => {\r\n      postUserLogin(data)\r\n    };\r\n\r\n    const onError = (error) => {\r\n      console.log(error)\r\n    };\r\n\r\n    return (\r\n\r\n    <form onSubmit={\r\n      handleSubmit(onSubmit)\r\n      }>\r\n    <TextField\r\n    {...register(\"account\", {required: true})} \r\n        id=\"standard-user-id-input\"\r\n        className='user-control-input'\r\n        label=\"로그인 아이디\"\r\n        type=\"text\"\r\n        autoComplete=\"current-user-id\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Account\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n      {errors.account?.type === \"required\" &&  <span className='error_message'>아이디를 입력해주세요.</span>}\r\n      <TextField\r\n       {...register(\"password\", {required: true})} \r\n        id=\"standard-password-input\"\r\n        label=\"비밀번호\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Password\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n      {errors.password?.type === \"required\" &&  <span className='error_message'>비밀번호를 입력해주세요.</span>}\r\n      <Button type=\"submit\" id=\"submit_btn\">확인</Button>\r\n\r\n      <Link to=\"/\"><p className='forgotPwd'>비밀번호를 잊었다면?</p></Link>\r\n      </form>\r\n      )\r\n\r\n}\r\n\r\nexport default Signin;\r\n\r\n","import React , { useState } from 'react';\r\nimport { appendErrors, useForm } from \"react-hook-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, TextField } from '@mui/material';\r\n\r\nimport { postUserJoin } from '../../api/apiCommunicate'\r\nimport '../../stylesheets/Signin.css';\r\n\r\nexport default function Join(){\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch } = useForm({ mode: \"onChange\" });\r\n    const [result, setResult] = useState(\"\");\r\n    console.log(\"watch\",watch())\r\n\r\n    const onSubmit = (data) => {\r\n      setResult(JSON.stringify(data));\r\n      console.log(result, errors)\r\n      postUserJoin(JSON.stringify(data))\r\n    }\r\n    const onError = (error) => {\r\n      console.log(error)\r\n    };\r\n\r\n    return (\r\n\r\n    <form onSubmit={handleSubmit(onSubmit,onError)}>\r\n      <TextField\r\n      {...register(\"userId\", {required: true, message: \"아이디를 입력해주세요.\"})} //값을 불러오기 위한 이름\r\n        id=\"standard-user-id-input\"\r\n        label=\"아이디\"\r\n        type=\"text\"\r\n        autoComplete=\"current-id\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Account\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n      {errors.userId?.type === \"required\" &&  <span className='error_message'>아이디를 입력해주세요.</span>}\r\n      <TextField\r\n      {...register(\"email\", {required: true, message: \"인증용 이메일을 입력해주세요.\"})} //값을 불러오기 위한 이름\r\n        id=\"standard-email-input\"\r\n        label=\"이메일\"\r\n        type=\"email\"\r\n        autoComplete=\"current-email\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Email\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n      {errors.email?.type === \"required\" &&  <span className='error_message'>인증용 이메일을 입력해주세요.</span>}\r\n      <TextField\r\n       {...register(\"password\", {required: true, minLength:{ value: 3, message: \"비밀번호는 4자 이상으로 입력해주세요.\"}})}  //값을 불러오기 위한 이름\r\n        id=\"standard-password-input\"\r\n        label=\"비밀번호\"\r\n        type=\"password\"\r\n        autoComplete=\"current-password\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Password\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n      {errors.password?.type === \"required\" &&  <span className='error_message'>비밀번호는 4자 이상으로 입력해주세요.</span>}\r\n      {errors.password?.type === \"maxLength\" && errors.password.message}\r\n      <TextField\r\n       {...register(\"name\", {required: true, minLength:{ value: 2, message: \"이름을 입력해주세요\"}})}  //값을 불러오기 위한 이름\r\n        id=\"standard-name-input\"\r\n        label=\"이름\"\r\n        type=\"name\"\r\n        autoComplete=\"current-name\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Name\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n      {errors.name?.type === \"required\" &&  <span className='error_message'>이름을 입력해주세요</span>}\r\n      <TextField\r\n       {...register(\"introText\", {required: true, message: \"자기소개를 입력해주세요.\"})}  //값을 불러오기 위한 이름\r\n        id=\"standard-intro-input\"\r\n        label=\"자기소개\"\r\n        type=\"text\"\r\n        autoComplete=\"current-intro\"\r\n        variant=\"standard\"\r\n        helperText=\"Please enter Intro\"\r\n        margin=\"dense\"\r\n        fullWidth \r\n      />\r\n       {errors.introText?.type === \"required\" &&  <span className='error_message'>자기소개를 입력해주세요.</span>}\r\n      <Button type=\"submit\" id=\"submit_btn\">확인</Button>\r\n      \r\n      <div className='join_txt'>\r\n          <p>\r\n          가입하면: <br />\r\n          • 다른 기기에서 로그인 가능합니다.<br />\r\n          • 다른 사용자들과 함께 할 수 있습니다.\r\n          </p>\r\n          <p>가입 시 다음 사항에 동의하는 것으로 간주합니다. &nbsp;\r\n          <Link to=\"/text/use\" className='termOfUse'>이용약관</Link>과 <Link className='policy' to=\"/text/policy\">개인정보 정책</Link>\r\n          </p>\r\n      </div>\r\n      </form>\r\n)\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport '../../stylesheets/Nav.css';\r\n\r\n\r\nexport default function BasicNavBar () {\r\n\r\n  //useHistory 훅 사용\r\n  let history = useHistory();\r\n\r\n\r\n  /* 버튼 onClick 함수 */\r\n\r\n  //목표 생성 페이지 이동\r\n  function moveGoalForm(){\r\n    window.location.replace(\"/goals/goalForm\")\r\n  }\r\n\r\n  //url pathname 변수화\r\n  let urlPath = window.location.pathname;\r\n  let { id } = useParams();\r\n\r\n  return (\r\n    <Box className=\"basic_nav_box\">\r\n      <AppBar className=\"basic_nav_appbar\" >\r\n        <Toolbar>\r\n        <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"back\"\r\n            sx={{ mr: 2 }}\r\n            onClick={history.goBack} \r\n          >\r\n         <NavigateBeforeIcon />\r\n          </IconButton>\r\n          <Typography className=\"navbar_title\" variant=\"h6\" component=\"div\">\r\n\r\n          {/* 삼항연산자로 navbar 제목 붙이기 */}\r\n          {\r\n             urlPath.includes(`signin`)? `로그인` : urlPath.includes(`join`)?  `가입하기` \r\n             : urlPath.includes(`goals`)? `목표` : urlPath.includes(`exploreSearch`)? `팔로우` \r\n             : urlPath.includes(`termUse`)? `이용약관` : urlPath.includes(`policy`)? `개인정보 정책` \r\n             : urlPath.includes(`setting`)? `설정` : urlPath.includes(`text`)? `정보` \r\n             : urlPath.includes(`announcements`)? `공지사항` : urlPath.includes(`routines`) ? `기한이 있는 할 일 설정` : \r\n             urlPath.includes(`orderitem`) ? `순서 수정` : null\r\n           }\r\n          </Typography>\r\n          \r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"back\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n           {\r\n             urlPath ===`/goals`? <AddIcon onClick={moveGoalForm} /> : null\r\n           }\r\n        </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport {  Button, List  } from \"@mui/material\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';import '../../stylesheets/Goal.css';\r\n\r\nimport { getGoalsData } from \"../../api/apiCommunicate\";\r\nimport { objTodosDataResult } from \"../../atoms/todoData\";\r\n\r\n\r\nexport default function Goals() {\r\n\r\n  \r\n  /* Hook 선언 시작 */\r\n\r\n   /* atom 시작 */\r\n  \r\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);// 목표goals 아이템\r\n  let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n\r\n  console.log(\"todoDataArray\", todoDataArray)\r\n\r\n  /* Dummy State 끝 */\r\n  \r\n  useEffect(()=>{\r\n    // recoil 에서 정보 갱신이 되었으면 하는데..?\r\n    const goalItems = getGoalsData();\r\n    setDtTodos(goalItems)\r\n    // goalItems = useRecoilState(goalsData)\r\n  },[dtTodos])\r\n\r\n\r\n\r\n  /* Hook 선언 끝 */\r\n \r\n\r\n\r\n\r\n  /* 함수 시작 */\r\n\r\n\r\n  //목표수정 컴포넌트로 이동 함수 (파라미터 추가)\r\n  const moveEditGoalForm = (e) => {\r\n    window.location.replace(`/goals/goalEditForm/`+e.target.id)\r\n  }\r\n\r\n  \r\n  // //목표 수정 이벤트핸들러 함수\r\n  // async function clickGoaltoEdit(e){\r\n  //   const { id } = e.target;\r\n  //   await moveEditGoalForm(id)\r\n  // }\r\n\r\n\r\n/* 함수 끝 */\r\n\r\n\r\n  return (\r\n      <div className=\"goal-goals-list-wrap\" >\r\n            {\r\n            todoDataArray.map((data, idx) => {\r\n              return (\r\n                <React.Fragment key={data.id}>\r\n                  <div className=\"goals-list-box\" key={data.goalOrderNo}>\r\n                    <Button className=\"goals-list-button\" id={data.id} name={data.id} data={data} onClick={moveEditGoalForm} >\r\n                        <ReceiptIcon className=\"goals-list-icon\" />\r\n                        <div className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color:data.titleColor }}  ><p>{data.title}</p>\r\n                        </div>\r\n                    </Button>\r\n                    <NavigateNextIcon className=\"goal-list-arrow\" />\r\n                  </div>\r\n\r\n                </React.Fragment>\r\n              )\r\n            })\r\n          }\r\n      </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useRecoilState } from \"recoil\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport { Button } from \"@mui/material\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport { objTodosDataResult, userIdInfo } from \"../../atoms/todoData\";\r\n\r\nimport '../../stylesheets/Nav.css';\r\n\r\n\r\nexport default function MainNavBar() {\r\n\r\n  /* atom 시작 */\r\n\r\n    // atom에서 goal+todo 데이터 가져오기\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n\r\n    let [dtUser, setDtUser] = useRecoilState(userIdInfo);\r\n    let userData = JSON.parse(JSON.stringify(dtUser));\r\n    //console.log(userData)\r\n\r\n\r\n/* atom 종료 */\r\n\r\n\r\n /* 함수 시작 */\r\n\r\n  //컴포넌트로 이동 함수 (파라미터 추가)\r\n  const moveSetting = (e) => {\r\n    window.location.replace(`/setting`)\r\n  }\r\n  const moveFollowing = (e) => {\r\n    window.location.replace(`/exploreSearch`)\r\n  }\r\n\r\n /* 함수 종료 */\r\n\r\n  //하위\r\n  const [state, setState] = useState({ right: false });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  //list 표시 나중에 별도로 빼야할듯!\r\n  const SNB = (anchor) => (\r\n    <Box\r\n    className='snb_wrap'\r\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250}} //가로 길이\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      {/* } <section className='snb_user_info_wrap' style={{'background': 'red'}}> */}\r\n        {/* 유저 정보 저장 */}\r\n        {/* 로그인 하면 유저 정보 표시 */}\r\n        {/* 로그인 안되어 있으면 Me 표시 */}\r\n\r\n        {/* if 로그인 안된 경우 */}\r\n       {/* <img src=\"\" alt='유저 아이콘' />\r\n        <h1 className='snb_user_info_title'>me</h1>\r\n        <p></p>\r\n        <button>가입하기</button> */}\r\n\r\n        <section className='snb_user_info_wrap' style={{'background': ''}}>\r\n        {/* if 로그인 된 경우 */}\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" >\r\n          <IconButton onClick={moveSetting} size=\"small\" edge=\"end\" aria-label=\"back\" style={{ marginRight: \"0px\" }}>\r\n            <SettingsIcon fontSize=\"small\" sx={{ color:\"white\", stroke: \"black\", strokeWidth:1.5 }} />\r\n          </IconButton>\r\n        </Box>\r\n          {/*<button className='snb_user_setting_btn'><SettingsIcon fontSize=\"small\" /></button>*/}\r\n          <div className=\"snb-user-info-box\" display=\"flex\" justifyContent=\"flex-start\">\r\n            {userData.map((data, idx)=>{\r\n                    return (\r\n                        <React.Fragment >\r\n                          <div className=\"snb-user-info-text\" id={idx}>\r\n                            <p className='snb-user-info-name'>{data.name}</p>\r\n                          \r\n                          \r\n\r\n                            <p className='snb-user-info-mail'>{data.email}</p>\r\n                          </div>\r\n                        </React.Fragment>\r\n                     \r\n                    )\r\n                }) \r\n                }\r\n          </div>\r\n          {/* <h2 className='snb_user_info_title'>유저 닉네임</h2>\r\n          <p>유저 이메일</p> */}\r\n        </section>\r\n       \r\n        <section className='snb_user_follow_info_wrap'>\r\n          {/* Box -> hover 옵션 추가 or Button-> CSS 변경 */}\r\n          <div className='snb-follow-box' display=\"flex\" justifyContent=\"flex-start\" onClick={moveFollowing} fontSize=\"small\">\r\n            <p className='snb-follow-title' style={{paddingRight: \"20px\" }}>{`0`}팔로워</p>\r\n            <p className='snb-follow-title'>{`0`}팔로잉</p>\r\n          </div>  \r\n          \r\n        </section>\r\n       \r\n\r\n        {/* 할일 : divider 스타일 opacity 변경  */}\r\n        <Divider  />\r\n      \r\n        <section className='snb-goal-wrap'>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <p className='snb-goal-title'>목표</p>\r\n            <IconButton size=\"small\" edge=\"end\" color=\"inherit\" aria-label=\"back\">\r\n              <NavigateNextIcon className='snb-title-nav-icon' />\r\n            </IconButton>\r\n          </Box>\r\n          <div className=\"snb-goals-list-box\">\r\n            {todoDataArray.map((data, idx)=>{\r\n                    return (\r\n                      <div id={idx} className=\"snb-list-button\" data-index={idx} data={data}>\r\n                          <div className=\"snb-goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} \r\n                              style={{ color:data.titleColor }} >\r\n                            <p>{data.title}</p>\r\n                          </div>\r\n                      </div>\r\n                    )\r\n                }) \r\n                }\r\n          </div>\r\n        </section>\r\n        <Divider />\r\n\r\n        <section className='snb_routine_wrap'>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" style={{ height: \"42px\" }}>\r\n            <p className='snb-goal-title'>기한이 있는 할 일 </p>\r\n            <IconButton size=\"small\" edge=\"end\" color=\"inherit\" aria-label=\"back\" >\r\n              <NavigateNextIcon className='snb-title-nav-icon' />\r\n            </IconButton>\r\n          </Box>\r\n          {/* 기한있는 할일-> 오늘날짜보다 뒤의 날짜설정? y */}\r\n          <React.Fragment>\r\n            {todoDataArray.map((data, idx)=>{\r\n                    return (\r\n                     \r\n                      \r\n                      <div className=\"snb-todo-list-box\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color: 'gray' }}>\r\n                        {data.todos.map((todos)=>{\r\n                           {/* enddate? , feed의 check icon 각 할일에 추가 */}\r\n                          return (\r\n\r\n                            \r\n                              <div className=\"goals-listItem-text-wrap\" \r\n                                  id={todos.todoId}\r\n                                  data-index={todos.orderNo}>\r\n                            {/*}  {todos.checkYn === 'Y' ?  \r\n                            <CheckBoxIcon data-goalid={todos.goalId} data-todoid={todos.id} className=\"todos-list-check-icon\" data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                              /> : </> */}\r\n                               \r\n                                <CheckBoxOutlineBlankIcon \r\n                                  data-goalid={todos.goalId} data-todoid={todos.id} className=\"todos-list-check-icon\"/> \r\n                                <p key={todos.todoId}>{todos.title}</p>\r\n                              </div>\r\n                            )\r\n                          }) \r\n                        } \r\n                      </div>\r\n                    )\r\n                  }) \r\n                }\r\n          </React.Fragment>     \r\n        </section>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor} >\r\n          <Box >\r\n            <AppBar\r\n              \r\n              position=\"static\"\r\n              sx={{\r\n                boxShadow: \"none\",\r\n                flexDirection: \"row-reverse\",\r\n                height: \"90px\",\r\n                borderTop: \"1px solid #CCCDCD\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <Toolbar>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"back\"\r\n                  sx={{ mr: 2 }}\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                >\r\n                  <DehazeIcon />\r\n                </IconButton>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </Box>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {SNB(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {Paper, Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { ko } from \"date-fns/locale\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\nimport '../../stylesheets/CalendarBox.css';\r\nimport { objFeedCalendarOverview , objDatesData, objTodosDataResult} from \"../../atoms/todoData\";\r\nimport { getTodosOverviewData, getTodosData } from \"../../api/apiCommunicate\";\r\n\r\n\r\n\r\nexport const styles = makeStyles(() => ({ //define CSS for different date types\r\n    notInThisMonthDayPaper: {\r\n        visibility: \"hidden\",\r\n        width: \"18px\",\r\n        height: \"18px\",\r\n        backgroundColor: \"#00000000\",\r\n        fontSize: \"0.825em\",\r\n        textAlign: \"center\",\r\n        margin: \"11px\",\r\n        padding: \"1px\",\r\n    },\r\n    normalDayPaper: {\r\n        width: \"18px\",\r\n        height: \"18px\",\r\n        backgroundColor: \"#70707030\",\r\n        margin: \"11px\",\r\n        padding: \"1px\",\r\n        cursor: \"pointer\",\r\n    },  \r\n    normalDayNum: {\r\n        fontSize: \"0.5em\",\r\n        textAlign: \"center\",\r\n        color: \"#707070\",\r\n        position: \"relative\",\r\n        top: \"3em\"\r\n    },\r\n    selectedDayPaper: {\r\n        width: \"18px\",\r\n        height: \"18px\",\r\n        backgroundColor: \"#70707030\",\r\n        margin: \"11px\",\r\n        padding: \"1px\",\r\n        cursor: \"pointer\",\r\n    },\r\n    selectedDayNum: {\r\n        fontSize: \"0.5em\",\r\n        fontWeight: \"700\",\r\n        textAlign: \"center\",\r\n        textDecoration: \"underline\",\r\n        color: \"#000\",\r\n        position: \"relative\",\r\n        top: \"3em\"\r\n    },\r\n    hasTodoDayPaper: {\r\n        width: \"18px\",\r\n        height: \"18px\",\r\n        backgroundColor: \"#70707080\",\r\n        margin: \"11px\",\r\n        padding: \"1px\",\r\n        cursor: \"pointer\",\r\n    },\r\n    hasTodoDayNum: {\r\n        fontSize: \"0.5em\",\r\n        textAlign: \"center\",\r\n        color: \"#707070\",\r\n        position: \"relative\",\r\n        top: \"3em\"\r\n    },\r\n    CheckedTodoDayPaper: {\r\n        width: \"18px\",\r\n        height: \"18px\",\r\n        backgroundColor: \"#21bdbd\",\r\n        margin: \"11px\",\r\n        padding: \"1px\",\r\n        cursor: \"pointer\",\r\n    },\r\n    CheckedTodoDayNum: {\r\n        fontSize: \"0.5em\",\r\n        fontWeight: \"700\",\r\n        textAlign: \"center\",\r\n        color: \"#21bdbd90\",\r\n        position: \"relative\",\r\n        top: \"3em\"\r\n    },\r\n    todayPaper: {\r\n        width: \"18px\",\r\n        height: \"18px\",\r\n        backgroundColor: \"#70707030\",\r\n        margin: \"11px\",\r\n        padding: \"1px\",\r\n        cursor: \"pointer\",\r\n    },\r\n    todayNum: {\r\n        fontSize: \"0.5em\",\r\n        fontWeight: \"600\",\r\n        color: \"#222\",\r\n        textAlign: \"center\",\r\n        position: \"relative\",\r\n        top: \"3em\"\r\n    },\r\n\r\n\r\n}));\r\n\r\nexport default function CalendarBox(props) {\r\n\r\n/* state 선언 시작 */\r\n\r\n//환경변수\r\nconst USER_NUM_ID = process.env.REACT_APP_USER_NUM_ID;\r\n\r\nconst [objDate, setObjDate] = useRecoilState(objDatesData);\r\nconst copy_objDate = {...objDate};\r\nlet [dtFeedCalendarOverview, setDtFeedCalendarOverview] = useRecoilState(objFeedCalendarOverview);\r\nlet [dtObjTodosDataResult, setDtObjTodosDataResult] = useRecoilState(objTodosDataResult);\r\n\r\nconst today = new Date(); // 오늘 날짜 객체\r\nconst classes = styles(); // import those CSS\r\nconst [selectedDate, setselectedDate] = useState(new Date(objDate.dtFeedCalendarDate)); //현재 선택된 날짜 state -> Feed 불러낼 때 사용\r\n\r\nlet todoObj = {};\r\n\r\n/* state 선언 종료 */\r\n\r\n/* hook 선언 시작 */\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    //selectedDate 변경시 Tododata의 dtFeedCalendarDate\r\n    copy_objDate.dtFeedCalendarDate = selectedDate;\r\n    setObjDate(copy_objDate);\r\n    const localeSelectedDate = selectedDate.toJSON().substring(0, 10);\r\n    const localeSelectedDateYm = selectedDate.toJSON().substring(0, 7);\r\n\r\n\r\n    //컴포넌트 실행 시 서버에서 값 받아서 Atom에 업데이트\r\n\r\n    //한 달 todo 조회 -> 아톰에 캘린더 표시 TODO 값 업데이트\r\n    //objDate.dtFeedCalendarDate로 feed 에서 쓰는 objTodosDataResult 받아와주기\r\n    const newTodoOverviewData = getTodosOverviewData(USER_NUM_ID, localeSelectedDateYm)\r\n    //setDtFeedCalendarOverview(newTodoOverviewData);\r\n    //만약 값이 바뀌면 업데이트 해야하나?\r\n\r\n    //당일 todo 조회하기 -> 아톰에 Feed 표시 TODO 값 업데이트\r\n    const newTodoData = getTodosData(USER_NUM_ID, localeSelectedDate)\r\n    //setDtObjTodosDataResult(newTodoData)\r\n\r\n},[selectedDate])\r\n    \r\n    \r\n/* hook 선언 종료 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n\r\n\r\n\r\n\r\n// 데이터가 있는 날\r\n// 데이터가 있는 날 : todo 갯수 / 데이터가 모두 완료된 날 \r\n\r\nconst theDayhasTodoArr = dtFeedCalendarOverview.map((data,i) => data.arrTodoInfo[0].numTodoDay);\r\n    \r\n//ajax 통신을 통해 받아온 값 (numCountTodo, numTodoCount, completeYn)\r\n    dtFeedCalendarOverview.map((item, i) =>  todoObj[item.arrTodoInfo[0].numTodoDay] = item.arrTodoInfo[0].ynComplete!=='Y'? item.arrTodoInfo[0].numTodoCount : '✓');\r\n\r\n    //날짜 타일 변경 함수\r\n    function getDayElement(day, selectedDate, isInCurrentMonth, dayComponent) {\r\n\r\n\r\n        //boolean 으로 바꿔주는 작업\r\n        //데이터가 있을 때 (todoData = todo 데이터가 있는 날짜) -> true\r\n        const isHasTodoData = theDayhasTodoArr.includes(day.getDate()); \r\n        //클릭된 날짜 \r\n        const isSelected = day.getDate() === selectedDate.getDate();\r\n        //오늘 날짜\r\n        const isToday = day.getDate() === today.getDate() && day.getMonth() === today.getMonth();\r\n\r\n        //dateTile 생성\r\n        let dateTile\r\n\r\n        if (isInCurrentMonth) { //데이터 타일 반환\r\n            if (isHasTodoData) { //HasTodoData가 있을 때 = todo가 있는 날 -> 갯수 표시 todoChecked가 y 면 색상변환 \r\n\r\n                let d = day.getDate();\r\n                // console.log(todoObj, d)\r\n                // console.log('todoObj[d]', todoObj[d])\r\n\r\n                dateTile = (\r\n                    <Paper className={isNaN(todoObj[d])? classes.CheckedTodoDayPaper : isHasTodoData? classes.hasTodoDayPaper : isSelected ? classes.selectedDayPaper : isToday ? classes.todayPaper : classes.normalDayPaper } ref={isNaN(todoObj[d])? classes.CheckedTodoDayPaper : isHasTodoData? classes.hasTodoDayPaper : isSelected? classes.selectedDayPaper : isToday? classes.todayPaper : classes.normalDayPaper}>\r\n                        <Grid className={isNaN(todoObj[d])? classes.CheckedTodoDayNum : isHasTodoData? classes.hasTodoDayNum : isSelected? classes.selectedDayNum : isToday? classes.todayNum : classes.normalDayNum}>\r\n                            {day.getDate()}\r\n                        </Grid>\r\n                       {isHasTodoData? <span className='todoDataNum'>{todoObj[d]}</span> : null}\r\n                    </Paper>\r\n                    )\r\n            } else {\r\n                dateTile = (\r\n                <Paper className={isSelected ? classes.selectedDayPaper : isToday ? classes.todayPaper : classes.normalDayPaper}>   \r\n                    <Grid className={isSelected? classes.selectedDayNum : isToday? classes.todayNum : classes.normalDayNum}> {day.getDate()}</Grid>\r\n                </Paper>)\r\n            }\r\n        } \r\n        else {\r\n            dateTile = (<Paper className={classes.notInThisMonthDayPaper}>\r\n                <Grid className={isSelected? classes.selectedDayNum : isToday? classes.todayNum : classes.normalDayNum}>\r\n                    {day.getDate()}\r\n                </Grid>\r\n            </Paper>)\r\n\r\n        }\r\n        return dateTile;\r\n    }\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return(\r\n          <MuiPickersUtilsProvider locale={ko} utils={DateFnsUtils} >\r\n                <DatePicker\r\n                    value={selectedDate}\r\n                    onChange={setselectedDate} //클릭하면 selectedDate (선택한 날짜로 보냄)\r\n                    variant=\"static\"\r\n                    inputFormat={\"yyyy-MM-dd\"}\r\n                    mask={\"____-__-__\"}\r\n                    //renderDay props로 getDayElement 전달\r\n                    renderDay={(day, selectedDate, isInCurrentMonth, dayComponent) => getDayElement(day, selectedDate, isInCurrentMonth, dayComponent)}\r\n\r\n                />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Avatar, Stack } from '@mui/material';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport CalendarBox from './CalendarBox';\r\n\r\nexport default function Explore(props) {\r\n\r\n    let calendarData = props.calendarData;\r\n     //목표 생성 페이지 이동\r\n    function moveExForm(){\r\n        window.location.replace(\"/exploreSearch\")\r\n    }\r\n\r\n    return (\r\n        <Box className='explore-wrap' sx={{ position: 'relative', width: '24vw', minWidth: '350px', top: 0, padding: '2em'}} >        \r\n            <Stack direction=\"row\" spacing={1}>\r\n                {/* Following users data 필요 */}\r\n                <Avatar sx={{ backgroundColor: '#fff', color: '#111', fontWeight: 'bold', border: '2px solid #222' }}>N</Avatar>\r\n                <Avatar sx={{ backgroundColor: '#fff', color: '#111', fontWeight: 'bold', border: '2px solid #222' }}>\r\n                    <AddIcon onClick={moveExForm} />\r\n                </Avatar>\r\n            </Stack>\r\n            <h1 className='explore-user-nickname'>Nickname</h1>\r\n            <p className='explore-user-info'>프로필에 자기소개를 입력해보세요</p>\r\n            <CalendarBox calendarData={calendarData} />       \r\n        </Box>\r\n    );\r\n}","import { Modal } from \"@mui/material\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport { ko } from \"date-fns/locale\";\r\n\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport WrapTextIcon from '@material-ui/icons/WrapText';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { objTodosDataResult, objDatesData } from \"../../atoms/todoData\";\r\n\r\n\r\nexport function TodoModal (props) {\r\n\r\n    /* hook 선언 시작 */\r\n\r\n    const history = useHistory();\r\n\r\n    /* hook 선언 종료 */\r\n\r\n    /* state 선언 시작 */\r\n\r\n    /* atom 선언 시작 */\r\n\r\n    let dtDate = useRecoilValue(objDatesData);\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n\r\n    /* atom 선언 종료 */\r\n\r\n    const index = props.index;\r\n    const todos = props.todos;\r\n    const [calendarActiveIndex, setCalendarActiveIndex] = useState(null);\r\n\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //모달 onoff 핸들러\r\n    const modalActive = props.modalActive;\r\n\r\n    //캘린더 onoff 핸들러\r\n    const setModalActiveIndex = props.setModalActiveIndex;\r\n\r\n    //모달 수정 클릭 핸들러\r\n    const todoModalEditHandler = props.todoModalEditHandler;\r\n\r\n\r\n    //모달 내일하기 클릭 핸들러 \r\n    const todoModalDelayHandler = (e) => {\r\n    const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n    const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n        todoDataArray.map(data=>\r\n            data.todos.map(todo=>{\r\n                if(todo.goalId === goal_id && todo.todoId === todo_id && todo.date === todo.endRepeatDate){\r\n                todo.date = dtDate.dtTomorrow;\r\n                todo.endRepeatDate = dtDate.dtTomorrow;\r\n                }\r\n            })\r\n        )\r\n        setModalActiveIndex(null)\r\n    }\r\n    \r\n    //모달 순서 변경 클릭 핸들러\r\n    const todoModalOrderHandler = (e) => {\r\n        console.log(e.currentTarget)\r\n        history.push('/orderitem');\r\n    }\r\n\r\n    //모달 삭제 클릭 핸들러\r\n    const todoModalDeleteHandler = (e) => {\r\n        const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n        const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n\r\n        todoDataArray.map(data=>\r\n            data.todos.map((todo, index)=>{\r\n                if(todo.goalId === goal_id && todo.todoId === todo_id)  data.todos.splice(index, 1)\r\n            })\r\n        )\r\n        setDtTodos(todoDataArray) ;//setDtTodos 이용해 state 변경\r\n        setModalActiveIndex();\r\n    }\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return(\r\n        <>\r\n        {/* {console.log(\"todos.date\", todos.date)} */}\r\n        <DatePickerCalender \r\n        calendarActiveIndex={calendarActiveIndex} \r\n        setCalendarActiveIndex={setCalendarActiveIndex}\r\n        setModalActiveIndex={setModalActiveIndex}\r\n        todos={todos}\r\n        calendarActive={index === calendarActiveIndex? true : false}\r\n        /> \r\n\r\n        <Modal open={modalActive}\r\n        onClose={()=>{setModalActiveIndex(null)}}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"feed-todo-modal-box\"\r\n         >\r\n        \r\n            <div className=\"feed-todo-modal-wrap\" >\r\n                <p className=\"feed-todo-modal-head\">{todos.title}</p>\r\n                <div className=\"feed-todo-modal-icon-wrap\">\r\n                    <button className=\"feed-todo-modal-icon feed-todo-edit-icon\" \r\n                    data-goalid={todos.goalId} data-todoid={todos.id} \r\n                    onClick={todoModalEditHandler}\r\n                     >\r\n                        <EditIcon className=\"feed-modal-icon\" /><span>수정</span>\r\n                    </button>\r\n                    <button className=\"feed-todo-modal-icon feed-todo-delay-icon\" \r\n                    data-goalid={todos.goalId} data-todoid={todos.id} \r\n                    onClick={todoModalDelayHandler}\r\n                    >\r\n                        <SkipNextIcon className=\"feed-modal-icon\" /><span>내일 하기</span>\r\n                    </button>\r\n                    <button className=\"feed-todo-modal-icon feed-todo-date-change-icon\" \r\n                    data-goalid={todos.goalId} data-todoid={todos.id} \r\n                    onClick={()=>{\r\n                        setCalendarActiveIndex(todos.id)\r\n                        //  console.log(todos.todoId, calendarActiveIndex)\r\n                        }}\r\n                    >\r\n                        <SyncAltIcon className=\"feed-modal-icon\" /><span>날짜 바꾸기</span>\r\n                    </button>\r\n                    <button className=\"feed-todo-modal-icon feed-todo-order-change-icon\" \r\n                    onClick={todoModalOrderHandler}\r\n                    >\r\n                        <WrapTextIcon className=\"feed-modal-icon\" /><span>순서 변경</span>\r\n                    </button>\r\n                    <button className=\"feed-todo-modal-icon feed-todo-delete-icon\" \r\n                    data-goalid={todos.goalId} data-todoid={todos.id} \r\n                    onClick={todoModalDeleteHandler}\r\n                    >\r\n                        <DeleteOutlineIcon className=\"feed-modal-icon\" /><span>삭제</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport function DatePickerCalender(props) {\r\n\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n    const todos = props.todos;\r\n    const new_date = new Date(todos.date);\r\n    let [newDate, setNewDate] = useState(new_date);\r\n\r\n    const week = new Array('일', '월', '화', '수', '목', '금', '토');\r\n\r\n    const calendarActive = props.calendarActive;\r\n    const setCalendarActiveIndex = props.setCalendarActiveIndex;\r\n\r\n\r\n    //모달 내 선택한 날짜 상단 표시\r\n    const selectedDate = newDate.toJSON().substring(0,10);\r\n\r\n    let selectedYear = newDate.getFullYear();\r\n    let selectedMonth = newDate.getMonth()+1;\r\n    let selectedDay = newDate.getDate();\r\n    let selectedLabel = newDate.getDay();\r\n    let todayLabel = week[selectedLabel];\r\n\r\n\r\n        //모달 날짜 바꾸기 캘린더 확인 핸들러\r\n        const todoModalDateChangeHandler = (e) => {\r\n            const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n            const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n            todoDataArray.map((data)=>\r\n                data.todos.map((todo)=> {\r\n                    if(todo.goalId === goal_id && todo.id === todo_id && todo.date === todo.endRepeatDate){\r\n                    todo.date = selectedDate;\r\n                    todo.endRepeatDate = selectedDate;\r\n                    }\r\n                })\r\n            )\r\n            setCalendarActiveIndex(null)\r\n        }\r\n\r\n\r\n    return (\r\n        <Modal open={calendarActive}\r\n        onClose={()=>{setCalendarActiveIndex(null)}}\r\n        aria-labelledby=\"calendar-title\"\r\n        aria-describedby=\"calendar-description\"\r\n        className=\"calendar-wrap\"\r\n         >\r\n        <div className=\"calendar-box\">\r\n            <LocalizationProvider locale={ko} dateAdapter={AdapterDateFns}>\r\n                <div className=\"calendar-title-wrap\">\r\n                    <p>선택한 날짜</p>\r\n                    <span>{selectedYear +`년 `+ selectedMonth +`월 `+ selectedDay+ `일 ` + todayLabel + `요일`}</span>\r\n                </div>\r\n                <CalendarPicker className=\"calendar-picker\" date={newDate} onChange={(newDate) => setNewDate(newDate)} />\r\n                <div className=\"calendar-btn-box\">\r\n                    <button className=\"calendar-ok-btn\" \r\n                    data-goalid={todos.goalId}\r\n                    data-todoid={todos.id}\r\n                    data-selecteddate={selectedDate} \r\n                    onClick={todoModalDateChangeHandler}>\r\n                        확인\r\n                    </button> \r\n                    <button className=\"calendar-cancel-btn\" \r\n                    onClick={()=>{setCalendarActiveIndex(null)}}>\r\n                        취소\r\n                </button>\r\n                </div>\r\n            </LocalizationProvider>\r\n        </div>\r\n        </Modal>  \r\n    )\r\n\r\n\r\n}","import { Modal } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\n\r\nexport function LikeListModal (props) {\r\n\r\n    /* hook 선언 시작 */\r\n\r\n    const history = useHistory();\r\n\r\n    /* hook 선언 종료 */\r\n\r\n    /* state 선언 시작 */\r\n\r\n\r\n    /* atom 선언 시작 */\r\n\r\n\r\n    /* atom 선언 종료 */\r\n\r\n    const index = props.index;\r\n    const likesUser = props.likesUser;\r\n    const likeModalActiveIndex = props.likeModalActiveIndex;\r\n    const setLikeModalActiveIndex = props.setLikeModalActiveIndex;\r\n    // console.log(likesUser)\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //모달 onoff 핸들러\r\n    const modalActive = props.modalActive;\r\n\r\n    //캘린더 onoff 핸들러\r\n    const setModalActiveIndex = props.setModalActiveIndex;\r\n\r\n\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return(\r\n        <>\r\n        <Modal open={likeModalActiveIndex}\r\n        onClose={()=>{setLikeModalActiveIndex(false)}}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"feed-todo-modal-box\"\r\n         >\r\n        \r\n            <ul className=\"like-todo-modal-wrap\" >\r\n            <h1>좋아요</h1>\r\n\r\n                {likesUser.map((data)=>{\r\n                    const userInfo = data.user\r\n                    const uriParams = userInfo.account\r\n                    return (\r\n                        <li className=\"like-todo-modal-data\">\r\n                            <Link to={uriParams}>\r\n                                <p>{userInfo.name}</p>\r\n                                <p>{userInfo.introText}</p>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n        </Modal>  \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\n\r\nimport { objTodosDataResult, objDatesData  } from \"../../atoms/todoData\";\r\n\r\nimport { TodoModal } from \"./TodoModal\";\r\nimport { LikeListModal } from \"./LikeListModal\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n export default function FeedTodoData(props) {\r\n\r\n\r\n    /* hook 선언 시작 */\r\n    // let todo_input = useRef([]);\r\n    let history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    // const inputElement = todo_input.current;\r\n    //   },[]);\r\n    /* hook 선언 종료 */\r\n    \r\n\r\n    /* atom 선언 시작 */\r\n\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n\r\n    /* atom 선언 종료 */\r\n\r\n    /* state 선언 시작 */\r\n  \r\n    const todos = props.todos; \r\n    const index = props.todos.todoId;\r\n\r\n    const [readOnly, setReadOnly] = useState(true);\r\n    const [modalActiveIndex, setModalActiveIndex] = useState(false);\r\n    const [likeModalActiveIndex, setLikeModalActiveIndex] = useState(false)\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    const activeHandler = (index) => {\r\n        setModalActiveIndex(true)\r\n    }\r\n\r\n    const likeActiveHandler = (index) => {\r\n        setLikeModalActiveIndex(true)\r\n        // if (index === likeModalActiveIndex) {\r\n        //     setLikeModalActiveIndex(null);\r\n        // } else {\r\n        //     setLikeModalActiveIndex(index);\r\n        // }\r\n      }\r\n\r\n    const readOnlyHandler = (index) => {\r\n        if (index === modalActiveIndex) {\r\n          setModalActiveIndex(null);\r\n        } else {\r\n          setModalActiveIndex(index);\r\n        }\r\n      }\r\n\r\n      //Todo checkbox 핸들러\r\n    const onClickTodoCheckYn = (e) => {\r\n      e.stopPropagation(); \r\n      const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n      const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n\r\n      todoDataArray.map(data=>\r\n          data.todos.map(todo=>{\r\n              if(todo.goalId === goal_id && todo.id === todo_id){\r\n                  todo.checkYn === 'Y' ? todo.checkYn = 'N' : todo.checkYn = 'Y'\r\n                  console.log(\"todo.checkYn \" , todo.checkYn)\r\n              }\r\n          })\r\n      )\r\n      setDtTodos(todoDataArray) ;//setDtTodos 이용해 state 변경\r\n    }\r\n\r\n    //모달 수정 클릭 핸들러들\r\n\r\n\r\n    //엔터키 인식 readonly 변경\r\n    const enterKeyEventHandler = (e) => {\r\n        if(e.key === 'Enter' || e.code === 'NumpadEnter'){ \r\n            setReadOnly(true)\r\n        }\r\n    }\r\n\r\n    //외부 클릭 readonly 변경\r\n    const inputLostFocusEventHandler = (e) => {\r\n        setReadOnly(true)\r\n    }\r\n\r\n    //투두 수정 버튼 클릭 이벤트 핸들러\r\n    const todoModalEditHandler = (e) => {\r\n        readOnly === false ? setReadOnly(true) : setReadOnly(false);\r\n        setModalActiveIndex(null);\r\n    }\r\n\r\n    //모달 수정 클릭 핸들러\r\n    const todoInputChangeHandler = (e) => {\r\n        // console.log(\"입력 정보 \", e.currentTarget.value)\r\n    \r\n        const goal_id = parseInt(e.currentTarget.dataset.goalid);\r\n        const todo_id = parseInt(e.currentTarget.dataset.todoid);\r\n    \r\n    \r\n        let current_value = e.currentTarget.value;\r\n    \r\n        todoDataArray.map(data=>\r\n            data.todos.map(todo=>{\r\n                if(todo.goalId === goal_id && todo.id === todo_id){\r\n                    todo.title = current_value;\r\n                }\r\n            })\r\n        )\r\n        setDtTodos(todoDataArray) ;//setDtTodos 이용해 state 변경\r\n    }\r\n\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"todos-list-box\" data-todos={todos}>\r\n            <TodoModal index={index} modalActive={modalActiveIndex} todos={todos} setModalActiveIndex={setModalActiveIndex} \r\n            readOnlyHandler={readOnlyHandler} todoModalEditHandler={todoModalEditHandler}\r\n            /> \r\n            <LikeListModal index={index} likeModalActive={likeModalActiveIndex}\r\n            likeModalActiveIndex={likeModalActiveIndex} setLikeModalActiveIndex={setLikeModalActiveIndex} likesUser={todos.likes} />\r\n\r\n            <div className=\"goals-listItem-text-wrap\" \r\n            id={todos.todoId}\r\n            data-index={todos.orderNo}>\r\n                    {todos.checkYn === 'Y' ?  \r\n                    <CheckBoxIcon data-goalid={todos.goalId} data-todoid={todos.todoId} className=\"todos-list-check-icon\" data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                    /> : \r\n                    <CheckBoxOutlineBlankIcon data-goalid={todos.goalId} data-todoid={todos.todoId} className=\"todos-list-check-icon\"\r\n                    data-check={todos.checkYn} onClick={onClickTodoCheckYn}\r\n                    /> }\r\n                        \r\n            <TodoList todos={todos} \r\n            readOnly={readOnly}\r\n            // ref={inputElement}\r\n            activeHandler={activeHandler}\r\n            likeActiveHandler={likeActiveHandler}\r\n            todoInputChangeHandler={todoInputChangeHandler} inputLostFocusEventHandler={inputLostFocusEventHandler} enterKeyEventHandler={enterKeyEventHandler} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n} \r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n  \r\n    const inputRef = useRef(null);\r\n\r\n    const todos = props.todos;\r\n    const readOnly = props.readOnly;\r\n    const activeHandler = props.activeHandler;\r\n    const likeActiveHandler = props.likeActiveHandler;\r\n    const todoInputChangeHandler = props.todoInputChangeHandler;\r\n    const inputLostFocusEventHandler = props.inputLostFocusEventHandler;\r\n    const enterKeyEventHandler = props.enterKeyEventHandler;\r\n\r\n\r\n    return (\r\n        <div className=\"todos-list-wrap\">\r\n            <input\r\n            className=\"todos-list-input\" key={todos.todoId} id=\"todo-input\" type=\"text\" \r\n            maxLength=\"50\"\r\n            size={inputRef.current?.value.length}\r\n            ref={inputRef}\r\n            name={todos.title} \r\n            data-orderno={todos.orderNo}\r\n            data-goalid={todos.goalId} \r\n            data-todoid={todos.id} \r\n            value={todos.title} \r\n            readOnly={readOnly}\r\n            onClick={()=>activeHandler(todos.id)}\r\n            onChange={todoInputChangeHandler}\r\n            onBlur={inputLostFocusEventHandler}\r\n            onKeyDown={enterKeyEventHandler}\r\n            />\r\n                {/* 만약 계정 주인이면 좋아요 누른 사람 보여주고, 다른 계정 유저면 좋아요 클릭되기 */}\r\n            <Button className=\"todos-list-like-btn\" onClick={()=>{likeActiveHandler(todos.id)}}><ThumbUpAltIcon  />\r\n            <span className=\"todos-list-like-num\">{todos.likes.length}</span>\r\n            </Button>\r\n        </div>\r\n        )\r\n})","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport FeedTodoData  from \"./FeedTodoData\";\r\n\r\n\r\n export default function FeedTodoGoal(props) {\r\n\r\n    const data = props.data; \r\n    const idx = props.idx;\r\n    const modalOpen = props.modalOpen;\r\n    const onClickGoalHandler = props.onClickGoalHandler;\r\n\r\n\r\n    return (\r\n        <div className=\"goals-list-box\" key={data.goalOrderNo}>\r\n            <Button className=\"goals-list-button\" id={idx} data-index={idx} data={data} onClick={onClickGoalHandler}>\r\n                <ReceiptIcon className=\"goals-list-icon\" />\r\n                <div className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color:data.titleColor }}  ><p>{data.title}</p>\r\n                </div>\r\n                <p className=\"goals-list-plus-icon-wrap\">\r\n                <AddCircleIcon className=\"goals-list-plus-icon\"/>\r\n                </p>\r\n            </Button>\r\n            <div className=\"todos-list-cont\">\r\n                {data.todos.map((data, idx)=>{\r\n                    return (\r\n                    <React.Fragment >\r\n                    <FeedTodoData todos={data} modalOpen={modalOpen} key={'key'+data.todoId}\r\n                    />\r\n                    </React.Fragment>\r\n                    )\r\n                }) \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n} ","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nimport { objTodosDataResult } from \"../../atoms/todoData\";\r\n\r\n\r\nexport default function CreateTodoForm (props) {\r\n\r\n    /* hook 선언 시작 */\r\n\r\n    let createInput = useRef();\r\n\r\n    const { register, handleSubmit, errors, watch } = useForm({ mode: \"onChange\" });\r\n    useEffect(() => {\r\n        const inputElement = createInput.current;\r\n        inputElement.focus();\r\n      }, []);\r\n\r\n    /* hook 선언 종료 */\r\n\r\n    /* atom 시작 */\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n    console.log(\"todoDataArray\", todoDataArray)\r\n\r\n    /* atom 종료 */\r\n\r\n    /* state 선언 시작 */\r\n\r\n    const dtDate = props.dtDate;\r\n    const goal_id = props.goalId;\r\n    const new_todo_id = props.todoLength+1;\r\n    const new_order_no = props.todoLength+1;\r\n    const createTodoFieldReset = props.createTodoFieldReset;\r\n\r\n    let createTodoState = {\r\n        \"id\": goal_id,\r\n        \"todoId\": new_todo_id,\r\n        \"orderNo\": new_order_no,\r\n        \"title\": \"\",\r\n        \"date\": dtDate.dtToday,\r\n        \"startRepeatDate\": dtDate.dtToday,\r\n        \"endRepeatDate\": dtDate.dtToday,\r\n        \"repeatMonYn\":\"n\",\r\n        \"repeatTueYn\":\"n\",\r\n        \"repeatWenYn\":\"n\",\r\n        \"repeatThuYn\":\"n\",\r\n        \"repeatFriYn\":\"n\",\r\n        \"repeatSatYn\":\"n\",\r\n        \"repeatSunYn\":\"n\",\r\n        \"checkYn\": \"N\",\r\n        \"likes\":[],\r\n    };\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //createTodoForm에 값 없을 때 사라지게\r\n    const inputValueCheckHandler =  (e) => { \r\n        if(e.currentTarget.value === \"\") {\r\n            createTodoFieldReset()\r\n        } else {\r\n            createTodoStateSubmit(e)\r\n        }\r\n    }\r\n    //엔터 클릭 시 inputValueCheckHandler 실행\r\n    const onKeyPressHandler = (e) => {\r\n        if(e.key === 'Enter' || e.code === 'NumpadEnter') inputValueCheckHandler(e)\r\n    }\r\n\r\n    //field에 글자 입력 시 createTodoState 객체 title 값 변경\r\n    const onChangeCreateTodofield = (e) => {\r\n        createTodoState.title = e.currentTarget.value;\r\n    }\r\n\r\n    //새로운 todo 넣기 / goal객체 찾아서 todos에 push\r\n    const createTodoStateSubmit = (e) => {\r\n        todoDataArray.map(data=>{\r\n                if(data.id === goal_id){\r\n                    data.todos.push(createTodoState)\r\n                }\r\n            }\r\n        )\r\n        setDtTodos(todoDataArray)\r\n        createTodoFieldReset()\r\n    }\r\n\r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"create-todo-form\">\r\n            <CheckBoxOutlineBlankIcon className=\"create-todo-check-icon\"/>\r\n            <input ref={createInput} id=\"todo-input\" className=\"create-todo-field\"  placeholder=\"할 일을 입력해주세요.\" type=\"text\" maxLength=\"50\" \r\n            onChange={onChangeCreateTodofield}\r\n            onBlur={inputValueCheckHandler}\r\n            onKeyPress={onKeyPressHandler} \r\n            /> \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport { ko } from \"date-fns/locale\";\r\nimport FeedTodoGoal from './FeedTodoGoal';\r\nimport {  Modal } from \"@mui/material\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport EventBusyIcon from '@material-ui/icons/EventBusy';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nimport { objTodosDataResult, objDatesData } from \"../../atoms/todoData\";\r\nimport CreateTodoForm from \"./CreateTodoForm\";\r\nimport '../../stylesheets/Feed.css'\r\n\r\nexport default function Feed() {\r\n\r\n/* hook 선언 시작 */\r\n\r\nlet history = useHistory();\r\n\r\n/* hook 선언 종료 */\r\n\r\n/* state 선언 시작 */\r\n\r\n    //all todos 수정 모달 onoff\r\n    const [allTodoModalActive, setAllTodoModalActive] = useState(false);\r\n\r\n    //수정 모달에서 캘린더 onoff\r\n    const [allTodoCalendarActive, setAllTodoCalendarActive] = useState(false);\r\n\r\n    //캘린더로 선택한 날짜\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n\r\n/* atom 시작 */\r\n\r\n    // atom에서 goal+todo 데이터 가져오기\r\n    let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    let todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n    let dtDate = useRecoilValue(objDatesData);\r\n\r\n/* atom 종료 */\r\n\r\n//날짜 정보값 dtToday 오늘 dtTomorrow 내일 dtFeedCalendarDate 캘린더에서 선택한 날짜\r\n\r\n//목표 클릭 여부 확인 배열 생성\r\nlet [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false) );\r\n\r\n\r\n/* state 선언 종료 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\n//Goal 클릭 핸들러 \r\nconst onClickGoalHandler = (e) => {\r\n    const index = e.currentTarget.dataset.index;\r\n    const clicked_arr = Array(todoDataArray.length).fill(false) ;\r\n    clicked_arr[index] = true;\r\n    setIsGoalSelected(clicked_arr)\r\n}\r\n\r\n//createTodoForm에 값 없을 때 사라지게\r\nconst createTodoFieldReset = (e) => {\r\n    const clicked_arr = Array(todoDataArray.length).fill(false) ;\r\n    setIsGoalSelected(clicked_arr);\r\n}\r\n\r\n//모달 내부 함수 시작\r\n\r\n//미완료 할 일 오늘 하기\r\n//만약 checkYn이 Y가 아니면 Y로 바꾸고 dtTodos 업데이트\r\nconst checkNdoitToday = () => {\r\n    todoDataArray.map(data=>\r\n        data.todos.map((todo)=>{\r\n            return todo.checkYn !== 'Y' ? todo.checkYn = 'Y' : null\r\n        })\r\n    )\r\n    setDtTodos(todoDataArray);\r\n    setAllTodoModalActive(false);\r\n}\r\n\r\n\r\n//할 일 다른 날 하기 캘린더 on\r\nconst checkNdoitCalendarOn = () => {\r\n    todoDataArray.map(data=>\r\n        //N이 없으면 나타나지 않아야 한다!!!\r\n        data.todos.map((todo)=>{\r\n            if(todo.checkYn !== 'N') return false\r\n            else setAllTodoCalendarActive(true);\r\n        })\r\n    )\r\n    \r\n}\r\n\r\n//미완료 할 일 다른 날 하기 확인 클릭\r\n//캘린더에서 선택한 selectedDate를 YYYY-MM-DD 방식으로 바꿔서\r\n//checkYn 이 N인 것들에 적용해준다.\r\nconst submitDoitOtherDay = (selectedDate) => {\r\n    const newDate = selectedDate.toJSON().substring(0, 10);\r\n\r\n    todoDataArray.map(data=>\r\n        data.todos.map((todo)=>{\r\n            return todo.checkYn !== 'Y' ? todo.date = newDate : null;\r\n           //endRepeatDate 가 같은 날일 경우도 처리해야 하나?\r\n           //todo.endRepeatDate = newDate\r\n        })\r\n    )\r\n    setDtTodos(todoDataArray);\r\n    setAllTodoCalendarActive(false);\r\n    setAllTodoModalActive(false);\r\n}\r\n\r\n//미완료 할 일 삭제\r\n//checkYn이 N이 아닌 것들만 모아서 (filter) todos를 바꿔준다\r\nconst checkNdelete = () => {\r\n    todoDataArray.map(data=> {\r\n            const checkedArr = data.todos.filter(todo=> todo.checkYn !== 'N')\r\n            data.todos = checkedArr;\r\n        }\r\n    )\r\n    setDtTodos(todoDataArray);\r\n    setAllTodoModalActive(false);\r\n}\r\n\r\n//모든 할 일 삭제\r\n//todos를 빈 배열로 변경해서 todos 를 비워버림\r\nconst allTodoDelete = () => {\r\n    todoDataArray.map(data=> {\r\n        const cleanArr = [];\r\n        data.todos = cleanArr;\r\n        }\r\n    )\r\n    setDtTodos(todoDataArray);\r\n    setAllTodoModalActive(false);\r\n}\r\n\r\n\r\n/* 함수 선언 끝 */\r\n\r\n    return (\r\n        <div className='feed-wrap'>\r\n            <AllTodoCalendar \r\n            selectedDate={selectedDate} setSelectedDate={setSelectedDate}\r\n            allTodoCalendarActive={allTodoCalendarActive} \r\n            setAllTodoCalendarActive={setAllTodoCalendarActive} \r\n            submitDoitOtherDay={submitDoitOtherDay} />\r\n\r\n            <AllTodoEditModal \r\n            allTodoModalActive={allTodoModalActive} \r\n            setAllTodoModalActive={setAllTodoModalActive}\r\n            checkNdoitToday={checkNdoitToday}\r\n            checkNdoitCalendarOn={checkNdoitCalendarOn}\r\n            checkNdelete={checkNdelete}\r\n            allTodoDelete={allTodoDelete}\r\n            dtDate={dtDate} />\r\n            <h2 className=\"feed-title\">Feed</h2>\r\n            <div className=\"goals-list-wrap\" >\r\n                {\r\n                    todoDataArray.map((data, idx) => {\r\n\r\n                        return (<React.Fragment key={'feed'+idx}>\r\n                        <FeedTodoGoal \r\n                        data={data} idx={idx}\r\n                        onClickGoalHandler={onClickGoalHandler}\r\n                        />\r\n                        {isGoalSelected[idx] ? <CreateTodoForm \r\n                        dtDate={dtDate} goalId={data.id} \r\n                        todoLength={data.todos.length}\r\n                        createTodoFieldReset={createTodoFieldReset}\r\n                        /> :null}\r\n                        </React.Fragment>\r\n                        )\r\n                    })\r\n                    \r\n                }\r\n            </div>\r\n            <button className=\"feed-day-all-todo-edit\" title=\"현재 날짜의 모든 할 일 수정\" onClick={()=>{setAllTodoModalActive(true)}}><MoreHorizIcon /></button>\r\n            <button className=\"feed-move-to-routines\" title=\"기간이 있는 할 일 작성하기\" onClick={()=>{history.push(\"/routines\")}}><BorderColorIcon /></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function AllTodoEditModal (props) {\r\n\r\n    const allTodoModalActive = props.allTodoModalActive;\r\n    const setAllTodoModalActive = props.setAllTodoModalActive;\r\n    const checkNdoitToday = props.checkNdoitToday;\r\n    const checkNdoitCalendarOn = props.checkNdoitCalendarOn;\r\n    const checkNdelete = props.checkNdelete;\r\n    const allTodoDelete = props.allTodoDelete;\r\n\r\n    return (\r\n        <Modal open={allTodoModalActive}\r\n        onClose={()=>{setAllTodoModalActive(false)}}\r\n        aria-labelledby=\"all-todo-modal-title\"\r\n        aria-describedby=\"all-modal-description\"\r\n        className=\"all-todo-modal-box\"\r\n         >\r\n        \r\n            <div className=\"all-todo-modal-wrap\" >\r\n                <p className=\"all-todo-modal-head\">현재 날짜의 모든 할 일 수정</p>\r\n                <div className=\"all-todo-modal-icon-wrap\">\r\n                    <button className=\"all-todo-modal-icon\" onClick={checkNdoitToday}>\r\n                       <EventAvailableIcon className=\"feed-modal-icon\" /><span>미완료 할 일<br/>전부 완료 하기</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={()=>{checkNdoitCalendarOn()}}>\r\n                       <EventNoteIcon className=\"feed-modal-icon\" /><span>미완료 할 일<br/>다른 날 하기</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={checkNdelete}>\r\n                       <EventBusyIcon className=\"feed-modal-icon\" /><span>미완료 할 일<br/>삭제</span>\r\n                    </button>\r\n                    <button className=\"all-todo-modal-icon\" onClick={allTodoDelete}>\r\n                       <BackspaceIcon className=\"feed-modal-icon\" /><span>모든 할 일<br/>삭제</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>  \r\n    )\r\n}\r\n\r\nexport function AllTodoCalendar (props) {\r\n\r\n    const selectedDate = props.selectedDate;\r\n    const setSelectedDate = props.setSelectedDate;\r\n    const allTodoCalendarActive = props.allTodoCalendarActive;\r\n    const setAllTodoCalendarActive = props.setAllTodoCalendarActive; \r\n    const submitDoitOtherDay = props.submitDoitOtherDay;\r\n\r\n    const week = new Array('일', '월', '화', '수', '목', '금', '토');\r\n\r\n    let selectedYear = selectedDate.getFullYear();\r\n    let selectedMonth = selectedDate.getMonth()+1;\r\n    let selectedDay = selectedDate.getDate();\r\n    let selectedLabel = selectedDate.getDay();\r\n    let todayLabel = week[selectedLabel];\r\n\r\n    return (\r\n        <Modal open={allTodoCalendarActive}\r\n        onClose={()=>{setAllTodoCalendarActive(false)}} \r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"todo-modal-datePicker-wrap\"\r\n         >\r\n        <div className=\"todo-modal-datePicker-box\">\r\n            <LocalizationProvider locale={ko} dateAdapter={AdapterDateFns}>\r\n                <div className=\"todo-modal-datePicker-box-title-wrap\">\r\n                    <p>선택한 날짜</p>\r\n                    <span>{selectedYear +`년 `+ selectedMonth +`월 `+ selectedDay+ `일 ` + todayLabel + `요일`}</span>\r\n                </div>\r\n                <CalendarPicker className=\"todo-modal-datePicker\" date={selectedDate} onChange={(date) => setSelectedDate(date)} />\r\n                <div className=\"todo-modal-datePicker-btn-wrap\">\r\n                <button className=\"todo-modal-datePicker-btn\" data-day={selectedDate} onClick={()=>{submitDoitOtherDay(selectedDate)}}>확인</button> <button className=\"todo-modal-datePicker-btn\" onClick={()=>{setAllTodoCalendarActive(false)}}>취소</button>\r\n                </div>\r\n            </LocalizationProvider>\r\n        </div>\r\n        </Modal>  \r\n    )\r\n}","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport Explore from './Explore';\r\nimport Feed from './Feed';\r\n\r\nexport default function Content() {\r\n\r\n\r\n    return (\r\n        <Box className='content-wrap' sx={{ position: 'relative', display: 'flex', height: '100vh'}}>\r\n        \r\n        <Explore />\r\n        <Feed />\r\n\r\n        </Box>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport Box from '@mui/material/Box';\r\nimport MainNavBar from '../nav/MainNavBar';\r\nimport Content from './Content';\r\n\r\n\r\nexport default function Main() {\r\n\r\n    /* props 선언 시작 */\r\n\r\n    /* props 선언 끝 */\r\n    \r\n  \r\n    return (\r\n        <Box className='main-wrap' sx={{ position: 'relative'}}>\r\n        <MainNavBar />\r\n        <Content />\r\n        </Box>\r\n    );\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Box, Button, List, ListItem, ListItemText } from \"@mui/material\";\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  resetServerContext,\r\n} from \"react-beautiful-dnd\";\r\n\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n\r\nimport {\r\n  objTodosDataResult,\r\n  goalsData,\r\n  todoData,\r\n  objDatesData,\r\n} from \"../../atoms/todoData\";\r\n\r\nimport \"../../stylesheets/OrderItem.css\";\r\n\r\nexport default function OrderItem() {\r\n  /* Hook 선언 시작 */\r\n\r\n  /* Hook 선언 종료 */\r\n\r\n  /* state 선언 시작 */\r\n\r\n  /* state 선언 종료 */\r\n\r\n  /* atom 시작 */\r\n  let dateData = useRecoilValue(objDatesData);\r\n  // atom에서 goal+todo 데이터 가져오기\r\n  let [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n  const todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\n  /* atom 종료 */\r\n\r\n  /* 함수 선언 시작 */\r\n    // a little function to help us with reordering the result\r\n    const Reorder = (list, startIndex, endIndex) => {\r\n      const result = Array.from(list);\r\n      const [removed] = result.splice(startIndex, 1);\r\n      result.splice(endIndex, 0, removed);\r\n\r\n      return result;\r\n    };\r\n\r\n\r\n// 기존 방식\r\n  // const onDragEnd = (res) => {\r\n  //   if (!res.destination) return;\r\n  //   //드래그 하는 sourced의 index\r\n  //   const sourceGoalOrderNo = res.source.index;\r\n  //   //드래그 해서 내려놓은 destination의 index\r\n  //   const destinationGoalOrderNo = res.destination.index;\r\n  //   console.log(\"sourceGoalOrderNo\", sourceGoalOrderNo)\r\n  //   todoDataArray.map((goal)=>{\r\n  //       if(goal.goalOrderNo === sourceGoalOrderNo){\r\n  //         goal.goalOrderNo = destinationGoalOrderNo;\r\n  //       }\r\n  //     })\r\n  //     setDtTodos(todoDataArray)\r\n\r\n  // };\r\n\r\n\r\n\r\n  const onDragEndGoal = (result) => {\r\n    if (!result.destination) return;\r\n    //드래그 하는 sourced의 index\r\n    const sourceGoalOrderNo = result.source.index;\r\n    //드래그 해서 내려놓은 destination의 index\r\n    const destinationGoalOrderNo = result.destination.index;\r\n    //미리 만들어둔 Reorder 함수 사용\r\n    const reorderArray = Reorder(dtTodos, sourceGoalOrderNo, destinationGoalOrderNo)\r\n    setDtTodos(reorderArray);\r\n\r\n  }\r\n\r\n  /* 함수 선언 종료 */\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndGoal}>\r\n      <Droppable droppableId=\"Goal\">\r\n      {provided =>  (\r\n        <div className=\"goals-list-wrap\" {...provided.droppableProps} ref={provided.innerRef}>\r\n          {todoDataArray.map((data, index) => {\r\n            return (\r\n              <Draggable draggableId={String(data.goalOrderNo)} index={index} key={index}>\r\n               {provided => (\r\n                  <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                    <OrderTodoGoal data={data} index={index}  id={data.id} todoDataArray={todoDataArray} setDtTodos={setDtTodos} Reorder={Reorder} />\r\n                  </div>\r\n                )}  \r\n              </Draggable>\r\n            )\r\n          })}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  )\r\n\r\n}\r\n\r\nexport const OrderTodoGoal = (props) => {\r\n\r\n  const data = props.data;\r\n  const index = props.index;\r\n  const goal_id = props.id;\r\n  const todoDataArray = props.todoDataArray;\r\n  const setDtTodos = props.setDtTodos;\r\n  const Reorder = props.Reorder;\r\n\r\n  /* 함수 선언 시작 */\r\n\r\n  const onDragEndTodo = (res) => {\r\n    if (!res.destination) return;\r\n    //드래그 하는 sourced의 index\r\n    const sourceTodoOrderNo = res.source.index;\r\n    //드래그 해서 내려놓은 destination의 index\r\n    const destinationTodoOrderNo = res.destination.index;\r\n\r\n    todoDataArray.map(goal => {\r\n        if(goal.id === goal_id){\r\n          const reorderArray = Reorder(goal.todos, sourceTodoOrderNo, destinationTodoOrderNo)\r\n          goal.todos = reorderArray;         \r\n        }\r\n    })\r\n    setDtTodos(todoDataArray);\r\n\r\n  }\r\n\r\n//테스트\r\n  // const onDragEnd = (result) => {\r\n  //   if (!result.destination) return;\r\n\r\n    \r\n  //   const draggingItemIndex = result.source.index-1;\r\n  //   const afterDragItemIndex = result.destination.index-1;\r\n  //   const removeTag = todoDataArray.splice(draggingItemIndex, 1);\r\n  //   console.log(\"removeTag\", removeTag)\r\n  //   // todoDataArray.todos.splice(afterDragItemIndex, 0, removeTag[0]);\r\n\r\n  //   setDtTodos(todoDataArray);\r\n  // }\r\n\r\n  /* 함수 선언 종료 */\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndTodo}>\r\n      <Droppable droppableId=\"Todo\">\r\n      {provided =>  (\r\n        <div className=\"goals-list-box\" key={data.goalOrderNo} ref={provided.innerRef} {...provided.droppableProps}>\r\n          {/* Goal 컴포넌트 시작 */}\r\n          <Button className=\"goals-list-button\" data-index={index} data={data}>\r\n            <ReceiptIcon className=\"goals-list-icon\" />\r\n            <div className=\"goals-list-text\" id={data.goalOrderNo} name={data.goalOrderNo} style={{ color: data.titleColor }}>\r\n              <p>{data.title}</p>\r\n            </div>\r\n            <p className=\"goals-list-plus-icon-wrap\">\r\n              <AddCircleIcon className=\"goals-list-plus-icon\" />\r\n            </p>\r\n          </Button>\r\n          {/* Goal 컴포넌트 종료 */}\r\n          {/* Todo 컴포넌트 map 시작 */}\r\n          <div className=\"todos-list-cont\">\r\n            {data.todos.map((data, index) => {\r\n              return (\r\n                <Draggable draggableId={\"todo\" + index} index={index} key={data.todoId}>\r\n                  {provided => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                      <FeedTodoData todos={data} index={index}/> \r\n                    </div>\r\n                 )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n          </div>\r\n          {/* Todo 컴포넌트 map 종료 */}\r\n          {provided.placeholder} \r\n        </div>\r\n      )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const FeedTodoData = (props) => {\r\n  const todos = props.todos;\r\n  const index = props.todos.todoId;\r\n\r\n  return (\r\n    <div className=\"todos-list-box\" data-todos={todos}>\r\n      <div\r\n        className=\"goals-listItem-text-wrap\"\r\n        id={todos.todoId}\r\n        data-index={todos.orderNo}\r\n      >\r\n        {todos.checkYn === \"Y\" ? (\r\n          <CheckBoxIcon\r\n            data-goalid={todos.goalId}\r\n            data-todoid={todos.todoId}\r\n            className=\"todos-list-check-icon\"\r\n            data-check={todos.checkYn}\r\n          />\r\n        ) : (\r\n          <CheckBoxOutlineBlankIcon\r\n            data-goalid={todos.goalId}\r\n            data-todoid={todos.todoId}\r\n            className=\"todos-list-check-icon\"\r\n            data-check={todos.checkYn}\r\n          />\r\n        )}\r\n        <TodoList todos={todos} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n  const inputRef = useRef(null);\r\n\r\n  const todos = props.todos;\r\n\r\n  return (\r\n    <input\r\n      className=\"todos-list-input\"\r\n      key={todos.todoId}\r\n      id=\"todo-input\"\r\n      type=\"text\"\r\n      maxLength=\"50\"\r\n      size={inputRef.current?.value.length}\r\n      ref={inputRef}\r\n      name={todos.title}\r\n      data-orderno={todos.orderNo}\r\n      data-goalid={todos.goalId}\r\n      data-todoid={todos.todoId}\r\n      value={todos.title}\r\n      readOnly\r\n    />\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, Grid, Box, TextField, RadioGroup, FormLabel, FormControlLabel, Radio } from \"@mui/material\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport '../../stylesheets/GoalForm.css';\r\n\r\nimport { goalsData } from \"../../atoms/todoData\";\r\n\r\n\r\nexport default function GoalForm(){\r\n\r\n    /* Hook 선언 시작 */\r\n\r\n    /* atom 시작 */\r\n    \r\n    let [goal, setGoal] = useRecoilState(goalsData);// 목표goals 아이템\r\n\r\n    let [createGoalState, setCreactGoalState] = useState(\r\n        {\r\n            \"id\": goal.length+1,\r\n            \"orderNo\" : goal.length+1,\r\n            \"title\" : ``,\r\n            \"privacy\" : `PUBLIC`,\r\n            \"titleColor\" : `#000000`\r\n        }\r\n\r\n    );\r\n    const copy_createGoalState = {...createGoalState};\r\n\r\n    let [privacyDialogActive, setPrivacyDialogActive] = useState(false);\r\n    let [colorDialogActive, setColorDialogActive] = useState(false);\r\n\r\n    let colorList = [\r\n        \"#000000\",\r\n        \"#272727\",\r\n        \"#565656\",\r\n        \"#868686\",//black\r\n        \"#a70000\",\r\n        \"#ff0000\",\r\n        \"#ff5252\",\r\n        \"#ff7b7b\",//red\r\n        \"#d73d00\",\r\n        \"#ff7b00\",\r\n        \"#ff873d\",\r\n        \"#f7ae48\",//orange    \r\n        \"#000b5e\",\r\n        \"#021496\",\r\n        \"#0119cb\",\r\n        \"#001be7\",//blue\r\n        \"#8d0a9d\",\r\n        \"#9c0fbf\",\r\n        \"#9e36d2\",\r\n        \"#ca69e3\",//purple\r\n        \"#234d20\",\r\n        \"#36802d\",\r\n        \"#77ab59\",\r\n        \"#c9df8a\",//green\r\n        ];\r\n\r\n    const privacyObj = {\r\n        'HIDDEN' : '숨기기 🙄' ,\r\n        'PRIVACY' : '나만보기 😎' ,\r\n        'FOLLOWING' : '일부공개 🤫' ,\r\n        'PUBLIC' : '전체공개 🤗' ,\r\n    }\r\n\r\n\r\n    /* Hook 선언 끝 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    //목표 타이틀 수정 함수\r\n    const changeGoalTitle = (e) => {\r\n        copy_createGoalState.title = e.target.value;\r\n        setCreactGoalState(copy_createGoalState)\r\n    }\r\n\r\n    const handlePrivacyDialogClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setPrivacyDialogActive(false);\r\n        }\r\n    };\r\n\r\n    const handleColorDialogClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setColorDialogActive(false);\r\n        }\r\n    };\r\n\r\n\r\n    //privacy dialog onChange 이벤트\r\n    const handlePrivacyChange = (e) => {\r\n        copy_createGoalState.privacy = e.target.value;\r\n        setCreactGoalState(copy_createGoalState);\r\n    };\r\n    const handleColorChange = (e) => {\r\n        copy_createGoalState.titleColor = e.target.value;\r\n        setCreactGoalState(copy_createGoalState);\r\n    };\r\n\r\n    // 확인 클릭 함수 실행 함수\r\n    const clickOkbtn = (data) => { //react-form-hook submit 함수\r\n        setGoal(createGoalState);\r\n        window.location.replace(\"/goals\")\r\n    }\r\n\r\n\r\n    /* 함수 선언 끝 */\r\n\r\n\r\n    return(\r\n        <Box className=\"goals-form-dialog-box\">\r\n            <div className=\"goals-form\">\r\n                <Grid container spacing={1} className=\"goals-form-grid-wrap\">\r\n                <Grid item xs={12} className=\"goals-form-text-wrap\">\r\n                    <TextField id=\"goalform_textfield\" variant=\"standard\" placeholder={'목표 입력'} onChange={changeGoalTitle} /> \r\n                </Grid>\r\n                <Grid item xs={12} className=\"goals-form-privacy-wrap\" > \r\n                   <Button className=\"goals-form-privacy\" onClick={()=>{setPrivacyDialogActive(true)}}><p>공개 설정 </p><span> \r\n                       { privacyObj[createGoalState.privacy] } ▾ </span></Button>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"goals-form-color-wrap\" > \r\n                   <Button className=\"goals-form-color\" onClick={()=>{setColorDialogActive(true)}}><p>색상 </p><span> <i style={{ position: 'absolute', display: 'inline-block', width: '20px', height: '20px', border: '1px solid #000', borderRadius: '50%', top: '20px', right: '30px', background: `${createGoalState.titleColor}`}}></i>▾ </span></Button>\r\n                </Grid>\r\n                {/* 확인은 임시 css */}\r\n                <Grid item xs={12} className=\"goals-form-submit\">\r\n                    <Button color=\"secondary\" className=\"goals-form-submit-btn\" \r\n                    onClick={clickOkbtn} >\r\n                        확인\r\n                    </Button>    \r\n                </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n            {/* Dialog for privacy */}\r\n            <Dialog disableEscapeKeyDown open={privacyDialogActive} onClose={handlePrivacyDialogClose} className=\"group-dialog-wrap\" >\r\n                <DialogTitle className=\"group-dialog-title\" >공개 설정</DialogTitle>\r\n                <DialogContent className=\"group-dialog\">\r\n                <Box component=\"form\" className=\"group-dialog-box\">\r\n                    <FormControl className=\"group-dialog-form-box\">\r\n                    <FormLabel id=\"radio-buttons-group-dialog-label\" sx={{display:'none' }}>공개 설정 Privacy</FormLabel>\r\n                        <RadioGroup\r\n                            className=\"group-privacy-wrap\"\r\n                            aria-labelledby=\"radio-buttons-group-privacy-label\"\r\n                            name=\"radio-buttons-group-privacy\"\r\n                            onChange={handlePrivacyChange}\r\n                        >\r\n                            <FormControlLabel value=\"HIDDEN\" control={<Radio  />} label={privacyObj['HIDDEN']} />\r\n                            <FormControlLabel value=\"PRIVACY\" control={<Radio />}  label={privacyObj['PRIVACY']}  />\r\n                            <FormControlLabel value=\"FOLLOWING\" control={<Radio />}  label={privacyObj['FOLLOWING']}  />\r\n                            <FormControlLabel value=\"PUBLIC\" control={<Radio />}  label={privacyObj['PUBLIC']}  />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                <Button className=\"group-dialog-button\" onClick={handlePrivacyDialogClose}>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Dialog for color */}\r\n               <Dialog disableEscapeKeyDown open={colorDialogActive} onClose={handleColorDialogClose} className=\"group-dialog-wrap\" >\r\n                <DialogTitle className=\"group-dialog-title\" >색상</DialogTitle>\r\n                <DialogContent className=\"group-dialog\">\r\n                <Box component=\"form\" className=\"group-dialog-box\">\r\n                    <FormControl className=\"group-dialog-form-box\">\r\n                    <FormLabel id=\"radio-buttons-group-color-label\" sx={{display:'none'}}>목표 텍스트 색상 Color</FormLabel>\r\n                        <RadioGroup\r\n                            className=\"group-color-wrap\"\r\n                            aria-labelledby=\"radio-buttons-group-color-label\"\r\n                            defaultValue={\"#1C1C1C\"}\r\n                            name=\"radio-buttons-group-color\"\r\n                            onChange={handleColorChange}\r\n                        >\r\n                            {colorList.map((color)=>{return (<FormControlLabel value={color} key={color}\r\n                            control={<Radio style={{ backgroundColor: `${color}`, width: '50px', height: '50px', marginRight: '10px', marginBottom: '6px' }} />} label=\"\" />)\r\n                            })}\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button className=\"group-dialog-button\"  onClick={handleColorDialogClose}>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { Button, Grid, Box, TextField, RadioGroup, FormLabel, FormControlLabel, Radio } from \"@mui/material\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nimport '../../stylesheets/GoalForm.css';\r\n\r\nimport { goalsData } from \"../../atoms/todoData\";\r\nimport { id } from \"date-fns/locale\";\r\n\r\nexport default function GoalEditForm(){\r\n\r\n\r\n     /* atom 선언 시작 */\r\n    \r\n     let [goal, setGoal] = useRecoilState(goalsData);// 목표goals 아이템\r\n\r\n    /* atom 선언 종료 */\r\n\r\n     /* state 선언 시작 */\r\n     let { originID } = useParams();//url Params 따오기\r\n     const [editGoalState, setEditGoalState] = useState('');\r\n     const copy_editGoalState = {...editGoalState}\r\n \r\n     useEffect(()=>{\r\n         let originGoalArr = [...goal]; //원본 goal 가지고 옴\r\n         originGoalArr.filter((data)=>{\r\n             if (data.id === parseInt(originID)) return setEditGoalState(data) \r\n          })\r\n     },[])\r\n \r\n     let [privacyDialogActive, setPrivacyDialogActive] = useState(false);\r\n     let [colorDialogActive, setColorDialogActive] = useState(false);\r\n \r\n     let colorList = [\r\n         \"#000000\",\r\n         \"#272727\",\r\n         \"#565656\",\r\n         \"#868686\",//black\r\n         \"#a70000\",\r\n         \"#ff0000\",\r\n         \"#ff5252\",\r\n         \"#ff7b7b\",//red\r\n         \"#d73d00\",\r\n         \"#ff7b00\",\r\n         \"#ff873d\",\r\n         \"#f7ae48\",//orange    \r\n         \"#000b5e\",\r\n         \"#021496\",\r\n         \"#0119cb\",\r\n         \"#001be7\",//blue\r\n         \"#8d0a9d\",\r\n         \"#9c0fbf\",\r\n         \"#9e36d2\",\r\n         \"#ca69e3\",//purple\r\n         \"#234d20\",\r\n         \"#36802d\",\r\n         \"#77ab59\",\r\n         \"#c9df8a\",//green\r\n         ];\r\n \r\n         const privacyObj = {\r\n             'HIDDEN' : '숨기기 🙄' ,\r\n             'PRIVACY' : '나만보기 😎' ,\r\n             'FOLLOWING' : '일부공개 🤫' ,\r\n             'PUBLIC' : '전체공개 🤗' ,\r\n         }\r\n     \r\n    /* state 선언 종료 */\r\n\r\n    /* Hook 선언 시작 */\r\n\r\n    let history = useHistory();\r\n\r\n    /* Hook 선언 끝 */\r\n\r\n   \r\n\r\n    /* 함수 선언 시작 */\r\n    \r\n    //목표 타이틀 수정 함수\r\n    const changeEditGoalTitle = (e) => {\r\n        copy_editGoalState.title = e.target.value;\r\n        setEditGoalState(copy_editGoalState)\r\n    }\r\n    \r\n    //목표 수정 함수\r\n    function editGoal(item){\r\n        const copy_goal = [...goal]\r\n        copy_goal.splice(originID-1, 1, copy_editGoalState)\r\n        console.log(\"copy_goal\", copy_goal)\r\n        setGoal(copy_goal); //setGoal를 이용해 state 변경\r\n        window.location.replace(`/goals/`);//목표로 돌아가기\r\n    }\r\n\r\n    //목표 삭제 함수\r\n    function deleteGoal(e){\r\n        const copy_goal = [...goal]\r\n        let newGoalArr = copy_goal.filter(goal =>  goal.id != originID\r\n        )\r\n        setGoal(newGoalArr) ;//setGoal를 이용해 state 변경\r\n        window.location.replace(`/goals/`);//목표로 돌아가기\r\n    }\r\n\r\n    const handlePrivacyDialogClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setPrivacyDialogActive(false);\r\n        }\r\n    };\r\n\r\n    const handleColorDialogClose = (event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n            setColorDialogActive(false);\r\n        }\r\n    };\r\n    const handlePrivacyChange = (e) => {\r\n        copy_editGoalState.privacy = e.target.value;\r\n        setEditGoalState(copy_editGoalState);\r\n    };\r\n    const handleColorChange = (e) => {\r\n        copy_editGoalState.titleColor = e.target.value;\r\n        setEditGoalState(copy_editGoalState);\r\n    };\r\n\r\n\r\n    /* 함수 선언 끝 */\r\n\r\n    return(\r\n        <Box className=\"goals-form-dialog-box\">\r\n            <div className=\"goals-form\">\r\n            <Grid container spacing={1} className=\"goals-form-grid-wrap\">\r\n            <Grid item xs={12} className=\"goals-form-text-wrap\">\r\n                <TextField id=\"goalform_textfield\" variant=\"standard\" value={editGoalState.title || ''} onChange={changeEditGoalTitle} /> \r\n                </Grid>\r\n                <Grid item xs={12} className=\"goals-form-privacy-wrap\" > \r\n                   <Button className=\"goals-form-privacy\" onClick={()=>{setPrivacyDialogActive(true)}}><p>공개 설정 </p><span> \r\n                       { privacyObj[editGoalState.privacy] } ▾ </span></Button>\r\n                </Grid>\r\n                <Grid item xs={12} className=\"goals-form-color-wrap\" > \r\n                   <Button className=\"goals-form-color\" onClick={()=>{setColorDialogActive(true)}}><p>색상 </p><span> <i style={{ position: 'absolute', display: 'inline-block', width: '20px', height: '20px', border: '1px solid #000', borderRadius: '50%', top: '20px', right: '30px', background: `${editGoalState.titleColor}`}}></i>▾ </span></Button>\r\n                </Grid>\r\n                {/* 확인은 임시 css */}\r\n                <Grid item xs={12} className=\"goals-form-submit\">\r\n                    <Button color=\"secondary\"\r\n                    className=\"goals-form-submit-btn\" onClick={editGoal} >\r\n                        확인\r\n                    </Button>    \r\n                </Grid>\r\n                <Button className=\"goals-listItem-delete-btn\" aria-label=\"Delete Todo\" id={editGoalState.goal_id} onClick={deleteGoal} >\r\n                       삭제\r\n                </Button>\r\n                </Grid>\r\n            </div>\r\n\r\n            {/* Dialog for privacy */}\r\n            <Dialog disableEscapeKeyDown open={privacyDialogActive} onClose={handlePrivacyDialogClose} className=\"group-dialog-wrap\" >\r\n                <DialogTitle className=\"group-dialog-title\" >공개 설정</DialogTitle>\r\n                <DialogContent className=\"group-dialog\">\r\n                <Box component=\"form\" className=\"group-dialog-box\">\r\n                    <FormControl className=\"group-dialog-form-box\">\r\n                    <FormLabel id=\"radio-buttons-group-dialog-label\" sx={{display:'none' }}>공개 설정 Privacy</FormLabel>\r\n                        <RadioGroup\r\n                            className=\"group-privacy-wrap\"\r\n                            aria-labelledby=\"radio-buttons-group-privacy-label\"\r\n                            name=\"radio-buttons-group-privacy\"\r\n                            onChange={handlePrivacyChange}\r\n                        >\r\n                            <FormControlLabel value=\"HIDDEN\" control={<Radio  />} label={privacyObj['HIDDEN']} />\r\n                            <FormControlLabel value=\"PRIVACY\" control={<Radio />}  label={privacyObj['PRIVACY']}  />\r\n                            <FormControlLabel value=\"FOLLOWING\" control={<Radio />}  label={privacyObj['FOLLOWING']}  />\r\n                            <FormControlLabel value=\"PUBLIC\" control={<Radio />}  label={privacyObj['PUBLIC']}  />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                <Button className=\"group-dialog-button\" onClick={handlePrivacyDialogClose}>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Dialog for privacy */}\r\n               <Dialog disableEscapeKeyDown open={colorDialogActive} onClose={handleColorDialogClose} className=\"group-dialog-wrap\" >\r\n                <DialogTitle className=\"group-dialog-title\" >색상</DialogTitle>\r\n                <DialogContent className=\"group-dialog\">\r\n                <Box component=\"form\" className=\"group-dialog-box\">\r\n                    <FormControl className=\"group-dialog-form-box\">\r\n                    <FormLabel id=\"radio-buttons-group-color-label\" sx={{display:'none'}}>목표 텍스트 색상 Color</FormLabel>\r\n                        <RadioGroup\r\n                            className=\"group-color-wrap\"\r\n                            aria-labelledby=\"radio-buttons-group-color-label\"\r\n                            defaultValue={\"#1C1C1C\"}\r\n                            name=\"radio-buttons-group-color\"\r\n                            onChange={handleColorChange}\r\n                        >\r\n                            {colorList.map((color)=>{return (<FormControlLabel value={color} key={color}\r\n                            control={<Radio style={{ backgroundColor: `${color}`, width: '50px', height: '50px', marginRight: '10px', marginBottom: '6px' }} />} label=\"\" />)\r\n                            })}\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button className=\"group-dialog-button\"  onClick={handleColorDialogClose}>Ok</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    )\r\n\r\n}","import React, { useState } from 'react'\r\n\r\nimport { Button, TextField } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport '../../stylesheets/Search.css';\r\n\r\n//  ** 할일 **\r\n// ✔ filter 함수 : 입력받는 string에 매치되는 아이디 불러와 보여주기\r\n// *** 검색어 입력 -> 엔터 뒤에 한번에 검색하기 로 로직 변경하기 \r\n\r\n// 유저 리스트-> 유저 클릭 -> 유저 feed 이동 -> 팔로우 버튼 -> event: isfollowing: true 생성 또는 변경 \r\n\r\n// 받아와야 하는 값 \r\n// -user id 입력-> filter -> 출력 user nickname \r\n\r\n// < style 수정사항 >\r\n// ✔ search 검색 input 높이 조절\r\n// 항목 선택시 default 색 변경 \r\n\r\nconst Data = [\r\n  { \"strUserName\": \"주영\", \"todo_id\": \"0\", \"title\": \"🥛우유마시기\" },\r\n  { \"strUserName\": \"🍈메로나\", \"todo_id\": \"1\", \"title\": \"공부하기\" },\r\n  { \"strUserName\": \"두두\", \"todo_id\": \"5\", \"title\": \"스터디카페가기\" },\r\n  { \"strUserName\": \"나야\", \"todo_id\": \"7\", \"title\": \"8시간 자기\" }\r\n]\r\n//console.log(Data);\r\n\r\nexport default function Search() {\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n    return (\r\n      <div className=\"search-search-list-wrap\" >\r\n            {/* textfield underline 색상 변경 */}\r\n            <TextField \r\n                className=\"search-blank\"\r\n                fullWidth  \r\n                hiddenLabel\r\n                id=\"filled-basic\"\r\n                size=\"small\"\r\n                variant=\"filled\"\r\n                placeholder=\"email ,ID 검색\"\r\n                sx={{ boxShadow: 'none',\r\n                '& .MuiFilledInput-root': {\r\n                  backgroundColor:'#f5f5f5',\r\n                  borderRadius: 2,\r\n                  fontSize: 14,\r\n                  color: '#080808',}\r\n                }}    \r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                }}\r\n        \r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon fontSize=\"small\" className=\"search-list-icon\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            >\r\n            </TextField>\r\n\r\n            {Data.filter((data)=> {\r\n              if (searchTerm === \"\") {\r\n                return data\r\n              } else if (data.strUserName.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              } else if (data.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                return data\r\n              }\r\n            }).map(data=>{\r\n              return(\r\n                <React.Fragment key={data.todo_id}>\r\n                  <div className=\"search-list-box\" key={data.todo_id}>\r\n                    <Button className=\"search-list-button\" id={data.todo_id} name={data.todo_id}>\r\n                        <div className=\"search-list-name\" id={data.strUserName} name={data.strUserName}>\r\n                          <p>{data.strUserName}</p>\r\n                        </div>\r\n                        <div className=\"search-list-text\" id={data.title} name={data.title}>\r\n                          <p>{data.title}</p>\r\n                        </div>\r\n                    </Button>\r\n                  </div>\r\n\r\n                </React.Fragment>\r\n               \r\n               );\r\n\r\n              })}\r\n                \r\n    \r\n      </div>\r\n    \r\n    )}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n\r\nimport List from '@mui/material/List';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Stack from '@mui/material/Stack';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport API from '../../api/API';\r\nimport axios from 'axios';\r\n\r\nimport '../../stylesheets/Follow.css';\r\n\r\n//  ** 할일 **\r\n// 팔로워 의 설정 버튼 팝업 확인하기 \r\n// 팔로워 관련 함수  ex) 차단, 혹은 삭제 등 \r\n\r\n// style : 화면의 넓이, font, fontsize 조정 \r\n\r\n//https://jsonplaceholder.typicode.com/todos/1\r\n//https://clonetodo.herokuapp.com/users?page=2\r\n\r\n/* const login = () => {\r\n  \r\n    const data = {\r\n        account: \"test\",\r\n        \"password\":\"1234\"\r\n    }\r\n    axios.defaults.withCredentials = true;\r\n\r\n    axios.post(\"https://clonetodo.herokuapp.com/login\", data).then(\r\n        (response) => {\r\n            console.log(response);\r\n        }\r\n    );\r\n}; */\r\n\r\nconst getAPI = () => {\r\n  \r\n    axios.get(\"https://clonetodo.herokuapp.com/api/v1/goals/1\").then(\r\n        (response) => {\r\n            console.log(response);\r\n        }\r\n    );\r\n};\r\n\r\n\r\nconst FollowerData = [\r\n    {\r\n    \"strUserName\": \"🍈메로나\",\r\n    \"strUserId\" : \"merona\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"🍈메로나의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  \r\n  {\r\n    \"strUserName\": \"두두\",\r\n    \"strUserId\" : \"dodo\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"dodo의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  {\r\n    \"strUserName\": \"주영\",\r\n    \"strUserId\" : \"주영\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"주영의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"🥛우유마시기\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"스터디카페가기\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"햄버거 냠냠🍔\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": false,\r\n    \"isFollowing\": true,\r\n  }  \r\n            \r\n]\r\n\r\n\r\n\r\n\r\nexport default function Follower() {\r\n\r\n\r\n /* atom 시작 */\r\n//let [following, setFollowing] = useRecoilState(followData);// 팔로우data\r\nlet [follower, setFollower] = useState(FollowerData);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n\r\n\r\nconst handleFollowingChange = (e) => {\r\n    \r\n    let userId = e.target.dataset.index;\r\n    console.log('current user', userId);\r\n\r\n    const thisData = [...follower];\r\n    let newFollower = thisData.filter(item => item.strUserId !== userId)\r\n\r\n    setFollower(newFollower);\r\n    console.log('newFollwer', newFollower);\r\n\r\n    setOpen(false);\r\n    //window.location.replace(`/exploreSearch/`);\r\n    \r\n};\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"follow-follow-list-wrap\" >\r\n            {/* <div><button onClick={login}>login</button></div> \r\n            <div><button onClick={getAPI}>getAPI</button></div>*/}\r\n       \r\n            {/* useRecoilState 로는 작동하는 false의 목록없음이 dummy data 로는 작동 X 왜?? */}\r\n            {follower.map((data =>\r\n             data.strUserId.length > 0 ? (\r\n                 \r\n                    <List // 넓이 조정 \r\n                        sx={{ width: '100%'}}\r\n                        style={{position:'relative'}} \r\n                        key={data.strUserName}  disablePadding>\r\n                            \r\n                                {/* isfollowing 값을 true/false ? -> 문법 오류 해결 */}\r\n                        \r\n                         \r\n            \r\n                                    <div className=\"follow-list-box\" key={data.strUserId}> \r\n                                    \r\n                                        <div className='setting-settings-list-wrap' id={data.strUserName} name={data.strUserName}>\r\n                                            <div className=\"setting-list-box\" >\r\n                \r\n                                        \r\n                                            <div className=\"settings-list-text\" sx={{ color:\"black\"}}><p>{data.strUserName}</p></div>\r\n                                            <div className=\"follow-list-name-icon-wrap\"  onClick={handleClickOpen} sx={{ color:\"black\"}}>\r\n                                                <MoreHorizIcon color=\"disabled\" className=\"follow-list-name-icon\"/></div>\r\n            \r\n                                            </div>\r\n                                            {data.dtTodo.map(e => {\r\n                                                return e.ynComplete === \"Y\" ? \r\n                                                    <div className=\"follows-list-box\" id={e.goal_id}>\r\n                                                        <div  className=\"follow-list-button\" id={e.goal_id}>\r\n                                                            \r\n                                                            <p className=\"follow-list-text\" >{e.todo_title}</p>\r\n                                                                \r\n                                                        </div> \r\n                                                    </div>: null}\r\n                                      \r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n                                        \r\n                                    \r\n\r\n                                    {/* 마우스 호버 변경, Dialog 위치 조정, height 등 style 변경 */}\r\n                                    <Dialog\r\n                                        sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                                        maxWidth=\"sm\"\r\n                                        open={open}\r\n                                        >\r\n                                        <Stack spacing={1} >\r\n                                            <Button autoFocus data-index={data.strUserId} onClick={handleFollowingChange}  color=\"error\">팔로워 삭제</Button>\r\n                                            <Button onClick={handleClose}>취소</Button>\r\n                                        </Stack>\r\n                                       \r\n                                    </Dialog>\r\n                                    </div> \r\n                              \r\n                                \r\n                            \r\n                         \r\n                            \r\n                    </List> ) : <p>\"목록 없음\"</p> )\r\n            )}\r\n     \r\n        </div>\r\n  )\r\n }","import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\nimport \"../../stylesheets/Follow.css\";\r\n\r\n//  ** 할일 **\r\n// 유저 버튼 -> 언팔로우 시 => isfollowing:false 로 변경 이 아니고 !\r\n// 유저 버튼 -> 해당 유저를 불러온 데이터에서 제외하고, update된 usestate의 데이터 갱신 \r\n// 각 유저 클릭 -> 해당 유저 feed로 이동 \r\n\r\n\r\n\r\nconst FollowingData = [\r\n    {\r\n    \"strUserName\": \"🍈메로나\",\r\n    \"strUserId\" : \"merona\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"🍈메로나의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  \r\n  {\r\n    \"strUserName\": \"두두\",\r\n    \"strUserId\" : \"dodo\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"dodo의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일2\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"sample의 할 일\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": true,\r\n    \"isFollowing\": true,\r\n  },\r\n  {\r\n    \"strUserName\": \"주영\",\r\n    \"strUserId\" : \"주영\",\r\n    \"strUserEmail\": \"useremail@email.com\",\r\n    \"strUserInfo\": \"주영의 투두리스트입니다\",\r\n    \"dtTodo\": [{\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"🥛우유마시기\",\r\n          \"ynComplete\": \"Y\",\r\n      },\r\n    {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 1,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"스터디카페가기\",\r\n          \"ynComplete\": \"N\",\r\n      },\r\n      {\r\n          \"goal_id\": 1,\r\n          \"todo_id\": 0,\r\n          \"bg_color\": \"#2121fe\",\r\n          \"todo_title\": \"햄버거 냠냠🍔\",\r\n          \"ynComplete\": \"Y\",\r\n      }],\r\n    \"isFollower\": false,\r\n    \"isFollowing\": true,\r\n  }  \r\n            \r\n]\r\n\r\n\r\n\r\nexport default function Following() {\r\n\r\n\r\n/* atom 시작 */\r\n//let [following, setFollowing] = useRecoilState(followData); // 팔로우data\r\nlet [following, setFollowing] = useState(FollowingData);\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n \r\n\r\nconst handleFollowingChange = (e) => {\r\n    \r\n      let userId = e.target.dataset.index;\r\n      console.log('current user', userId);\r\n\r\n      const thisData = [...following];\r\n      let newFollowing = thisData.filter(item => item.strUserId !== userId)\r\n\r\n      setFollowing(newFollowing);\r\n      console.log(newFollowing)\r\n\r\n      setOpen(false);\r\n      //window.location.replace(`/exploreSearch/`);\r\n      \r\n  };\r\n\r\n\r\n    return (\r\n      <div className=\"follow-follow-list-wrap\" >\r\n       \r\n      {/* useRecoilState 로는 작동하는 false의 목록없음이 dummy data 로는 작동 X 왜?? */}\r\n      {following.map((data => data.strUserId.length > 0 ? (\r\n           \r\n              <List // 넓이 조정 \r\n                  sx={{ width: '100%'}}\r\n                  style={{position:'relative'}} \r\n                  key={data.strUserName}  disablePadding>\r\n                      \r\n                          {/* isfollowing 값을 true/false ? -> 문법 오류 해결 */}\r\n                  \r\n                      \r\n                              <div className=\"follow-list-box\" key={data.strUserId}> \r\n                               \r\n                              <div className='setting-settings-list-wrap' id={data.strUserName} name={data.strUserName}>\r\n                                            <div className=\"setting-list-box\" >\r\n                \r\n                                        \r\n                                            <div className=\"settings-list-text\" ><p>{data.strUserName}</p></div>\r\n                                            <div className=\"follow-list-name-icon-wrap\"  onClick={handleClickOpen} sx={{ color:\"black\"}}>\r\n                                                <MoreHorizIcon color=\"disabled\" className=\"follow-list-name-icon\"/></div>\r\n            \r\n                                            </div>\r\n                                            {data.dtTodo.map(e => {\r\n                                                return e.ynComplete === \"Y\" ? \r\n                                                    <div className=\"follows-list-box\" id={e.goal_id}>\r\n                                                        <div  className=\"follow-list-button\" id={e.goal_id}>\r\n                                                            \r\n                                                            <p className=\"follow-list-text\" >{e.todo_title}</p>\r\n                                                                \r\n                                                        </div> \r\n                                                    </div>: null}\r\n                                      \r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n                \r\n                              {/* 마우스 호버 변경, Dialog 위치 조정, height 등 style 변경 */}\r\n                              <Dialog\r\n                                  sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 432 } }}\r\n                                  maxWidth=\"sm\"\r\n                                  open={open}\r\n                                  >\r\n                                  <Stack spacing={1} >\r\n                                      <Button autoFocus data-index={data.strUserId} onClick={handleFollowingChange}  color=\"error\">언팔로우</Button>\r\n                                      <Button onClick={handleClose}>취소</Button>\r\n                                  </Stack>\r\n                                 \r\n                              </Dialog>\r\n                              </div> \r\n                           \r\n                          \r\n                      \r\n                   \r\n                      \r\n              </List> ) : <p>\"목록 없음\"</p> )\r\n      )}\r\n\r\n  </div>\r\n\r\n    \r\n    )} ","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Tabs, Tab } from '@mui/material';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport PropTypes from 'prop-types';\r\nimport Search from \"./Search\";\r\nimport Follower from \"./Follower\";\r\nimport Following from \"./Following\";\r\n\r\nimport '../../stylesheets/Search.css';\r\n\r\nexport default function ExploreSearch() {\r\n\r\n    function TabPanel(props) {\r\n        const { children, value, index, ...other } = props;\r\n      \r\n        return (\r\n          <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n          >\r\n            {value === index && (\r\n              <Box sx={{ p: 3 }}>\r\n                <Typography>{children}</Typography>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    \r\n    TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.number.isRequired,\r\n        value: PropTypes.number.isRequired,\r\n      };\r\n      \r\n    function a11yProps(index) {\r\n        return {\r\n          id: `vertical-tab-${index}`,\r\n          'aria-controls': `vertical-tabpanel-${index}`,\r\n        };\r\n      }\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        //BasicNavBar 위치 조정\r\n        \r\n        <Box \r\n        sx={{ width: '100%', bgcolor: 'background.paper'}}  \r\n        position=\"static\">\r\n           \r\n            {/* Tabs fontweight 변경, 팔로워 length 추가 */}\r\n            <Tabs \r\n            sx= {{borderBottom: \"1px solid #CCCDCD\", '& .MuiTab-root': { borderBottomColor: 'red' } }}\r\n            variant=\"fullWidth\" TabIndicatorProps={{ style: { background: \"#080808\"} }} value={value} onChange={handleChange}>\r\n                <Tab sx={{paddingRight:\"2px\", \"&.Mui-selected\": { color: \"black\", fontWeight: 800} }} label=\"검색\" {...a11yProps(0)} />\r\n                <Tab sx={{ \"&.Mui-selected\": { color: \"black\", fontWeight: 800} }} label=\"팔로워\" {...a11yProps(1)} />\r\n                <Tab sx={{ \"&.Mui-selected\": { color: \"black\", fontWeight: 800} }} label=\"팔로잉\" {...a11yProps(2)} />\r\n            </Tabs>\r\n           \r\n           {/* 각각 TabPanel에 users 정보 불러오기 */}\r\n            <TabPanel value={value} index={0}>\r\n                <Search/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Follower/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Following/>\r\n            </TabPanel>\r\n        </Box>\r\n        \r\n    );\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Modal, } from \"@mui/material\";\r\n\r\nimport { createRepeatDay } from \"../../atoms/todoData\";\r\n\r\nimport '../../stylesheets/CalendarBox.css';\r\n\r\nexport default function RoutineDayModal(props) {\r\n\r\n\r\n    const dayActiveBoolean = props.dayActiveBoolean;\r\n    const setDayActiveBoolean = props.setDayActiveBoolean;\r\n    const dayArr = props.dayArr;\r\n    const createRoutinesState = props.createRoutinesState;\r\n    const copy_createRoutinesState = {...createRoutinesState}\r\n    const setCreatRoutinesState = props.setCreatRoutinesState;\r\n    const editRoutinesState = props.editRoutinesState;\r\n    const copy_editRoutinesState = {...editRoutinesState}\r\n    const setEditRoutinesState = props.setEditRoutinesState;\r\n    const position = props.position;\r\n    console.log(\"position\",position)\r\n    console.log(\"copy_createRoutinesState\",copy_createRoutinesState)\r\n\r\n\r\n    const checkedHandler = (e) => {\r\n        const id = e.currentTarget.id;\r\n        const name = e.currentTarget.name;\r\n   \r\n        if(position === 'edit'){\r\n            copy_editRoutinesState.repeatDays[name] === 'N' ? copy_editRoutinesState.repeatDays[name] = 'Y' : copy_editRoutinesState.repeatDays[name] = 'N';\r\n            setEditRoutinesState(copy_editRoutinesState)\r\n        } else if(position === 'create'){\r\n            console.log(\"id\", id)\r\n            copy_createRoutinesState[id] === 'n' ? copy_createRoutinesState[id] = 'y' : copy_createRoutinesState[id] = 'n';\r\n            setCreatRoutinesState(copy_createRoutinesState)\r\n        }\r\n        \r\n        \r\n    }\r\n    const resetHandler = () => {\r\n        //아래 전체 리셋은 굳이 안해도 되네요\r\n        // copy_createRoutinesState = {\r\n        //     \"repeatMonYn\":\"n\",\r\n        //     \"repeatTueYn\":\"n\",\r\n        //     \"repeatWenYn\":\"n\",\r\n        //     \"repeatThuYn\":\"n\",\r\n        //     \"repeatFriYn\":\"n\",\r\n        //     \"repeatSatYn\":\"n\",\r\n        //     \"repeatSunYn\":\"n\",\r\n        // }\r\n        // setCreatRoutinesState(copy_createRoutinesState)\r\n        setDayActiveBoolean(false)\r\n    }\r\n\r\n    return (\r\n        <Modal open={dayActiveBoolean}\r\n        onClose={setDayActiveBoolean} \r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"todo-modal-datePicker-wrap\"\r\n         >\r\n            <div className=\"todo-modal-dayPicker-box\">\r\n                <h3 className=\"dayPicker-title\">요일 선택</h3>\r\n                    <div\r\n                    aria-labelledby=\"dayPicker-label\"\r\n                    name=\"dayPicker-group\"\r\n                    id=\"dayPicker-checkbox-btn-wrap\"\r\n                    >\r\n                        { \r\n                            position === 'edit' ? ( <React.Fragment>\r\n                                <label key={'repeatMonYn'}>\r\n                                <input type=\"checkbox\" name={'MON'} value={'repeatMonYn'} id={'repeatMonYn'} checked={editRoutinesState.repeatDays['MON'] === 'N' ? false : true} onChange={checkedHandler}/>월\r\n                                </label>\r\n                                <label key={'repeatTueYn'}>\r\n                                <input type=\"checkbox\" name={'TUE'} value={'repeatTueYn'} id={'repeatTueYn'} checked={ editRoutinesState.repeatDays['TUE'] === 'N' ? false : true} onChange={checkedHandler}/>화\r\n                                </label>\r\n                                <label key={'repeatWenYn'}>\r\n                                <input type=\"checkbox\" name={'WEN'} value={'repeatWenYn'} id={'repeatWenYn'} checked={editRoutinesState.repeatDays['WEN'] === 'N' ? false : true} onChange={checkedHandler}/>수\r\n                                </label>\r\n                                <label key={'repeatThuYn'}>\r\n                                <input type=\"checkbox\" name={'THU'} value={'repeatThuYn'} id={'repeatThuYn'} checked={editRoutinesState.repeatDays['THU'] === 'N' ? false : true} onChange={checkedHandler}/>목\r\n                                </label>\r\n                                <label key={'repeatFriYn'}>\r\n                                <input type=\"checkbox\" name={'FRI'} value={'repeatFriYn'} id={'repeatFriYn'} checked={editRoutinesState.repeatDays['FRI'] === 'N' ? false : true} onChange={checkedHandler}/>금\r\n                                </label>\r\n                                <label key={'repeatSatYn'}>\r\n                                <input type=\"checkbox\" name={'SAT'} value={'repeatSatYn'} id={'repeatSatYn'} checked={editRoutinesState.repeatDays['SAT'] === 'N' ? false : true} onChange={checkedHandler}/>토\r\n                                </label>\r\n                                <label key={'repeatSunYn'}>\r\n                                <input type=\"checkbox\" name={'SUN'} value={'repeatSunYn'} id={'repeatSunYn'} checked={editRoutinesState.repeatDays['SUN'] === 'N' ? false : true} onChange={checkedHandler}/>일\r\n                                </label>\r\n                            </React.Fragment>\r\n                            ) : ( <React.Fragment>\r\n                                <label key={'repeatMonYn'}>\r\n                                <input type=\"checkbox\" name={'MON'} value={'repeatMonYn'} id={'repeatMonYn'} checked={copy_createRoutinesState['repeatMonYn'] === 'n' ? false : true} onChange={checkedHandler}/>월\r\n                                </label>\r\n                                <label key={'repeatTueYn'}>\r\n                                <input type=\"checkbox\" name={'TUE'} value={'repeatTueYn'} id={'repeatTueYn'} checked={copy_createRoutinesState['repeatTueYn'] === 'n' ? false : true} onChange={checkedHandler}/>화\r\n                                </label>\r\n                                <label key={'repeatWenYn'}>\r\n                                <input type=\"checkbox\" name={'WEN'} value={'repeatWenYn'} id={'repeatWenYn'} checked={copy_createRoutinesState['repeatWenYn'] === 'n' ? false : true} onChange={checkedHandler}/>수\r\n                                </label>\r\n                                <label key={'repeatThuYn'}>\r\n                                <input type=\"checkbox\" name={'THU'} value={'repeatThuYn'} id={'repeatThuYn'} checked={copy_createRoutinesState['repeatThuYn'] === 'n' ? false : true} onChange={checkedHandler}/>목\r\n                                </label>\r\n                                <label key={'repeatFriYn'}>\r\n                                <input type=\"checkbox\" name={'FRI'} value={'repeatFriYn'} id={'repeatFriYn'} checked={copy_createRoutinesState['repeatFriYn'] === 'n' ? false : true} onChange={checkedHandler}/>금\r\n                                </label>\r\n                                <label key={'repeatSatYn'}>\r\n                                <input type=\"checkbox\" name={'SAT'} value={'repeatSatYn'} id={'repeatSatYn'} checked={copy_createRoutinesState['repeatSatYn'] === 'n' ? false : true} onChange={checkedHandler}/>토\r\n                                </label>\r\n                                <label key={'repeatSunYn'}>\r\n                                <input type=\"checkbox\" name={'SUN'} value={'repeatSunYn'} id={'repeatSunYn'} checked={copy_createRoutinesState['repeatSunYn'] === 'n' ? false : true} onChange={checkedHandler}/>일\r\n                                </label>\r\n                            </React.Fragment>\r\n                        )\r\n                        }\r\n                    </div>\r\n                   <div className=\"dayPicker-btn-wrap\">\r\n                    <Button className=\"dayPicker-btn\" onClick={()=>{setDayActiveBoolean(false)}}>확인</Button>\r\n                    <Button className=\"dayPicker-btn\" onClick={resetHandler}>취소</Button>\r\n                    </div>  \r\n            </div>\r\n           \r\n        </Modal>  \r\n    )\r\n\r\n\r\n}\r\n\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport CalendarPicker from '@mui/lab/CalendarPicker';\r\nimport { ko } from \"date-fns/locale\";\r\nimport { Box, Button, Modal } from \"@mui/material\";\r\n\r\nimport { objDatesData } from \"../../atoms/todoData\";\r\n\r\n\r\nexport default function RoutineDateModal(props) {\r\n\r\n  \r\n    const [dtDate, setDtDate] = useRecoilState(objDatesData)\r\n    const dateActiveBoolean = props.dateActiveBoolean;\r\n    const setDateActiveBoolean = props.setDateActiveBoolean;\r\n    const createRoutinesState = props.createRoutinesState;\r\n    const setCreatRoutinesState = props.setCreatRoutinesState;\r\n    const location = props.location;\r\n    \r\n    const dtSelectedDate = dtDate.selectedNewDate;\r\n    const copy_dtDate = {...dtDate};\r\n\r\n    const week = new Array('일', '월', '화', '수', '목', '금', '토');\r\n\r\n    //선택된 날짜  \r\n\r\n    let selectedYear = dtSelectedDate.getFullYear();\r\n    let selectedMonth = dtSelectedDate.getMonth()+1;\r\n    let selectedDay = dtSelectedDate.getDate();\r\n    let selectedLabel = dtSelectedDate.getDay();\r\n    let todayLabel = week[selectedLabel];\r\n\r\n    const saveSelectedNewDate = (date) => {\r\n        copy_dtDate.selectedNewDate = date;\r\n        setDtDate(copy_dtDate)\r\n    }\r\n\r\n    const calendarOnChangeDate = (e) => {\r\n\r\n        const destination = e.currentTarget.dataset.destination;\r\n        const copy_createRoutinesState = {...createRoutinesState}\r\n        copy_createRoutinesState[destination] = dtSelectedDate.toJSON().substring(0, 10);\r\n        console.log(dtSelectedDate.toJSON().substring(0, 10))\r\n        setCreatRoutinesState(copy_createRoutinesState)\r\n        setDateActiveBoolean(false)\r\n    }\r\n    \r\n    return (\r\n        <Modal open={dateActiveBoolean}\r\n        onClose={setDateActiveBoolean} \r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"todo-modal-datePicker-wrap\"\r\n         >\r\n        <Box className=\"todo-modal-datePicker-box\">\r\n            <LocalizationProvider locale={ko} dateAdapter={AdapterDateFns}>\r\n                <div className=\"todo-modal-datePicker-box-title-wrap\">\r\n                    <p>선택한 날짜</p>\r\n                    <span>{selectedYear +`년 `+ selectedMonth +`월 `+ selectedDay+ `일 ` + todayLabel + `요일`}</span>\r\n                </div>\r\n                <CalendarPicker className=\"todo-modal-datePicker\" date={dtSelectedDate} onChange={(date) => saveSelectedNewDate(date)} />\r\n                <div className=\"todo-modal-datePicker-btn-wrap\">\r\n                <Button className=\"todo-modal-datePicker-btn\"\r\n                data-destination={location} onClick={calendarOnChangeDate}>확인</Button> <Button className=\"todo-modal-datePicker-btn\" onClick={()=>{setDateActiveBoolean(false)}}>취소</Button>\r\n                </div>\r\n            </LocalizationProvider>\r\n        </Box>\r\n        </Modal>  \r\n    )\r\n\r\n\r\n}\r\n\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport { objDatesData, objTodosDataResult } from \"../../atoms/todoData\";\r\n\r\nimport RoutineDayModal from './RoutineDayModal';\r\nimport RoutineDateModal from './RoutineDateModal';\r\n\r\n\r\n// 할 일 클릭 - 수정 모달 - input 생성\r\nexport default function EditRoutinesForm(props) {\r\n\r\n        /* atom 선언 시작 */\r\n        const [dtDate, setDtDate] = useRecoilState(objDatesData);\r\n        const [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n    \r\n        /* atom 선언 종료 */\r\n\r\n        /* state 선언 시작 */\r\n\r\n        const todos = props.todos;\r\n\r\n        let [dayActiveBoolean, setDayActiveBoolean] = useState(false);\r\n        let [dateActiveBoolean, setDateActiveBoolean] = useState(false);\r\n        //날짜 선택 캘린더 모달 등장 시 입력할 날짜 정보가 어디인지 (date, endRepeatDate)\r\n        let [location, setLocation] = useState(null)\r\n        //위의 location 처럼 edit에서 작업한다는 신호\r\n        let position = 'edit'\r\n\r\n        let [editRoutinesState, setEditRoutinesState] = useState(todos);\r\n        console.log(\"editRoutinesState\",editRoutinesState)\r\n\r\n        const dayArr = [\r\n        { dayEng : 'SUN', dayKor : '일', checkYn: editRoutinesState.repeatDays['SUN']},\r\n        { dayEng : 'MON', dayKor : '월', checkYn: editRoutinesState.repeatDays['MON']},\r\n        { dayEng : 'TUE', dayKor : '화', checkYn: editRoutinesState.repeatDays['TUE']},\r\n        { dayEng : 'WEN', dayKor : '수', checkYn: editRoutinesState.repeatDays['WEN']},\r\n        { dayEng : 'THU', dayKor : '목', checkYn: editRoutinesState.repeatDays['THU']},\r\n        { dayEng : 'FRI', dayKor : '금', checkYn: editRoutinesState.repeatDays['FRI']},\r\n        { dayEng : 'SAT', dayKor : '토', checkYn: editRoutinesState.repeatDays['SAT']},\r\n        ];\r\n\r\n        /* state 선언 종료 */\r\n\r\n        /* 함수 선언 시작 */\r\n\r\n        const checkDate = dayArr.filter(data=>{\r\n            if(data['checkYn'] === \"Y\") return data\r\n        })\r\n\r\n        /* 함수 선언 종료 */\r\n\r\n    return(\r\n        <div className=\"edit-routines-input-Box\">\r\n        <RoutineDayModal \r\n        dayActiveBoolean={dayActiveBoolean} \r\n        setDayActiveBoolean={setDayActiveBoolean} \r\n        dayArr={dayArr}\r\n        editRoutinesState={editRoutinesState}\r\n        setEditRoutinesState={setEditRoutinesState}\r\n        position={position}\r\n        />\r\n        <RoutineDateModal \r\n        dateActiveBoolean={dateActiveBoolean}\r\n        setDateActiveBoolean={setDateActiveBoolean}\r\n        editRoutinesState={editRoutinesState}\r\n        setEditRoutinesState={setEditRoutinesState}\r\n        location={location}\r\n        />\r\n        <div className=\"routines-input-title-field\">\r\n            <div className=\"routines-input-startdate-field\" onClick={()=>{\r\n                setDateActiveBoolean(true)\r\n                setLocation(`date`)\r\n                }}>\r\n                <span>시작 날짜</span>\r\n                <input id=\"start-date-input\" className=\"routines-startdate-input\"  type=\"text\" value={editRoutinesState.date} readOnly /> \r\n            </div>\r\n            <div className=\"routines-input-enddate-field\"\r\n            onClick={()=>{\r\n                setDateActiveBoolean(true)\r\n                setLocation(`endRepeatDate`)\r\n                }} >\r\n                <span>종료 날짜</span>\r\n                <input id=\"end-date-input\" className=\"routines-enddate-input\" type=\"text\" value={editRoutinesState.endRepeatDate} readOnly /> \r\n            </div>\r\n            <div className=\"routines-input-day-field\" onClick={()=>{setDayActiveBoolean(true)}} >\r\n                <span className=\"routines-input-day-field-title\">반복 요일</span>\r\n                <div className=\"routines-day-text-wrap\">\r\n                    {checkDate.map((data)=>{\r\n                        return <span className=\"routines-day-text\" key={data.dayEng}>{data['dayKor']}</span>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Button type=\"submit\" className=\"routines-input-btn\" >등록</Button>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}","import React, {  useRef, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\n\r\n\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport EditRoutinesForm from './EditRoutinesForm';\r\n\r\n\r\nexport default function RoutinesTodos (props) {\r\n\r\n\r\n    const todos = props.todos; \r\n    const index = props.todos.todoId;\r\n    const isTodoSelected = props.isTodoSelected;\r\n    const [readOnly, setReadOnly] = useState(true);\r\n\r\n      \r\n    //엔터키 인식 readonly 변경\r\n    const enterKeyEventHandler = (e) => {\r\n        if(e.key === 'Enter' || e.code === 'NumpadEnter'){ \r\n            setReadOnly(true)\r\n        }\r\n    }\r\n  \r\n    // const readOnlyHandler = (index) => {\r\n    //     if (index === modalActiveIndex) {\r\n    //       setModalActiveIndex(null);\r\n    //     } else {\r\n    //       setModalActiveIndex(index);\r\n    //     }\r\n    //   }\r\n\r\n    return (\r\n        <div className=\"todos-list-box\" data-todos={todos} key={index}>\r\n                    <div className=\"goals-listItem-text-wrap\">\r\n                        {todos.check_yn === 'y' ?  <CheckBoxIcon className=\"todos-list-check-icon\" /> : <CheckBoxOutlineBlankIcon className=\"todos-list-check-icon\" /> }\r\n                        <TodoList \r\n                        todos={todos} \r\n                        index={index}\r\n                        readOnly={readOnly}\r\n                        setReadOnly={setReadOnly}\r\n                        isTodoSelected={isTodoSelected}\r\n                        enterKeyEventHandler={enterKeyEventHandler} />\r\n                        \r\n                    </div>\r\n                    {!readOnly ? (<>\r\n                    <EditRoutinesForm todos={todos} goalId={todos.goalId} todoId={todos.id} set\r\n                    ReadOnly={setReadOnly} /> \r\n                    </>) :\r\n                    null} \r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nconst TodoList = React.forwardRef((props, ref) => {\r\n  \r\n    const inputRef = useRef(null);\r\n    const todos = props.todos;\r\n    const index = parseInt(props.index-1);\r\n    const readOnly = props.readOnly;\r\n    const setReadOnly = props.setReadOnly;\r\n    const isTodoSelected = props.isTodoSelected;\r\n    \r\n    const todoSelectedHandler = () => {\r\n      setReadOnly(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <input\r\n        className=\"todos-list-input\" key={todos.todoId} id=\"todo-input\" type=\"text\" \r\n        maxLength=\"50\"\r\n        size={inputRef.current?.value.length}\r\n        ref={inputRef}\r\n        name={todos.title} \r\n        data-index={index}\r\n        data-orderno={todos.orderNo}\r\n        data-goalid={todos.goalId} \r\n        data-todoid={todos.todoId} \r\n        value={todos.title} \r\n        readOnly={readOnly}\r\n        onClick={todoSelectedHandler}\r\n        />\r\n        \r\n        </>\r\n        )\r\n})","import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Button } from \"@mui/material\";\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nimport RoutineDayModal from './RoutineDayModal';\r\nimport RoutineDateModal from './RoutineDateModal';\r\n\r\nimport { objDatesData, objTodosDataResult } from \"../../atoms/todoData\";\r\n\r\nexport default function CreateRoutinesForm (props) {\r\n\r\n    /* atom 선언 시작 */\r\n    const [dtDate, setDtDate] = useRecoilState(objDatesData);\r\n    const [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\n\r\n    /* atom 선언 끝 */\r\n\r\n    /* state 선언 시작 */\r\n\r\n    const goal_Id = props.goalId;\r\n    const todo_Id = props.todoId;\r\n    const orderNo = props.orderNo;\r\n    const setIsGoalSelected = props.setIsGoalSelected;\r\n    const todoDataArray = props.todoDataArray;\r\n\r\n    console.log(\"create goal_Id\", goal_Id, \"todo_Id\", todo_Id, \"orderNo\", orderNo)\r\n\r\n    let [dayActiveBoolean, setDayActiveBoolean] = useState(false);\r\n    let [dateActiveBoolean, setDateActiveBoolean] = useState(false);\r\n    let [location, setLocation] = useState(null)\r\n    //위의 location 처럼 create에서 작업한다는 신호\r\n    let position = 'create'\r\n\r\n    let [createRoutinesState, setCreatRoutinesState] = useState({\r\n        \"goalId\": goal_Id, //묶여있는 goal id\r\n        \"id\": todo_Id,\r\n        \"orderNo\": orderNo,\r\n        \"title\": \"\",\r\n        \"date\": dtDate.dtToday,\r\n        \"startRepeatDate\": dtDate.dtToday,\r\n        \"endRepeatDate\": dtDate.dtToday, //반복 종료 일자. 반복 없으면 date 와 값이 같거나 없음\r\n        \"repeatMonYn\":\"n\",\r\n        \"repeatTueYn\":\"n\",\r\n        \"repeatWenYn\":\"n\",\r\n        \"repeatThuYn\":\"n\",\r\n        \"repeatFriYn\":\"n\",\r\n        \"repeatSatYn\":\"n\",\r\n        \"repeatSunYn\":\"n\",\r\n        \"checkYn\": \"n\"\r\n      });\r\n      const dayArr = [\r\n        { dayEng : 'SUN', dayKor : '일', checkYn: createRoutinesState.repeatSunYn},\r\n        { dayEng : 'MON', dayKor : '월', checkYn: createRoutinesState.repeatMonYn},\r\n        { dayEng : 'TUE', dayKor : '화', checkYn: createRoutinesState.repeatTueYn},\r\n        { dayEng : 'WEN', dayKor : '수', checkYn: createRoutinesState.repeatWenYn},\r\n        { dayEng : 'THU', dayKor : '목', checkYn: createRoutinesState.repeatThuYn},\r\n        { dayEng : 'FRI', dayKor : '금', checkYn: createRoutinesState.repeatFriYn},\r\n        { dayEng : 'SAT', dayKor : '토', checkYn: createRoutinesState.repeatSatYn},\r\n      ];\r\n\r\n    /* state 선언 종료 */\r\n\r\n    /* 함수 선언 시작 */\r\n\r\n    const checkDate = dayArr.filter(data=>{\r\n        if(data['checkYn'] === \"y\") return data\r\n    })\r\n    \r\n\r\n\r\n    const routinesSubmit = (e) => {\r\n        const copy_todo_state = JSON.parse(JSON.stringify(dtTodos)); // dtTodos State 원본 카피        \r\n        copy_todo_state.map((data)=>{\r\n            if(data.id === goal_Id){\r\n                console.log(data.todos)\r\n                data.todos.push(createRoutinesState)\r\n            }\r\n        })\r\n        setDtTodos(copy_todo_state)\r\n        const newArr = Array(todoDataArray.length).fill(false);\r\n        setIsGoalSelected(newArr)\r\n    }\r\n    \r\n    /* 함수 선언 종료 */\r\n\r\n    return (\r\n        <div className=\"create-routines-input-Box\">\r\n        <RoutineDayModal \r\n        dayActiveBoolean={dayActiveBoolean} \r\n        setDayActiveBoolean={setDayActiveBoolean} \r\n        dayArr={dayArr}\r\n        createRoutinesState={createRoutinesState}\r\n        setCreatRoutinesState={setCreatRoutinesState}\r\n        position={position}\r\n\r\n        />\r\n        <RoutineDateModal \r\n        dateActiveBoolean={dateActiveBoolean}\r\n        setDateActiveBoolean={setDateActiveBoolean}\r\n        createRoutinesState={createRoutinesState}\r\n        setCreatRoutinesState={setCreatRoutinesState}\r\n        location={location}\r\n        />\r\n        <div className=\"routines-input-title-field\">\r\n                    <CheckBoxOutlineBlankIcon className=\"routines-input-check-icon\"/>\r\n                    <input id=\"todo-input\" className=\"routines-input-field\"  placeholder=\"할 일을 입력해주세요.\" type=\"text\" maxLength={\"50\"} \r\n                    onChange={(e)=>{\r\n                        setCreatRoutinesState({\r\n                            ...createRoutinesState, title: e.target.value\r\n                        })\r\n                    }}\r\n                    /> \r\n                </div>\r\n                <div className=\"routines-input-startdate-field\" onClick={()=>{\r\n                    setDateActiveBoolean(true)\r\n                    setLocation(`date`)\r\n                    }}>\r\n                    <span>시작 날짜</span>\r\n                    <input id=\"start-date-input\" className=\"routines-startdate-input\"  type=\"text\" value={createRoutinesState.date} readOnly /> \r\n                </div>\r\n                <div className=\"routines-input-enddate-field\"\r\n                onClick={()=>{\r\n                    setDateActiveBoolean(true)\r\n                    setLocation(`endRepeatDate`)\r\n                    }} >\r\n                    <span>종료 날짜</span>\r\n                    <input id=\"end-date-input\" className=\"routines-enddate-input\" type=\"text\" value={createRoutinesState.endRepeatDate} readOnly /> \r\n                </div>\r\n                <div className=\"routines-input-day-field\" onClick={()=>{setDayActiveBoolean(true)}} >\r\n                    <span className=\"routines-input-day-field-title\">반복 요일</span>\r\n                    <div className=\"routines-day-text-wrap\">\r\n                        {checkDate.map((data)=>{\r\n                            return <span className=\"routines-day-text\" key={data.dayEng}>{data['dayKor']}</span>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" className=\"routines-input-btn\" onClick={routinesSubmit}>등록</Button>\r\n        </div>\r\n    )\r\n\r\n}","import React, {  useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Button } from \"@mui/material\";\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { objTodosDataResult, objDatesData, } from \"../../atoms/todoData\";\r\nimport '../../stylesheets/Routines.css';\r\n\r\nimport RoutinesTodos from \"./RoutinesTodos\";\r\nimport CreateRoutinesForm from \"./CreateRoutinesForm\";\r\n\r\n\r\nexport default function Routines () {\r\n\r\n/* Hook 선언 시작 */\r\n\r\nlet history = useHistory();\r\n\r\n/* Hook 선언 종료 */\r\n\r\n/* atom 시작 */\r\n\r\nlet [dtTodos, setDtTodos] = useRecoilState(objTodosDataResult);\r\nlet todoDataArray = JSON.parse(JSON.stringify(dtTodos));\r\nlet dtDate = useRecoilValue(objDatesData);\r\n\r\n/* atom 종료 */\r\n\r\n/* state 선언 시작 */\r\n\r\nlet [isGoalSelected, setIsGoalSelected] = useState(Array(todoDataArray.length).fill(false) );\r\nlet [isTodoSelected, setIsTodoSelected] = useState(Array(todoDataArray.length).fill(false) );\r\n\r\n\r\n\r\n/* state 선언 종료 */\r\n\r\n/* 함수 선언 시작 */\r\n\r\nconst goalSelectedHandler = (e) => {\r\n    const idx = e.currentTarget.dataset.id;\r\n    const newArr = Array(todoDataArray.length).fill(false);\r\n    newArr[idx] = true;\r\n    setIsGoalSelected(newArr);\r\n}\r\n\r\n/* 함수 선언 끝 */\r\n\r\nreturn (\r\n<>\r\n    <div className=\"routines-wrap\">\r\n        {\r\n            todoDataArray.map((data, index) => {\r\n                console.log(\"routines data\",data)\r\n                return ( \r\n                    <div className=\"goals-list-box\" key={data.orderNo}> \r\n                        <Button className=\"goals-list-button\" id={data.orderNo} data-id={index} \r\n                        onClick={goalSelectedHandler}\r\n                        >\r\n                            <ReceiptIcon className=\"goals-list-icon\" />\r\n                                <div className=\"goals-list-text\" id={data.orderNo} name={data.orderNo} style={{ color:data.titleColor }}><p>{data.title}</p>\r\n                                </div>\r\n                                <p className=\"goals-list-plus-icon-wrap\">\r\n                                <AddCircleIcon className=\"goals-list-plus-icon\"/>\r\n                                </p>\r\n                        </Button>\r\n                        \r\n                    <div className=\"todos-list-cont\">\r\n                    {data.todos.map((data,index)=>{\r\n                        return(\r\n                            <React.Fragment key={data.id}>\r\n                                <RoutinesTodos todos={data} \r\n                                isTodoSelected={isTodoSelected}\r\n                                />\r\n                            </React.Fragment>\r\n                            \r\n                        )\r\n                    })}\r\n                    {isGoalSelected[index]? <CreateRoutinesForm \r\n                    goalId={data.id} \r\n                    todoId={data.todos.length+1} \r\n                    orderNo={data.todos.length+1} \r\n                    setIsGoalSelected={setIsGoalSelected} \r\n                    todoDataArray={todoDataArray} />: null}\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        \r\n    </div>\r\n\r\n</>\r\n);\r\n}\r\n","import React from 'react';\r\n\r\nimport {  Button } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\r\nimport AodOutlinedIcon from '@mui/icons-material/AodOutlined';\r\nimport ArticleOutlinedIcon from '@mui/icons-material/ArticleOutlined';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\n\r\nimport '../../stylesheets/Setting.css';\r\n\r\n\r\nexport default function Setting() {\r\n\r\n    /* 함수 시작 */\r\n\r\n  //컴포넌트로 이동 함수 (파라미터 추가)\r\n  const moveText = (e) => {\r\n    window.location.replace(`/text`)\r\n  }\r\n  const moveAnnouncements = (e) => {\r\n    window.location.replace(`/announcements`)\r\n  }\r\n  // 오픈소스 부분 추가 \r\n\r\n\r\n /* 함수 종료 */\r\n    \r\n    return (\r\n        <div className='setting-settings-list-wrap' >\r\n            <div className=\"setting-list-box\" >\r\n                \r\n                <Button className=\"setting-list-button\">\r\n                    <div className='setting-list-button-wrap'>\r\n                        <AccountCircleOutlinedIcon className=\"settings-list-icon\" fontSize=\"medium\" sx={{ color:\"black\"}} />\r\n                        <div className=\"settings-list-text\"><p>계정</p>\r\n                        </div>\r\n                    </div>\r\n                    <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n                </Button>\r\n                \r\n            \r\n            </div>\r\n            <Divider/>\r\n            \r\n            <div className=\"setting-list-box\" >\r\n                <Button className=\"setting-list-button\" >\r\n                    <div className='setting-list-button-wrap'>\r\n                        <AodOutlinedIcon className=\"settings-list-icon\" fontSize=\"medium\" sx={{ color:\"black\"}} />\r\n                        <div className=\"settings-list-text\"><p>화면</p>\r\n                        </div>\r\n                    </div>\r\n                    <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n                </Button>\r\n                \r\n            </div>\r\n            <Divider/>\r\n\r\n            <div className=\"setting-list-box\" >\r\n                <Button className=\"setting-list-button\" onClick={moveAnnouncements}>\r\n                    <div className='setting-list-button-wrap'>\r\n                        <ArticleOutlinedIcon className=\"settings-list-icon\" fontSize=\"medium\" sx={{ color:\"black\"}} />\r\n                        <div className=\"settings-list-text\"><p>공지사항</p>\r\n                        </div>\r\n                    </div>\r\n                    <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n                </Button>\r\n                \r\n            </div>\r\n            <Divider />\r\n\r\n            <div className=\"setting-list-box\" >\r\n                <Button className=\"setting-list-button\" onClick={moveText}>\r\n                    <div className='setting-list-button-wrap'>\r\n                        <InfoOutlinedIcon className=\"settings-list-icon\" fontSize=\"medium\" sx={{ color:\"black\"}} />\r\n                        <div className=\"settings-list-text\"><p>정보</p>\r\n                        </div>\r\n                    </div>\r\n                    <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n                </Button>\r\n                \r\n            </div>\r\n            <Divider />\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\n\r\nimport '../../stylesheets/Setting.css';\r\n\r\n\r\nexport default function TextInfo() {\r\n\r\n/* 함수 시작 */\r\n\r\n  //컴포넌트로 이동 함수 (파라미터 추가)\r\n  const moveTermuse = (e) => {\r\n    window.location.replace(`/termUse`)\r\n  }\r\n  const movePolicy = (e) => {\r\n    window.location.replace(`/policy`)\r\n  }\r\n  const moveAnnouncements = (e) => {\r\n    window.location.replace(`/`)\r\n  }\r\n\r\n /* 함수 종료 */\r\n\r\n    \r\n    return (\r\n        <div className='setting-settings-list-wrap' >\r\n            <Button className=\"setting-list-box\" onClick={moveTermuse} sx={{ color: \"black\" }}>\r\n                \r\n                <div className=\"setting-list-button\" >\r\n\r\n                    <div className=\"settings-list-text\"><p>이용약관</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n            \r\n            </Button>\r\n            <Divider/>\r\n            \r\n            <Button className=\"setting-list-box\" onClick={movePolicy} sx={{ color: \"black\" }}>\r\n                <div className=\"setting-list-button\" >\r\n                    \r\n                    <div className=\"settings-list-text\"><p>개인정보 정책</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n            </Button>\r\n            <Divider/>\r\n\r\n            <Button className=\"setting-list-box\" sx={{ color: \"black\" }}>\r\n                <div className=\"setting-list-button\" >\r\n                    \r\n                    <div className=\"settings-list-text\"><p>오픈소스</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                <NavigateNextIcon className=\"setting-list-arrow\" fontSize=\"small\" sx={{ color: \"lightgray\" }} />\r\n            </Button>\r\n            <Divider />\r\n\r\n    \r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport '../../stylesheets/More.css';\r\nimport BasicNavBar from '../nav/BasicNavBar';\r\n\r\nfunction TermUse(){\r\n\r\n    // 1) className='textOfUSe' 와 className='textOfPolicy' 의 -> 같은 링크, 다른 페이지 해결 하기 \r\n    // 2) 스크롤바 모양 변경 하기 \r\n    return (\r\n\r\n    <form className='formOfText'>\r\n      <BasicNavBar/>\r\n      <div className='textOfUse'>\r\n          \r\n        \"todo list\" Term of Use <br />\r\n        <br />\r\n        \"todo list\" and \"todo list\" related to the use of serviced related to the requirements are defined. <br />\r\n        <br />\r\n        This Privacy Policy (the \"Policy\") explains the way of treatment of the information which is \r\n        provided or collected in the websites on which this Policy is posted. <br />\r\n        <br />\r\n        In addition the Policy also explains the information which is provided or collected in the course of using the applications \r\n        of the Company which exist in the websites or platforms of other company. <br /> \r\n        <br />\r\n        Through this Policy, the Company regards personal information of the users as important and inform them of the purpose and method of Company's using the personal information \r\n        provided by the users and the measures taken by the Company for protection of those personal information. <br />\r\n        <br />\r\n        This Policy will be effective on the ___th day of ____, 2015 and, in case of modification thereof, the Company will make public notice of it through posting it on the bulletin board of \r\n        Company's website or individual notice through sending mails, fax or e-mails). <br />\r\n        <br />\r\n        1. Information to be collected and method of collection <br />\r\n        <br />\r\n        ① Personal information items to be collected <br />\r\n        Personal information items to be collected by the Company are as follows: <br />\r\n        • Information provided by the users <br />\r\n        The Company may collect the information directly provided by the users. <br />\r\n        [Option to select 'personal information items' in Appendix '1-1' of Personal Privacy Policy] <br />\r\n        • Information collected while the users use services <br />\r\n        Besides of information directly provided by the users, the Company may collect information in the course that the users use the service provided by the Company. <br />\r\n        [Option to select 'personal information items' in Appendix '1-2' of Personal Privacy Policy] <br />\r\n        <br />\r\n        ② Method of collection <br />\r\n        The Company collects the information of users in a way of the followings: <br />\r\n        [Option to select 'method of collection' in Appendix '2' of Personal Privacy Policy] <br />\r\n        <br />\r\n        2. Use of collected information <br />\r\n        The Company uses the collected information of users for the following purposes: <br />\r\n        [Option to select 'use of collected information' in Appendix '3' of Personal Privacy Policy] <br />\r\n        The Company agrees that it will obtain consent from the users, if the Company desires to use the information other than those expressly stated in this Policy. <br />\r\n        <br />\r\n        3. Sharing collected information <br />\r\n        Except for the following cases, the Company will not share personal information with a 3rd party: <br />\r\n        • when the Company shares the information with its affiliates, partners and service providers; <br />\r\n        [Option to select 'sharing of collected information' in Appendix '4-1' of Personal Privacy Policy] <br />\r\n        <br />\r\n        • when the users consent the sharing in advance; <br />\r\n        [Option to select 'sharing of collected information' in Appendix '4-2' of Personal Privacy Policy] <br />\r\n        <br />\r\n        • when the sharing is required by the laws <br />\r\n        - if required to be disclosed by the laws and regulations; or <br />\r\n        - if required to be disclosed by the investigative agencies for detecting crimes in accordance with the procedure and method as prescribed in the laws and regulations <br />\r\n        <br />\r\n        End.\r\n\r\n      </div>\r\n    </form>\r\n    )\r\n\r\n}\r\n\r\nexport default TermUse;","import React from 'react';\r\n\r\nimport '../../stylesheets/More.css';\r\nimport BasicNavBar from '../nav/BasicNavBar';\r\n\r\nfunction Policy(){\r\n\r\n    // 1) className='textOfUSe' 와 className='textOfPolicy' 의 -> 같은 링크, 다른 페이지 해결 하기 \r\n    // 2) 스크롤바 모양 변경 하기 \r\n    // 3) NavBar fontsize 변경 하기 \r\n    return (\r\n\r\n    <form className='formOfText'>\r\n      <BasicNavBar/>\r\n      <div className='textOfUse'>\r\n          \r\n      Personal Information Processing Policy (Privacy Policy) <br />\r\n      <br />\r\n      In accordance with Article 30 of the Personal Information Protection Act, \"todo list\" \r\n      has the following policies to protect personal information and effectively deal with personal information related \r\n      complaints. In order to smoothly handle complaints related to personal information, we have the following \r\n      policy. <br />\r\n      Based on this policy, each affiliate establishes its personal information processing policy for application. <br />\r\n      <br />\r\n      1. Purpose of Processing Personal Information <br />\r\n      \"todo list\" will do its best to protect personal information and guarantee the \r\n      customer’s rights. Shinhan Financial Group only holds the minimum amount of personal information required \r\n      for the following purposes: \"todo list\" collects and holds personal information based \r\n      on the relevant laws and regulations, subject to customer’s consent for the purpose of business processing \r\n      activities such as personnel management. <br />\r\n      <br />\r\n      2. Processing and Retention Period of Personal Information <br />\r\n      \"todo list\" processes and retains customer information in accordance with relevant \r\n      laws and regulations during the period in which the validity or liability remains or the value as evidentiary data \r\n      continues. <br />\r\n      <br />\r\n      3. Third party provision of personal information <br />\r\n      Customer information handled by \"todo list\" is provided only to the affiliates of \r\n      Shinhan Financial Group, as long as it is deemed acceptable in the relevant laws, such as the Financial Holding \r\n      Company Act. <br />\r\n      <br />\r\n      4. Consignment of personal information processing <br />\r\n      \"todo list\" is making efforts to protect personal information by clearly stipulating \r\n      compliance with related laws and regulations, prohibiting third parties from sharing personal information, and \r\n      signing and storing the contents of the agreement when it consigns personal information processing services. <br />\r\n      <br />\r\n      5. Rights, duties and methods of the information entity <br />\r\n      You may require us to view personal information processed by our company about you and children under the \r\n      age of 14 (legal guardian only). If you view your personal information, you may ask us to correct or delete the \r\n      personal information that is different from the fact or cannot be verified.\r\n      However, if another regulation specifies that certain personal information shall be collected, the request for \r\n      deleting the information cannot be processed. <br />\r\n      You may request us to suspend your personal information. However, in any of the following cases, the \r\n      Company may notify the customer of the concerned grounds and may refuse to suspend the processing. \r\n      Customers who view their personal information may request correction or deletion of personal information that \r\n      is not true or that cannot be verified and in the following cases: <br />\r\n      1 If there is a special regulation or if it is inevitable to comply with the statutory obligations <br />\r\n      2 If there is a risk of harming the life or body of another person or there is a possibility of unfairly infringing the \r\n      property and other benefits of another person. <br />\r\n      3 When it is difficult to transfer the contract, for instance: in cases where it is not possible to provide the \r\n      contracted service to the customer, if the personal information is not processed. And also if the customer \r\n      does not clearly indicate an intention to terminate the contract. <br />\r\n      (Form 1) Request of personal information for viewing, correction, deletion, suspension of data processing <br />\r\n      (Form 2) Power of attorney on Personal Information for viewing, correction, deletion, suspension of data \r\n      processing <br />\r\n      <br />\r\n      6. Personal information to be processed <br />\r\n      \"todo list\" handles information like customer names, unique identification numbers, addresses, \r\n      and contact information for business purposes, such as providing customer service for affiliates within the \r\n      \"todo list\" and personnel management of internal employees. <br />\r\n      <br />\r\n      7. Destruction of personal information <br />\r\n      Personal information of \"todo list\" is permanently deleted from electronic personal \r\n      information system at the time of achieving the purpose of processing or retention period. Personal information \r\n      on written document is shredded or incinerated. <br />\r\n      <br />\r\n      8. Measures to ensure the safety of personal information <br />\r\n      To secure the security of personal information, \"todo list\" handles personal \r\n      information processed electronically safely through measures like installing firewalls and controlling the access. <br />\r\n      Written personal information is stored in a safe deposit box or cabinet. It is strictly managed and controlled by \r\n      allowing access to only authorized employees. <br />\r\n      Risk pertaining to the handling of personal information is managed by the risk and compliance management \r\n      system of \"todo list\", and we are regularly reviewing the risks and taking mitigating actions to \r\n      prevent related risks. We also ensure the safety of personal information by applying the principle of zero\u0002tolerance in cases of breach of personal information based on the compliance management system. <br />\r\n      <br />\r\n      9. Change of personal information processing policy <br />\r\n      When Shinhan Financial Holding Company changes its policy on personal information, it discloses the timing \r\n      and enforcement of changes, continuously updates the changed details, and discloses modifications before and \r\n      after the changes so that customers can easily check the details of change. <br />\r\n      <br />\r\n      10. Remedial Actions on Infringement of rights <br />\r\n      \"todo list\" will do its best to protect the customer rights and prevent damages. <br />\r\n      In the event of leakage of personal information and infringement of rights, please contact the following \r\n      department. <br />\r\n      <br />\r\n      11. Personal Information Protection Manager <br />\r\n      The person who supervises personal information protection in accordance with Article 31 of the Personal \r\n      Information Protection Act shall be as follows. <br />\r\n      <br />\r\n      Announcemnet date : January 17, 2022 <br />\r\n      Effective date : January 17, 2022 <br />\r\n      <br />\r\n\r\n      </div>\r\n    </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Policy;","import React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport '../../stylesheets/More.css';\r\nimport BasicNavBar from '../nav/BasicNavBar';\r\n\r\nfunction Announce(){\r\n    \r\n// 전체 박스 요소 변경, 스타일 변경 \r\n    \r\n    return (\r\n\r\n    <form className='formOfAnnounce'>\r\n      <BasicNavBar/>\r\n      <Container maxWidth=\"lg\" className='textOfAnnounce'>\r\n\r\n        <Typography  color=\"text.primary\" variant=\"body2\">\r\n        Premium 구독 기능이 추가되었습니다. Premium 구독을 이용하시면 광고가 제거되고 추가\r\n        스티커를 이용하실 수 있으며 향후 Premium 사용자만을 위한 기능을 이용하실 수 있습니다.\r\n        모바일 기기에서 우측 상단의 세줄 버튼을 누르신 후 하단 메뉴 중에 Premium 메뉴를 이용\r\n        하시면 구독 페이지를 보실 수 있습니다. 많은 분들의 이용 부탁드립니다. 감사합니다. <br />\r\n        <br />\r\n        * 기존의 앱을 유료로 구매하셨던 분들은 @mail.com으로 유료 앱 구매 영수증을 전달 주시면\r\n        1년 구독 상품을 무료로 드립니다. 설정 앱 &gt; 계정 (최상단) &gt; 미디어 및 구입 항목 &gt;\r\n        계정보기 &gt; 구입 내역을 통해 확인하실 수 있는 투두 리스트 구입의 스크린샷을 전달 부탁드리며 \r\n        투두 리스트 계정 이메일 주소와 함께 부탁드립니다. 감사합니다. <br />\r\n        <br />\r\n            \r\n        </Typography>\r\n        <Typography color=\"text.secondary\" variant=\"body2\"> 2022. 1. 17.</Typography>\r\n        <Divider sx={{ margin:\"20px 0 20px 0\" }}/>\r\n        \r\n        <Typography  color=\"text.primary\" variant=\"body2\">\r\n        국내 통신사 문제로 이미지 파일 접근이 불가했던 문제가 해결되어 잘 동작하는 것을 확인했습니다. \r\n        혹시라도 스티커가 계속 보이지 않는 경우 앱 강제 종료 후 재실행을 부탁드리며 \r\n        추가 문의가 있으시면 언제나 문의하기 기능을 통해 말씀 부탁드립니다. 감사합니다. <br />\r\n        <br />\r\n            \r\n        </Typography>\r\n        <Typography color=\"text.secondary\" variant=\"body2\"> 2022. 1. 17.</Typography>\r\n        <Divider sx={{ margin:\"20px 0 20px 0\" }} />\r\n\r\n        <Typography  color=\"text.primary\" variant=\"body2\">\r\n        현재 국내 통신사 문제로 인해 스티커 및 사진 첨부에 대한 기능에 제한이 있습니다.\r\n        투두 리스트 측에선 상황을 계속 주시하며 조속히 해결될 수 있는 방안을 찾도록 노력하\r\n        겠습니다. 문제가 해결되는대로 앱 내의 공지사항을 통해 알려드리도록 하겠습니다. 감사합니다. <br />\r\n        <br />\r\n            \r\n        </Typography>\r\n        <Typography color=\"text.secondary\" variant=\"body2\"> 2022. 1. 17.</Typography>\r\n        <Divider sx={{ margin:\"20px 0 20px 0\" }} />\r\n      \r\n\r\n      </Container>\r\n    </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Announce;","/* eslint-disable */\r\n\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Button  } from \"@mui/material\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport { koKR } from '@mui/material/locale';\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\n\r\nimport Signin from \"./usercontrol/Signin\";\r\nimport Join from \"./usercontrol/Join\";\r\nimport BasicNavBar from \"./nav/BasicNavBar\";\r\nimport Goals from \"./goal/Goals\";\r\nimport Main from \"./main/Main\";\r\nimport OrderItem from \"./order/OrderItem\";\r\nimport GoalForm from \"./goal/GoalForm\";\r\nimport GoalEditForm from \"./goal/GoalEditForm\";\r\nimport ExploreSearch from \"./exploresearch/ExploreSearch\";\r\nimport Routines from \"./routines/Routines\";\r\nimport Setting from \"./nav/Setting\";\r\nimport Text from \"./tabmenu/Text\";\r\nimport TermUse from \"./tabmenu/TermUse\";\r\nimport Policy from \"./tabmenu/Policy\";\r\nimport Announce from \"./tabmenu/Announce\";\r\n\r\nimport \"../stylesheets/App.css\";\r\n\r\nimport { goalsData } from \"../atoms/todoData\";\r\n\r\nconst theme = createTheme({\r\n  components: {\r\n    MuiTypography: {\r\n      defaultProps: {\r\n        variantMapping: {\r\n          h1: 'h2',\r\n          h2: 'h2',\r\n          h3: 'h2',\r\n          h4: 'h2',\r\n          h5: 'h2',\r\n          h6: 'h2',\r\n          subtitle1: 'h2',\r\n          subtitle2: 'h2',\r\n          body1: 'span',\r\n          body2: 'span',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n    Link: {\r\n      color: '#222',\r\n    },\r\n    bolder: {\r\n      fontWeight: 600,\r\n    },\r\n    button: {\r\n\r\n    },\r\n  },\r\n  palette: {\r\n    btn: {\r\n      main: \"#f2f2f2\",\r\n      contrastText: \"#111\",\r\n    },\r\n    basicnav: {\r\n      main: \"#fefefe\",\r\n      contrastText: \"#111\",\r\n    },\r\n    mainnav: {\r\n      main: '#FAFAFA'\r\n    }\r\n  },\r\n  koKR,\r\n\r\n});\r\n\r\nfunction App() {\r\n  \r\n  /* Hook 선언 시작 */\r\n  \r\n  let history = useHistory();\r\n\r\n\r\n  /* Hook 선언 끝 */\r\n\r\n\r\n  /* 함수 선언 시작 */\r\n\r\n\r\n  /* 함수 선언 끝 */\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className=\"App\">\r\n            <div className=\"header\">\r\n              <img className=\"main_img\" src=\"./images/todomate.jpg\" />\r\n              <h1>todo mate</h1>\r\n              <h3>할 일을 작성, 계획, 관리하세요.</h3>\r\n            </div>\r\n            <div className=\"start_btn\">\r\n              <Button \r\n                className=\"join_link_btn\" \r\n                color=\"btn\"\r\n                variant=\"contained\" \r\n                sx={{ boxShadow: 'none'}}\r\n                onClick={() => {\r\n                  history.push(\"/join\");\r\n                }}\r\n              >\r\n                가입하기\r\n              </Button>\r\n              <Button\r\n                className=\"signin_ link_btn\"\r\n                color=\"btn\"\r\n                variant=\"contained\"\r\n                sx={{ boxShadow: 'none'}}\r\n                onClick={() => {\r\n                  history.push(\"/signin\");\r\n                }}\r\n              >\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route exact path=\"/main\">\r\n          <Main />\r\n        </Route>\r\n        <Route exact path=\"/join\">\r\n        <BasicNavBar/>\r\n          <Join />\r\n        </Route>\r\n        <Route exact path=\"/signin\">\r\n        <BasicNavBar/>\r\n          <Signin />\r\n        </Route>\r\n        <Route exact path=\"/goals\">\r\n        <BasicNavBar/>\r\n          <Goals  />\r\n        </Route>\r\n        <Route exact path=\"/goals/goalForm\">\r\n         <BasicNavBar/> \r\n         <GoalForm />  \r\n        </Route>\r\n        <Route exact path=\"/goals/goalEditForm/:originID\">\r\n        <BasicNavBar/> \r\n         <GoalEditForm />  \r\n        </Route>\r\n        <Route exact path=\"/orderitem\">\r\n        <BasicNavBar/> \r\n         <OrderItem />  \r\n        </Route>\r\n        <Route exact path=\"/routines\">\r\n        <BasicNavBar/> \r\n         <Routines />  \r\n        </Route>\r\n        <Route exact path=\"/exploreSearch\">\r\n        <BasicNavBar/>\r\n          <ExploreSearch />\r\n        </Route>\r\n        <Route exact path=\"/setting\">\r\n        <BasicNavBar/>\r\n          <Setting />\r\n        </Route>\r\n        <Route exact path=\"/text\">\r\n        <BasicNavBar/>\r\n          <Text />\r\n        </Route>\r\n        <Route exact path=\"/termUse\" component={TermUse}/>\r\n        <Route exact path=\"/policy\" component={Policy}/>\r\n        <Route exact path=\"/announcements\" component={Announce}/>\r\n        </Switch>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <RecoilRoot>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </RecoilRoot>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}